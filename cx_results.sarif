{"$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"Checkmarx One","version":"1.0","informationUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","rules":[{"id":"CVE-2023-42282 (containers)","name":"Cve202342282","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"An issue in NPM ip package 0.0.2 through 2.0.1 allows an attacker to execute arbitrary code and obtain sensitive information via the \u0026#34;isPublic()\u0026#34; function.","markdown":"An issue in NPM ip package 0.0.2 through 2.0.1 allows an attacker to execute arbitrary code and obtain sensitive information via the \u0026#34;isPublic()\u0026#34; function."},"fullDescription":{"text":"An issue in NPM ip package 0.0.2 through 2.0.1 allows an attacker to execute arbitrary code and obtain sensitive information via the \u0026#34;isPublic()\u0026#34; function."},"properties":{"security-severity":"9.0","name":"Cve202342282","id":"CVE-2023-42282 (containers)","description":"An issue in NPM ip package 0.0.2 through 2.0.1 allows an attacker to execute arbitrary code and obtain sensitive information via the \u0026#34;isPublic()\u0026#34; function.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2025-6545 (sca)","name":"Cve20256545","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Improper Input Validation vulnerability in pbkdf2 allows signature spoofing by improper validation. This vulnerability is associated with program files \u0026#34;lib/to-buffer.Js\u0026#34;. This issue affects pbkdf2 versions 3.0.10 through 3.1.2.\n\n","markdown":"Improper Input Validation vulnerability in pbkdf2 allows signature spoofing by improper validation. This vulnerability is associated with program files \u0026#34;lib/to-buffer.Js\u0026#34;. This issue affects pbkdf2 versions 3.0.10 through 3.1.2.\n\n"},"fullDescription":{"text":"Improper Input Validation vulnerability in pbkdf2 allows signature spoofing by improper validation. This vulnerability is associated with program files \u0026#34;lib/to-buffer.Js\u0026#34;. This issue affects pbkdf2 versions 3.0.10 through 3.1.2.\n\n"},"properties":{"security-severity":"9.0","name":"Cve20256545","id":"CVE-2025-6545 (sca)","description":"Improper Input Validation vulnerability in pbkdf2 allows signature spoofing by improper validation. This vulnerability is associated with program files \u0026#34;lib/to-buffer.Js\u0026#34;. This issue affects pbkdf2 versions 3.0.10 through 3.1.2.\n\n","tags":["security","checkmarx","sca"]}},{"id":"CVE-2025-6547 (sca)","name":"Cve20256547","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Improper Input Validation vulnerability in pbkdf2 allows Signature Spoofing by Improper Validation. This issue affects versions through 3.1.2.","markdown":"Improper Input Validation vulnerability in pbkdf2 allows Signature Spoofing by Improper Validation. This issue affects versions through 3.1.2."},"fullDescription":{"text":"Improper Input Validation vulnerability in pbkdf2 allows Signature Spoofing by Improper Validation. This issue affects versions through 3.1.2."},"properties":{"security-severity":"9.0","name":"Cve20256547","id":"CVE-2025-6547 (sca)","description":"Improper Input Validation vulnerability in pbkdf2 allows Signature Spoofing by Improper Validation. This issue affects versions through 3.1.2.","tags":["security","checkmarx","sca"]}},{"id":"CVE-2024-21538 (containers)","name":"Cve202421538","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.","markdown":"Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string."},"fullDescription":{"text":"Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string."},"properties":{"security-severity":"7.0","name":"Cve202421538","id":"CVE-2024-21538 (containers)","description":"Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2024-29415 (containers)","name":"Cve202429415","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"The ip package 0.0.2 through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via \u0026#34;isPublic()\u0026#34;. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.","markdown":"The ip package 0.0.2 through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via \u0026#34;isPublic()\u0026#34;. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282."},"fullDescription":{"text":"The ip package 0.0.2 through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via \u0026#34;isPublic()\u0026#34;. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282."},"properties":{"security-severity":"7.0","name":"Cve202429415","id":"CVE-2024-29415 (containers)","description":"The ip package 0.0.2 through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via \u0026#34;isPublic()\u0026#34;. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2024-4741 (containers)","name":"Cve20244741","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Calling the OpenSSL API function \u0026#34;SSL_free_buffers\u0026#34; may cause memory to be accessed that was previously freed in some situations.\n\nThe first scenario occurs when a record header has been received from the network and processed by OpenSSL, but the full record body is yet to arrive. The second scenario occurs when a full record containing application data has been received and processed by OpenSSL, but the application has read only a part of this data. \n\nIn these cases, a call to \u0026#34;SSL_free_buffers\u0026#34; will succeed even though the buffer is still in use.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 3.0 versions prior to 3.0.14, 3.1 versions prior to 3.1.6, 3.2 versions prior to 3.2.2, 3.3 versions prior to 3.3.1 and 1.1.1 versions prior to 1.1.1y are affected by this issue.","markdown":"Calling the OpenSSL API function \u0026#34;SSL_free_buffers\u0026#34; may cause memory to be accessed that was previously freed in some situations.\n\nThe first scenario occurs when a record header has been received from the network and processed by OpenSSL, but the full record body is yet to arrive. The second scenario occurs when a full record containing application data has been received and processed by OpenSSL, but the application has read only a part of this data. \n\nIn these cases, a call to \u0026#34;SSL_free_buffers\u0026#34; will succeed even though the buffer is still in use.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 3.0 versions prior to 3.0.14, 3.1 versions prior to 3.1.6, 3.2 versions prior to 3.2.2, 3.3 versions prior to 3.3.1 and 1.1.1 versions prior to 1.1.1y are affected by this issue."},"fullDescription":{"text":"Calling the OpenSSL API function \u0026#34;SSL_free_buffers\u0026#34; may cause memory to be accessed that was previously freed in some situations.\n\nThe first scenario occurs when a record header has been received from the network and processed by OpenSSL, but the full record body is yet to arrive. The second scenario occurs when a full record containing application data has been received and processed by OpenSSL, but the application has read only a part of this data. \n\nIn these cases, a call to \u0026#34;SSL_free_buffers\u0026#34; will succeed even though the buffer is still in use.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 3.0 versions prior to 3.0.14, 3.1 versions prior to 3.1.6, 3.2 versions prior to 3.2.2, 3.3 versions prior to 3.3.1 and 1.1.1 versions prior to 1.1.1y are affected by this issue."},"properties":{"security-severity":"7.0","name":"Cve20244741","id":"CVE-2024-4741 (containers)","description":"Calling the OpenSSL API function \u0026#34;SSL_free_buffers\u0026#34; may cause memory to be accessed that was previously freed in some situations.\n\nThe first scenario occurs when a record header has been received from the network and processed by OpenSSL, but the full record body is yet to arrive. The second scenario occurs when a full record containing application data has been received and processed by OpenSSL, but the application has read only a part of this data. \n\nIn these cases, a call to \u0026#34;SSL_free_buffers\u0026#34; will succeed even though the buffer is still in use.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 3.0 versions prior to 3.0.14, 3.1 versions prior to 3.1.6, 3.2 versions prior to 3.2.2, 3.3 versions prior to 3.3.1 and 1.1.1 versions prior to 1.1.1y are affected by this issue.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2024-5535 (containers)","name":"Cve20245535","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Calling the OpenSSL API function \u0026#34;SSL_select_next_proto\u0026#34; with an empty supported client protocol buffer may cause a crash or memory content to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application behavior or a crash. In particular, this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer, leading to a loss of confidentiality. However, only applications that directly call the \u0026#34;SSL_select_next_proto\u0026#34; function with a 0-length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function \u0026#34;SSL_select_next_proto\u0026#34; is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardized and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The \u0026#34;SSL_select_next_proto\u0026#34; function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists, it returns the first item to the client list. In either case, it will signal whether an overlap between the two lists was found. In the case where \u0026#34;SSL_select_next_proto\u0026#34; is called with a zero-length client list, it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server-side application callback for ALPN or a client-side application callback for NPN. In the case of ALPN, the list of protocols supplied by the client is guaranteed by libssl to never be zero. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case, if the \u0026#34;SSL_select_next_proto\u0026#34; function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero-length server list, has accidentally passed that zero-length server list in the \u0026#34;client/client_len\u0026#34; parameters, and has additionally failed to correctly handle a \u0026#34;no overlap\u0026#34; response (which would normally result in a handshake failure in ALPN), then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However, if the \u0026#34;SSL_select_next_proto\u0026#34; function is accidentally called with a \u0026#34;client_len\u0026#34; of 0, then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol, then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control, making active exploitation unlikely. This issue affects the openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.14, 3.1.0-alpha1 through 3.1.6, 3.2.0-alpha1 through 3.2.2, and 3.3.0-alpha1 through 3.3.1.","markdown":"Calling the OpenSSL API function \u0026#34;SSL_select_next_proto\u0026#34; with an empty supported client protocol buffer may cause a crash or memory content to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application behavior or a crash. In particular, this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer, leading to a loss of confidentiality. However, only applications that directly call the \u0026#34;SSL_select_next_proto\u0026#34; function with a 0-length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function \u0026#34;SSL_select_next_proto\u0026#34; is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardized and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The \u0026#34;SSL_select_next_proto\u0026#34; function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists, it returns the first item to the client list. In either case, it will signal whether an overlap between the two lists was found. In the case where \u0026#34;SSL_select_next_proto\u0026#34; is called with a zero-length client list, it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server-side application callback for ALPN or a client-side application callback for NPN. In the case of ALPN, the list of protocols supplied by the client is guaranteed by libssl to never be zero. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case, if the \u0026#34;SSL_select_next_proto\u0026#34; function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero-length server list, has accidentally passed that zero-length server list in the \u0026#34;client/client_len\u0026#34; parameters, and has additionally failed to correctly handle a \u0026#34;no overlap\u0026#34; response (which would normally result in a handshake failure in ALPN), then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However, if the \u0026#34;SSL_select_next_proto\u0026#34; function is accidentally called with a \u0026#34;client_len\u0026#34; of 0, then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol, then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control, making active exploitation unlikely. This issue affects the openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.14, 3.1.0-alpha1 through 3.1.6, 3.2.0-alpha1 through 3.2.2, and 3.3.0-alpha1 through 3.3.1."},"fullDescription":{"text":"Calling the OpenSSL API function \u0026#34;SSL_select_next_proto\u0026#34; with an empty supported client protocol buffer may cause a crash or memory content to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application behavior or a crash. In particular, this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer, leading to a loss of confidentiality. However, only applications that directly call the \u0026#34;SSL_select_next_proto\u0026#34; function with a 0-length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function \u0026#34;SSL_select_next_proto\u0026#34; is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardized and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The \u0026#34;SSL_select_next_proto\u0026#34; function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists, it returns the first item to the client list. In either case, it will signal whether an overlap between the two lists was found. In the case where \u0026#34;SSL_select_next_proto\u0026#34; is called with a zero-length client list, it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server-side application callback for ALPN or a client-side application callback for NPN. In the case of ALPN, the list of protocols supplied by the client is guaranteed by libssl to never be zero. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case, if the \u0026#34;SSL_select_next_proto\u0026#34; function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero-length server list, has accidentally passed that zero-length server list in the \u0026#34;client/client_len\u0026#34; parameters, and has additionally failed to correctly handle a \u0026#34;no overlap\u0026#34; response (which would normally result in a handshake failure in ALPN), then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However, if the \u0026#34;SSL_select_next_proto\u0026#34; function is accidentally called with a \u0026#34;client_len\u0026#34; of 0, then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol, then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control, making active exploitation unlikely. This issue affects the openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.14, 3.1.0-alpha1 through 3.1.6, 3.2.0-alpha1 through 3.2.2, and 3.3.0-alpha1 through 3.3.1."},"properties":{"security-severity":"7.0","name":"Cve20245535","id":"CVE-2024-5535 (containers)","description":"Calling the OpenSSL API function \u0026#34;SSL_select_next_proto\u0026#34; with an empty supported client protocol buffer may cause a crash or memory content to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application behavior or a crash. In particular, this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer, leading to a loss of confidentiality. However, only applications that directly call the \u0026#34;SSL_select_next_proto\u0026#34; function with a 0-length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function \u0026#34;SSL_select_next_proto\u0026#34; is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardized and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The \u0026#34;SSL_select_next_proto\u0026#34; function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists, it returns the first item to the client list. In either case, it will signal whether an overlap between the two lists was found. In the case where \u0026#34;SSL_select_next_proto\u0026#34; is called with a zero-length client list, it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server-side application callback for ALPN or a client-side application callback for NPN. In the case of ALPN, the list of protocols supplied by the client is guaranteed by libssl to never be zero. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case, if the \u0026#34;SSL_select_next_proto\u0026#34; function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero-length server list, has accidentally passed that zero-length server list in the \u0026#34;client/client_len\u0026#34; parameters, and has additionally failed to correctly handle a \u0026#34;no overlap\u0026#34; response (which would normally result in a handshake failure in ALPN), then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However, if the \u0026#34;SSL_select_next_proto\u0026#34; function is accidentally called with a \u0026#34;client_len\u0026#34; of 0, then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol, then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control, making active exploitation unlikely. This issue affects the openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.14, 3.1.0-alpha1 through 3.1.6, 3.2.0-alpha1 through 3.2.2, and 3.3.0-alpha1 through 3.3.1.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2024-6119 (containers)","name":"Cve20246119","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don\u0026#39;t perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.","markdown":"Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don\u0026#39;t perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."},"fullDescription":{"text":"Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don\u0026#39;t perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue."},"properties":{"security-severity":"7.0","name":"Cve20246119","id":"CVE-2024-6119 (containers)","description":"Issue summary: Applications performing certificate name checks (e.g., TLS\nclients checking server certificates) may attempt to read an invalid memory\naddress resulting in abnormal termination of the application process.\n\nImpact summary: Abnormal termination of an application can a cause a denial of\nservice.\n\nApplications performing certificate name checks (e.g., TLS clients checking\nserver certificates) may attempt to read an invalid memory address when\ncomparing the expected name with an `otherName` subject alternative name of an\nX.509 certificate. This may result in an exception that terminates the\napplication program.\n\nNote that basic certificate chain validation (signatures, dates, ...) is not\naffected, the denial of service can occur only when the application also\nspecifies an expected DNS name, Email address or IP address.\n\nTLS servers rarely solicit client certificates, and even when they do, they\ngenerally don\u0026#39;t perform a name check against a reference identifier (expected\nidentity), but rather extract the presented identity after checking the\ncertificate chain.  So TLS servers are generally not affected and the severity\nof the issue is Moderate.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2025-26519 (containers)","name":"Cve202526519","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.","markdown":"musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8."},"fullDescription":{"text":"musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8."},"properties":{"security-severity":"7.0","name":"Cve202526519","id":"CVE-2025-26519 (containers)","description":"musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.","tags":["security","checkmarx","containers"]}},{"id":"Cxdca8e59f-8bfe (sca)","name":"Cxdca8e59f8bfe","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used.","markdown":"In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used."},"fullDescription":{"text":"In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used."},"properties":{"security-severity":"7.0","name":"Cxdca8e59f8bfe","id":"Cxdca8e59f-8bfe (sca)","description":"In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used.","tags":["security","checkmarx","sca"]}},{"id":"Seccomp Profile Is Not Configured - f377b83e-bd07-4f48-a591-60c82b14a78b [Taken from query_id] (kics)","name":"Seccomp Profile Is Not Configured","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.seccompProfile.type is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.seccompProfile.type should be defined","markdown":"Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.seccompProfile.type is undefined \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.seccompProfile.type should be defined"},"fullDescription":{"text":"Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.seccompProfile.type is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.seccompProfile.type should be defined"},"properties":{"security-severity":"4.0","name":"Seccomp Profile Is Not Configured","id":"Seccomp Profile Is Not Configured - f377b83e-bd07-4f48-a591-60c82b14a78b [Taken from query_id] (kics)","description":"Containers should be configured with a secure Seccomp profile to restrict potentially dangerous syscalls Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.seccompProfile.type is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.seccompProfile.type should be defined","tags":["security","checkmarx","kics"]}},{"id":"CVE-2023-42363 (containers)","name":"Cve202342363","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.","markdown":"A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."},"fullDescription":{"text":"A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1."},"properties":{"security-severity":"4.0","name":"Cve202342363","id":"CVE-2023-42363 (containers)","description":"A use-after-free vulnerability was discovered in xasprintf function in xfuncs_printf.c:344 in BusyBox v.1.36.1.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2023-42364 (containers)","name":"Cve202342364","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.","markdown":"A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."},"fullDescription":{"text":"A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function."},"properties":{"security-severity":"4.0","name":"Cve202342364","id":"CVE-2023-42364 (containers)","description":"A use-after-free vulnerability in BusyBox v.1.36.1 allows attackers to cause a denial of service via a crafted awk pattern in the awk.c evaluate function.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2023-42365 (containers)","name":"Cve202342365","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.","markdown":"A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."},"fullDescription":{"text":"A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function."},"properties":{"security-severity":"4.0","name":"Cve202342365","id":"CVE-2023-42365 (containers)","description":"A use-after-free vulnerability was discovered in BusyBox v.1.36.1 via a crafted awk pattern in the awk.c copyvar function.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2023-42366 (containers)","name":"Cve202342366","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.","markdown":"A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."},"fullDescription":{"text":"A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159."},"properties":{"security-severity":"4.0","name":"Cve202342366","id":"CVE-2023-42366 (containers)","description":"A heap-buffer-overflow was discovered in BusyBox v.1.36.1 in the next_token function at awk.c:1159.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2024-13176 (containers)","name":"Cve202413176","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation in OpenSSL. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around `300` nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular, the `NIST P-521` curve is affected. To be able to measure this leak, the attacker process must either be located on the same physical computer or must have a very fast network connection with low latency. For that reason, the severity of this vulnerability is low. This issue affects openssl package through 3.0.15, 3.1.0-alpha1 through 3.1.7, 3.2.0-alpha1 through 3.2.3, 3.3.0-alpha1 through 3.3.2, and 3.4.0-alpha1 through 3.4.0. Note: This vulnerability also fixed in 1.0.2zl , and 1.1.1zb only for premium support customers.","markdown":"Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation in OpenSSL. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around `300` nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular, the `NIST P-521` curve is affected. To be able to measure this leak, the attacker process must either be located on the same physical computer or must have a very fast network connection with low latency. For that reason, the severity of this vulnerability is low. This issue affects openssl package through 3.0.15, 3.1.0-alpha1 through 3.1.7, 3.2.0-alpha1 through 3.2.3, 3.3.0-alpha1 through 3.3.2, and 3.4.0-alpha1 through 3.4.0. Note: This vulnerability also fixed in 1.0.2zl , and 1.1.1zb only for premium support customers."},"fullDescription":{"text":"Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation in OpenSSL. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around `300` nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular, the `NIST P-521` curve is affected. To be able to measure this leak, the attacker process must either be located on the same physical computer or must have a very fast network connection with low latency. For that reason, the severity of this vulnerability is low. This issue affects openssl package through 3.0.15, 3.1.0-alpha1 through 3.1.7, 3.2.0-alpha1 through 3.2.3, 3.3.0-alpha1 through 3.3.2, and 3.4.0-alpha1 through 3.4.0. Note: This vulnerability also fixed in 1.0.2zl , and 1.1.1zb only for premium support customers."},"properties":{"security-severity":"4.0","name":"Cve202413176","id":"CVE-2024-13176 (containers)","description":"Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation in OpenSSL. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around `300` nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular, the `NIST P-521` curve is affected. To be able to measure this leak, the attacker process must either be located on the same physical computer or must have a very fast network connection with low latency. For that reason, the severity of this vulnerability is low. This issue affects openssl package through 3.0.15, 3.1.0-alpha1 through 3.1.7, 3.2.0-alpha1 through 3.2.3, 3.3.0-alpha1 through 3.3.2, and 3.4.0-alpha1 through 3.4.0. Note: This vulnerability also fixed in 1.0.2zl , and 1.1.1zb only for premium support customers.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2024-28863 (containers)","name":"Cve202428863","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders.","markdown":"node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders."},"fullDescription":{"text":"node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders."},"properties":{"security-severity":"4.0","name":"Cve202428863","id":"CVE-2024-28863 (containers)","description":"node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2024-4603 (containers)","name":"Cve20244603","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"In openssl Applications that use the functions \u0026#34;EVP_PKEY_param_check()\u0026#34;\nor \u0026#34;EVP_PKEY_public_check()\u0026#34; to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions \u0026#34;EVP_PKEY_param_check()\u0026#34; or \u0026#34;EVP_PKEY_public_check()\u0026#34; perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (\u0026#34;p\u0026#34; parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls \u0026#34;EVP_PKEY_param_check()\u0026#34; or \u0026#34;EVP_PKEY_public_check()\u0026#34;\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL \u0026#34;pkey\u0026#34; and \u0026#34;pkeyparam\u0026#34; command line applications\nwhen using the \u0026#34;-check\u0026#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThis affects versions openssl-3.0.0-alpha1 through openssl-3.0.13 , openssl-3.1.0-alpha1 through openssl-3.1.5, openssl-3.2.0-alpha1 through openssl-3.2.1 and openssl-3.3.0-alpha1 through openssl-3.3.0.","markdown":"In openssl Applications that use the functions \u0026#34;EVP_PKEY_param_check()\u0026#34;\nor \u0026#34;EVP_PKEY_public_check()\u0026#34; to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions \u0026#34;EVP_PKEY_param_check()\u0026#34; or \u0026#34;EVP_PKEY_public_check()\u0026#34; perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (\u0026#34;p\u0026#34; parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls \u0026#34;EVP_PKEY_param_check()\u0026#34; or \u0026#34;EVP_PKEY_public_check()\u0026#34;\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL \u0026#34;pkey\u0026#34; and \u0026#34;pkeyparam\u0026#34; command line applications\nwhen using the \u0026#34;-check\u0026#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThis affects versions openssl-3.0.0-alpha1 through openssl-3.0.13 , openssl-3.1.0-alpha1 through openssl-3.1.5, openssl-3.2.0-alpha1 through openssl-3.2.1 and openssl-3.3.0-alpha1 through openssl-3.3.0."},"fullDescription":{"text":"In openssl Applications that use the functions \u0026#34;EVP_PKEY_param_check()\u0026#34;\nor \u0026#34;EVP_PKEY_public_check()\u0026#34; to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions \u0026#34;EVP_PKEY_param_check()\u0026#34; or \u0026#34;EVP_PKEY_public_check()\u0026#34; perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (\u0026#34;p\u0026#34; parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls \u0026#34;EVP_PKEY_param_check()\u0026#34; or \u0026#34;EVP_PKEY_public_check()\u0026#34;\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL \u0026#34;pkey\u0026#34; and \u0026#34;pkeyparam\u0026#34; command line applications\nwhen using the \u0026#34;-check\u0026#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThis affects versions openssl-3.0.0-alpha1 through openssl-3.0.13 , openssl-3.1.0-alpha1 through openssl-3.1.5, openssl-3.2.0-alpha1 through openssl-3.2.1 and openssl-3.3.0-alpha1 through openssl-3.3.0."},"properties":{"security-severity":"4.0","name":"Cve20244603","id":"CVE-2024-4603 (containers)","description":"In openssl Applications that use the functions \u0026#34;EVP_PKEY_param_check()\u0026#34;\nor \u0026#34;EVP_PKEY_public_check()\u0026#34; to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions \u0026#34;EVP_PKEY_param_check()\u0026#34; or \u0026#34;EVP_PKEY_public_check()\u0026#34; perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (\u0026#34;p\u0026#34; parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls \u0026#34;EVP_PKEY_param_check()\u0026#34; or \u0026#34;EVP_PKEY_public_check()\u0026#34;\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL \u0026#34;pkey\u0026#34; and \u0026#34;pkeyparam\u0026#34; command line applications\nwhen using the \u0026#34;-check\u0026#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThis affects versions openssl-3.0.0-alpha1 through openssl-3.0.13 , openssl-3.1.0-alpha1 through openssl-3.1.5, openssl-3.2.0-alpha1 through openssl-3.2.1 and openssl-3.3.0-alpha1 through openssl-3.3.0.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2024-9143 (containers)","name":"Cve20249143","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"The vulnerability involves the use of low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial, which can result in out-of-bounds memory reads or writes. The affected APIs include \u0026#34;EC_GROUP_new_curve_GF2m()\u0026#34;, \u0026#34;EC_GROUP_new_from_params()\u0026#34;, and various \u0026#34;BN_GF2m_*()\u0026#34; functions.\n\nWhile out-of-bounds memory writes could lead to application crashes or even potential remote code execution, the likelihood of a vulnerable application is considered low. This is because protocols that employ Elliptic Curve Cryptography generally use \u0026#34;named curves,\u0026#34; or if explicit curve parameters are supported, they rely on X9.62 encoding, which does not permit problematic input values. X9.62 encoding is also used for ECC keys in X.509 certificates, making the occurrence of problematic inputs in that context unlikely. Applications utilizing \u0026#34;exotic\u0026#34; explicit binary (GF(2^m)) curve parameters that allow the representation of invalid field polynomials with a zero constant term may encounter abrupt termination due to array bounds violations. While remote code execution cannot be easily ruled out, it remains a less likely scenario.\n\nThe vulnerability affects openssl versions 1.0.2-x prior to 1.0.2zl, 1.1.x prior to 1.1.1zb, 3.0.x prior to 3.0.16, 3.1.x prior to 3.1.8, 3.2.x prior to 3.2.4, 3.3.x prior to 3.3.3, and 3.4.x prior to 3.4.0.","markdown":"The vulnerability involves the use of low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial, which can result in out-of-bounds memory reads or writes. The affected APIs include \u0026#34;EC_GROUP_new_curve_GF2m()\u0026#34;, \u0026#34;EC_GROUP_new_from_params()\u0026#34;, and various \u0026#34;BN_GF2m_*()\u0026#34; functions.\n\nWhile out-of-bounds memory writes could lead to application crashes or even potential remote code execution, the likelihood of a vulnerable application is considered low. This is because protocols that employ Elliptic Curve Cryptography generally use \u0026#34;named curves,\u0026#34; or if explicit curve parameters are supported, they rely on X9.62 encoding, which does not permit problematic input values. X9.62 encoding is also used for ECC keys in X.509 certificates, making the occurrence of problematic inputs in that context unlikely. Applications utilizing \u0026#34;exotic\u0026#34; explicit binary (GF(2^m)) curve parameters that allow the representation of invalid field polynomials with a zero constant term may encounter abrupt termination due to array bounds violations. While remote code execution cannot be easily ruled out, it remains a less likely scenario.\n\nThe vulnerability affects openssl versions 1.0.2-x prior to 1.0.2zl, 1.1.x prior to 1.1.1zb, 3.0.x prior to 3.0.16, 3.1.x prior to 3.1.8, 3.2.x prior to 3.2.4, 3.3.x prior to 3.3.3, and 3.4.x prior to 3.4.0."},"fullDescription":{"text":"The vulnerability involves the use of low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial, which can result in out-of-bounds memory reads or writes. The affected APIs include \u0026#34;EC_GROUP_new_curve_GF2m()\u0026#34;, \u0026#34;EC_GROUP_new_from_params()\u0026#34;, and various \u0026#34;BN_GF2m_*()\u0026#34; functions.\n\nWhile out-of-bounds memory writes could lead to application crashes or even potential remote code execution, the likelihood of a vulnerable application is considered low. This is because protocols that employ Elliptic Curve Cryptography generally use \u0026#34;named curves,\u0026#34; or if explicit curve parameters are supported, they rely on X9.62 encoding, which does not permit problematic input values. X9.62 encoding is also used for ECC keys in X.509 certificates, making the occurrence of problematic inputs in that context unlikely. Applications utilizing \u0026#34;exotic\u0026#34; explicit binary (GF(2^m)) curve parameters that allow the representation of invalid field polynomials with a zero constant term may encounter abrupt termination due to array bounds violations. While remote code execution cannot be easily ruled out, it remains a less likely scenario.\n\nThe vulnerability affects openssl versions 1.0.2-x prior to 1.0.2zl, 1.1.x prior to 1.1.1zb, 3.0.x prior to 3.0.16, 3.1.x prior to 3.1.8, 3.2.x prior to 3.2.4, 3.3.x prior to 3.3.3, and 3.4.x prior to 3.4.0."},"properties":{"security-severity":"4.0","name":"Cve20249143","id":"CVE-2024-9143 (containers)","description":"The vulnerability involves the use of low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial, which can result in out-of-bounds memory reads or writes. The affected APIs include \u0026#34;EC_GROUP_new_curve_GF2m()\u0026#34;, \u0026#34;EC_GROUP_new_from_params()\u0026#34;, and various \u0026#34;BN_GF2m_*()\u0026#34; functions.\n\nWhile out-of-bounds memory writes could lead to application crashes or even potential remote code execution, the likelihood of a vulnerable application is considered low. This is because protocols that employ Elliptic Curve Cryptography generally use \u0026#34;named curves,\u0026#34; or if explicit curve parameters are supported, they rely on X9.62 encoding, which does not permit problematic input values. X9.62 encoding is also used for ECC keys in X.509 certificates, making the occurrence of problematic inputs in that context unlikely. Applications utilizing \u0026#34;exotic\u0026#34; explicit binary (GF(2^m)) curve parameters that allow the representation of invalid field polynomials with a zero constant term may encounter abrupt termination due to array bounds violations. While remote code execution cannot be easily ruled out, it remains a less likely scenario.\n\nThe vulnerability affects openssl versions 1.0.2-x prior to 1.0.2zl, 1.1.x prior to 1.1.1zb, 3.0.x prior to 3.0.16, 3.1.x prior to 3.1.8, 3.2.x prior to 3.2.4, 3.3.x prior to 3.3.3, and 3.4.x prior to 3.4.0.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2025-32395 (sca)","name":"Cve202532395","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Vite is a frontend tooling framework for JavaScript. The contents of arbitrary files can be returned to the browser if the dev server is running on Node or Bun. HTTP 1.1 spec (RFC 9112) does not allow \u0026#34;#\u0026#34; in \u0026#34;request-target\u0026#34;. However, an attacker can send such a request. For those requests with an invalid \u0026#34;request-line\u0026#34; (it includes \u0026#34;request-target\u0026#34;), the spec recommends rejecting them with 400 or 301. The same can be said for HTTP 2. On Node and Bun, those requests are not rejected internally and are passed to the user land. For those requests, the value of \u0026#34;http.IncomingMessage.url\u0026#34; contains \u0026#34;#\u0026#34;. Vite assumed \u0026#34;req.url\u0026#34; won\u0026#39;t contain \u0026#34;#\u0026#34; when checking \u0026#34;server.fs.deny\u0026#34;, allowing those kinds of requests to bypass the check. Only apps explicitly exposing the Vite dev server to the network (using \u0026#34;--host\u0026#34; or \u0026#34;server.host\u0026#34; config option) and running the Vite dev server on runtimes that are not Deno (e.g. Node, Bun) are affected. This issue affects vite versions through 4.5.12, 5.0.0-beta.0 through 5.4.17, 6.0.0-alpha.0 through 6.0.14, 6.1.0-beta.0 through 6.1.4, 6.2.0-beta.0 through 6.2.5, 6.3.0-beta.0 and 6.3.0-beta.1.","markdown":"Vite is a frontend tooling framework for JavaScript. The contents of arbitrary files can be returned to the browser if the dev server is running on Node or Bun. HTTP 1.1 spec (RFC 9112) does not allow \u0026#34;#\u0026#34; in \u0026#34;request-target\u0026#34;. However, an attacker can send such a request. For those requests with an invalid \u0026#34;request-line\u0026#34; (it includes \u0026#34;request-target\u0026#34;), the spec recommends rejecting them with 400 or 301. The same can be said for HTTP 2. On Node and Bun, those requests are not rejected internally and are passed to the user land. For those requests, the value of \u0026#34;http.IncomingMessage.url\u0026#34; contains \u0026#34;#\u0026#34;. Vite assumed \u0026#34;req.url\u0026#34; won\u0026#39;t contain \u0026#34;#\u0026#34; when checking \u0026#34;server.fs.deny\u0026#34;, allowing those kinds of requests to bypass the check. Only apps explicitly exposing the Vite dev server to the network (using \u0026#34;--host\u0026#34; or \u0026#34;server.host\u0026#34; config option) and running the Vite dev server on runtimes that are not Deno (e.g. Node, Bun) are affected. This issue affects vite versions through 4.5.12, 5.0.0-beta.0 through 5.4.17, 6.0.0-alpha.0 through 6.0.14, 6.1.0-beta.0 through 6.1.4, 6.2.0-beta.0 through 6.2.5, 6.3.0-beta.0 and 6.3.0-beta.1."},"fullDescription":{"text":"Vite is a frontend tooling framework for JavaScript. The contents of arbitrary files can be returned to the browser if the dev server is running on Node or Bun. HTTP 1.1 spec (RFC 9112) does not allow \u0026#34;#\u0026#34; in \u0026#34;request-target\u0026#34;. However, an attacker can send such a request. For those requests with an invalid \u0026#34;request-line\u0026#34; (it includes \u0026#34;request-target\u0026#34;), the spec recommends rejecting them with 400 or 301. The same can be said for HTTP 2. On Node and Bun, those requests are not rejected internally and are passed to the user land. For those requests, the value of \u0026#34;http.IncomingMessage.url\u0026#34; contains \u0026#34;#\u0026#34;. Vite assumed \u0026#34;req.url\u0026#34; won\u0026#39;t contain \u0026#34;#\u0026#34; when checking \u0026#34;server.fs.deny\u0026#34;, allowing those kinds of requests to bypass the check. Only apps explicitly exposing the Vite dev server to the network (using \u0026#34;--host\u0026#34; or \u0026#34;server.host\u0026#34; config option) and running the Vite dev server on runtimes that are not Deno (e.g. Node, Bun) are affected. This issue affects vite versions through 4.5.12, 5.0.0-beta.0 through 5.4.17, 6.0.0-alpha.0 through 6.0.14, 6.1.0-beta.0 through 6.1.4, 6.2.0-beta.0 through 6.2.5, 6.3.0-beta.0 and 6.3.0-beta.1."},"properties":{"security-severity":"4.0","name":"Cve202532395","id":"CVE-2025-32395 (sca)","description":"Vite is a frontend tooling framework for JavaScript. The contents of arbitrary files can be returned to the browser if the dev server is running on Node or Bun. HTTP 1.1 spec (RFC 9112) does not allow \u0026#34;#\u0026#34; in \u0026#34;request-target\u0026#34;. However, an attacker can send such a request. For those requests with an invalid \u0026#34;request-line\u0026#34; (it includes \u0026#34;request-target\u0026#34;), the spec recommends rejecting them with 400 or 301. The same can be said for HTTP 2. On Node and Bun, those requests are not rejected internally and are passed to the user land. For those requests, the value of \u0026#34;http.IncomingMessage.url\u0026#34; contains \u0026#34;#\u0026#34;. Vite assumed \u0026#34;req.url\u0026#34; won\u0026#39;t contain \u0026#34;#\u0026#34; when checking \u0026#34;server.fs.deny\u0026#34;, allowing those kinds of requests to bypass the check. Only apps explicitly exposing the Vite dev server to the network (using \u0026#34;--host\u0026#34; or \u0026#34;server.host\u0026#34; config option) and running the Vite dev server on runtimes that are not Deno (e.g. Node, Bun) are affected. This issue affects vite versions through 4.5.12, 5.0.0-beta.0 through 5.4.17, 6.0.0-alpha.0 through 6.0.14, 6.1.0-beta.0 through 6.1.4, 6.2.0-beta.0 through 6.2.5, 6.3.0-beta.0 and 6.3.0-beta.1.","tags":["security","checkmarx","sca"]}},{"id":"CVE-2025-46565 (sca)","name":"Cve202546565","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Vite is a frontend tooling framework for javascript. In vite package versions through 4.5.13, 5.0.0-beta.0 through 5.4.18, 6.0.0-alpha.0 through 6.1.5, 6.2.0-beta.0 through 6.2.6, and 6.3.0-beta.0 through 6.3.3 the contents of files in the project root that are denied by a file matching pattern can be returned to the browser. Only apps explicitly exposing the Vite dev server to the network (using the `--host` or `server.host` config option) are affected. Only files that are under project root and are denied by a file matching pattern can be bypassed. `server.fs.deny` can contain patterns matching against files (by default it includes `.env`, `.env.*`, `*.{crt, pem}` as such patterns). These patterns were able to bypass files under `root` by using a combination of slash and dot (`/.`).","markdown":"Vite is a frontend tooling framework for javascript. In vite package versions through 4.5.13, 5.0.0-beta.0 through 5.4.18, 6.0.0-alpha.0 through 6.1.5, 6.2.0-beta.0 through 6.2.6, and 6.3.0-beta.0 through 6.3.3 the contents of files in the project root that are denied by a file matching pattern can be returned to the browser. Only apps explicitly exposing the Vite dev server to the network (using the `--host` or `server.host` config option) are affected. Only files that are under project root and are denied by a file matching pattern can be bypassed. `server.fs.deny` can contain patterns matching against files (by default it includes `.env`, `.env.*`, `*.{crt, pem}` as such patterns). These patterns were able to bypass files under `root` by using a combination of slash and dot (`/.`)."},"fullDescription":{"text":"Vite is a frontend tooling framework for javascript. In vite package versions through 4.5.13, 5.0.0-beta.0 through 5.4.18, 6.0.0-alpha.0 through 6.1.5, 6.2.0-beta.0 through 6.2.6, and 6.3.0-beta.0 through 6.3.3 the contents of files in the project root that are denied by a file matching pattern can be returned to the browser. Only apps explicitly exposing the Vite dev server to the network (using the `--host` or `server.host` config option) are affected. Only files that are under project root and are denied by a file matching pattern can be bypassed. `server.fs.deny` can contain patterns matching against files (by default it includes `.env`, `.env.*`, `*.{crt, pem}` as such patterns). These patterns were able to bypass files under `root` by using a combination of slash and dot (`/.`)."},"properties":{"security-severity":"4.0","name":"Cve202546565","id":"CVE-2025-46565 (sca)","description":"Vite is a frontend tooling framework for javascript. In vite package versions through 4.5.13, 5.0.0-beta.0 through 5.4.18, 6.0.0-alpha.0 through 6.1.5, 6.2.0-beta.0 through 6.2.6, and 6.3.0-beta.0 through 6.3.3 the contents of files in the project root that are denied by a file matching pattern can be returned to the browser. Only apps explicitly exposing the Vite dev server to the network (using the `--host` or `server.host` config option) are affected. Only files that are under project root and are denied by a file matching pattern can be bypassed. `server.fs.deny` can contain patterns matching against files (by default it includes `.env`, `.env.*`, `*.{crt, pem}` as such patterns). These patterns were able to bypass files under `root` by using a combination of slash and dot (`/.`).","tags":["security","checkmarx","sca"]}},{"id":"Cxbb85e86c-2fac (sca)","name":"Cxbb85e86c2fac","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"esbuild is an extremely fast bundler for the web, allowing any website to send any request to the development server and read the response due to default CORS settings. This issue affects versions prior to 0.25.0.","markdown":"esbuild is an extremely fast bundler for the web, allowing any website to send any request to the development server and read the response due to default CORS settings. This issue affects versions prior to 0.25.0."},"fullDescription":{"text":"esbuild is an extremely fast bundler for the web, allowing any website to send any request to the development server and read the response due to default CORS settings. This issue affects versions prior to 0.25.0."},"properties":{"security-severity":"4.0","name":"Cxbb85e86c2fac","id":"Cxbb85e86c-2fac (sca)","description":"esbuild is an extremely fast bundler for the web, allowing any website to send any request to the development server and read the response due to default CORS settings. This issue affects versions prior to 0.25.0.","tags":["security","checkmarx","sca"]}},{"id":"Container Running With Low UID - 02323c00-cdc3-4fdc-a310-4f2b3e7a1660 [Taken from query_id] (kics)","name":"Container Running With Low UID","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Check if containers are running with low UID, which might cause conflicts with the host\u0026#39;s user table. Value: metadata.name={{seo-reactui}}.spec.template.spec.securityContext.runAsUser is set to a low UID Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000","markdown":"Check if containers are running with low UID, which might cause conflicts with the host\u0026#39;s user table. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.securityContext.runAsUser is set to a low UID \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000"},"fullDescription":{"text":"Check if containers are running with low UID, which might cause conflicts with the host\u0026#39;s user table. Value: metadata.name={{seo-reactui}}.spec.template.spec.securityContext.runAsUser is set to a low UID Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000"},"properties":{"security-severity":"4.0","name":"Container Running With Low UID","id":"Container Running With Low UID - 02323c00-cdc3-4fdc-a310-4f2b3e7a1660 [Taken from query_id] (kics)","description":"Check if containers are running with low UID, which might cause conflicts with the host\u0026#39;s user table. Value: metadata.name={{seo-reactui}}.spec.template.spec.securityContext.runAsUser is set to a low UID Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.securityContext.runAsUser should be set to a UID \u003e= 10000","tags":["security","checkmarx","kics"]}},{"id":"NET RAW Capabilities Not Being Dropped - dbbc6705-d541-43b0-b166-dd4be8208b54 [Taken from query_id] (kics)","name":"NET RAW Capabilities Not Being Dropped","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Containers should drop \u0026#39;ALL\u0026#39; or at least \u0026#39;NET_RAW\u0026#39; capabilities Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.capabilities.drop is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.capabilities.drop should be defined","markdown":"Containers should drop \u0026#39;ALL\u0026#39; or at least \u0026#39;NET_RAW\u0026#39; capabilities \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.capabilities.drop is undefined \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.capabilities.drop should be defined"},"fullDescription":{"text":"Containers should drop \u0026#39;ALL\u0026#39; or at least \u0026#39;NET_RAW\u0026#39; capabilities Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.capabilities.drop is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.capabilities.drop should be defined"},"properties":{"security-severity":"4.0","name":"NET RAW Capabilities Not Being Dropped","id":"NET RAW Capabilities Not Being Dropped - dbbc6705-d541-43b0-b166-dd4be8208b54 [Taken from query_id] (kics)","description":"Containers should drop \u0026#39;ALL\u0026#39; or at least \u0026#39;NET_RAW\u0026#39; capabilities Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.capabilities.drop is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.capabilities.drop should be defined","tags":["security","checkmarx","kics"]}},{"id":"Missing HSTS Header - 7630264517191277634 (sast)","name":"Missing HSTS Header","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n","markdown":"The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n"},"fullDescription":{"text":"The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n"},"properties":{"security-severity":"4.0","name":"Missing HSTS Header","id":"Missing HSTS Header - 7630264517191277634 (sast)","description":"The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n","tags":["security","checkmarx","sast"]}},{"id":"Service Account Token Automount Not Disabled - 48471392-d4d0-47c0-b135-cdec95eb3eef [Taken from query_id] (kics)","name":"Service Account Token Automount Not Disabled","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Service Account Tokens are automatically mounted even if not necessary Value: metadata.name={{seo-reactui}}.spec.template.spec.automountServiceAccountToken is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.automountServiceAccountToken should be defined and set to false","markdown":"Service Account Tokens are automatically mounted even if not necessary \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.automountServiceAccountToken is undefined \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.automountServiceAccountToken should be defined and set to false"},"fullDescription":{"text":"Service Account Tokens are automatically mounted even if not necessary Value: metadata.name={{seo-reactui}}.spec.template.spec.automountServiceAccountToken is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.automountServiceAccountToken should be defined and set to false"},"properties":{"security-severity":"4.0","name":"Service Account Token Automount Not Disabled","id":"Service Account Token Automount Not Disabled - 48471392-d4d0-47c0-b135-cdec95eb3eef [Taken from query_id] (kics)","description":"Service Account Tokens are automatically mounted even if not necessary Value: metadata.name={{seo-reactui}}.spec.template.spec.automountServiceAccountToken is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.automountServiceAccountToken should be defined and set to false","tags":["security","checkmarx","kics"]}},{"id":"Readiness Probe Is Not Configured - a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3 [Taken from query_id] (kics)","name":"Readiness Probe Is Not Configured","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Check if Readiness Probe is not configured. Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.readinessProbe is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.readinessProbe should be defined","markdown":"Check if Readiness Probe is not configured. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.readinessProbe is undefined \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.readinessProbe should be defined"},"fullDescription":{"text":"Check if Readiness Probe is not configured. Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.readinessProbe is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.readinessProbe should be defined"},"properties":{"security-severity":"4.0","name":"Readiness Probe Is Not Configured","id":"Readiness Probe Is Not Configured - a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3 [Taken from query_id] (kics)","description":"Check if Readiness Probe is not configured. Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.readinessProbe is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.readinessProbe should be defined","tags":["security","checkmarx","kics"]}},{"id":"Unsafe Use Of Target blank - 17155209939029667221 (sast)","name":"Unsafe Use Of Target blank","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Using target at line 138 of /src/pages/ChangeOrder/ChangeOrderDashboard.tsx, without correctly setting the \u0026#34;rel\u0026#34; attribute, or disassociating the new window from its parent, is an unsafe way of opening a new window.","markdown":"Using target at line 138 of /src/pages/ChangeOrder/ChangeOrderDashboard.tsx, without correctly setting the \u0026#34;rel\u0026#34; attribute, or disassociating the new window from its parent, is an unsafe way of opening a new window."},"fullDescription":{"text":"Using target at line 138 of /src/pages/ChangeOrder/ChangeOrderDashboard.tsx, without correctly setting the \u0026#34;rel\u0026#34; attribute, or disassociating the new window from its parent, is an unsafe way of opening a new window."},"properties":{"security-severity":"2.0","name":"Unsafe Use Of Target blank","id":"Unsafe Use Of Target blank - 17155209939029667221 (sast)","description":"Using target at line 138 of /src/pages/ChangeOrder/ChangeOrderDashboard.tsx, without correctly setting the \u0026#34;rel\u0026#34; attribute, or disassociating the new window from its parent, is an unsafe way of opening a new window.","tags":["security","checkmarx","sast"]}},{"id":"CVE-2024-2511 (containers)","name":"Cve20242511","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default \u0026#34;SSL_OP_NO_TICKET\u0026#34; option is being used (but not if \u0026#34;early_data\u0026#34; support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. This issue affects openssl versions 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.13, 3.1.0-alpha1 through 3.1.5, and 3.2.0-alpha1 through 3.2.1.","markdown":"Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default \u0026#34;SSL_OP_NO_TICKET\u0026#34; option is being used (but not if \u0026#34;early_data\u0026#34; support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. This issue affects openssl versions 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.13, 3.1.0-alpha1 through 3.1.5, and 3.2.0-alpha1 through 3.2.1."},"fullDescription":{"text":"Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default \u0026#34;SSL_OP_NO_TICKET\u0026#34; option is being used (but not if \u0026#34;early_data\u0026#34; support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. This issue affects openssl versions 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.13, 3.1.0-alpha1 through 3.1.5, and 3.2.0-alpha1 through 3.2.1."},"properties":{"security-severity":"2.0","name":"Cve20242511","id":"CVE-2024-2511 (containers)","description":"Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default \u0026#34;SSL_OP_NO_TICKET\u0026#34; option is being used (but not if \u0026#34;early_data\u0026#34; support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. This issue affects openssl versions 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.13, 3.1.0-alpha1 through 3.1.5, and 3.2.0-alpha1 through 3.2.1.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2025-5889 (containers)","name":"Cve20255889","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function \u0026#34;expand\u0026#34; of the file \u0026#34;index.js\u0026#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue.","markdown":"A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function \u0026#34;expand\u0026#34; of the file \u0026#34;index.js\u0026#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue."},"fullDescription":{"text":"A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function \u0026#34;expand\u0026#34; of the file \u0026#34;index.js\u0026#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue."},"properties":{"security-severity":"2.0","name":"Cve20255889","id":"CVE-2025-5889 (containers)","description":"A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function \u0026#34;expand\u0026#34; of the file \u0026#34;index.js\u0026#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue.","tags":["security","checkmarx","containers"]}},{"id":"CVE-2025-5889 (sca)","name":"Cve20255889","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function \u0026#34;expand\u0026#34; of the file \u0026#34;index.js\u0026#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue.","markdown":"A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function \u0026#34;expand\u0026#34; of the file \u0026#34;index.js\u0026#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue."},"fullDescription":{"text":"A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function \u0026#34;expand\u0026#34; of the file \u0026#34;index.js\u0026#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue."},"properties":{"security-severity":"2.0","name":"Cve20255889","id":"CVE-2025-5889 (sca)","description":"A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function \u0026#34;expand\u0026#34; of the file \u0026#34;index.js\u0026#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue.","tags":["security","checkmarx","sca"]}},{"id":"Cx8bc4df28-fcf5 (containers)","name":"Cx8bc4df28fcf5","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"In NPM \u0026#34;debug\u0026#34; versions prior to 4.4.0, the \u0026#34;enable\u0026#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user\u0026#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137.","markdown":"In NPM \u0026#34;debug\u0026#34; versions prior to 4.4.0, the \u0026#34;enable\u0026#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user\u0026#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137."},"fullDescription":{"text":"In NPM \u0026#34;debug\u0026#34; versions prior to 4.4.0, the \u0026#34;enable\u0026#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user\u0026#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137."},"properties":{"security-severity":"2.0","name":"Cx8bc4df28fcf5","id":"Cx8bc4df28-fcf5 (containers)","description":"In NPM \u0026#34;debug\u0026#34; versions prior to 4.4.0, the \u0026#34;enable\u0026#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user\u0026#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137.","tags":["security","checkmarx","containers"]}},{"id":"Image Without Digest - 7c81d34c-8e5a-402b-9798-9f442630e678 [Taken from query_id] (kics)","name":"Image Without Digest","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Images should be specified together with their digests to ensure integrity Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.image does not include an image digest Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.image should specify the image with a digest","markdown":"Images should be specified together with their digests to ensure integrity \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.image does not include an image digest \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.image should specify the image with a digest"},"fullDescription":{"text":"Images should be specified together with their digests to ensure integrity Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.image does not include an image digest Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.image should specify the image with a digest"},"properties":{"security-severity":"2.0","name":"Image Without Digest","id":"Image Without Digest - 7c81d34c-8e5a-402b-9798-9f442630e678 [Taken from query_id] (kics)","description":"Images should be specified together with their digests to ensure integrity Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.image does not include an image digest Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.image should specify the image with a digest","tags":["security","checkmarx","kics"]}},{"id":"Deployment Without PodDisruptionBudget - b23e9b98-0cb6-4fc9-b257-1f3270442678 [Taken from query_id] (kics)","name":"Deployment Without PodDisruptionBudget","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Deployments should be assigned with a PodDisruptionBudget to ensure high availability Value: metadata.name=seo-reactui is not targeted by a PodDisruptionBudget Excepted value: metadata.name=seo-reactui is targeted by a PodDisruptionBudget","markdown":"Deployments should be assigned with a PodDisruptionBudget to ensure high availability \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name=seo-reactui is not targeted by a PodDisruptionBudget \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name=seo-reactui is targeted by a PodDisruptionBudget"},"fullDescription":{"text":"Deployments should be assigned with a PodDisruptionBudget to ensure high availability Value: metadata.name=seo-reactui is not targeted by a PodDisruptionBudget Excepted value: metadata.name=seo-reactui is targeted by a PodDisruptionBudget"},"properties":{"security-severity":"2.0","name":"Deployment Without PodDisruptionBudget","id":"Deployment Without PodDisruptionBudget - b23e9b98-0cb6-4fc9-b257-1f3270442678 [Taken from query_id] (kics)","description":"Deployments should be assigned with a PodDisruptionBudget to ensure high availability Value: metadata.name=seo-reactui is not targeted by a PodDisruptionBudget Excepted value: metadata.name=seo-reactui is targeted by a PodDisruptionBudget","tags":["security","checkmarx","kics"]}},{"id":"Root Container Not Mounted Read-only - a9c2f49d-0671-4fc9-9ece-f4e261e128d0 [Taken from query_id] (kics)","name":"Root Container Not Mounted Read-only","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Check if the root container filesystem is not being mounted read-only. Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.readOnlyRootFilesystem is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.readOnlyRootFilesystem should be set to true","markdown":"Check if the root container filesystem is not being mounted read-only. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.readOnlyRootFilesystem is undefined \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.readOnlyRootFilesystem should be set to true"},"fullDescription":{"text":"Check if the root container filesystem is not being mounted read-only. Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.readOnlyRootFilesystem is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.readOnlyRootFilesystem should be set to true"},"properties":{"security-severity":"2.0","name":"Root Container Not Mounted Read-only","id":"Root Container Not Mounted Read-only - a9c2f49d-0671-4fc9-9ece-f4e261e128d0 [Taken from query_id] (kics)","description":"Check if the root container filesystem is not being mounted read-only. Value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.readOnlyRootFilesystem is undefined Excepted value: metadata.name={{seo-reactui}}.spec.template.spec.containers.name={{seo-reactui}}.securityContext.readOnlyRootFilesystem should be set to true","tags":["security","checkmarx","kics"]}},{"id":"Multiple RUN, ADD, COPY, Instructions Listed - 0008c003-79aa-42d8-95b8-1c2fe37dbfe6 [Taken from query_id] (kics)","name":"Multiple RUN, ADD, COPY, Instructions Listed","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Multiple commands (RUN, COPY, ADD) should be grouped in order to reduce the number of layers. Value: There are RUN instructions that could be grouped Excepted value: There isn´t any RUN instruction that could be grouped","markdown":"Multiple commands (RUN, COPY, ADD) should be grouped in order to reduce the number of layers. \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e There are RUN instructions that could be grouped \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e There isn´t any RUN instruction that could be grouped"},"fullDescription":{"text":"Multiple commands (RUN, COPY, ADD) should be grouped in order to reduce the number of layers. Value: There are RUN instructions that could be grouped Excepted value: There isn´t any RUN instruction that could be grouped"},"properties":{"security-severity":"2.0","name":"Multiple RUN, ADD, COPY, Instructions Listed","id":"Multiple RUN, ADD, COPY, Instructions Listed - 0008c003-79aa-42d8-95b8-1c2fe37dbfe6 [Taken from query_id] (kics)","description":"Multiple commands (RUN, COPY, ADD) should be grouped in order to reduce the number of layers. Value: There are RUN instructions that could be grouped Excepted value: There isn´t any RUN instruction that could be grouped","tags":["security","checkmarx","kics"]}},{"id":"Pod or Container Without ResourceQuota - 48a5beba-e4c0-4584-a2aa-e6894e4cf424 [Taken from query_id] (kics)","name":"Pod or Container Without ResourceQuota","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume Value: metadata.name={{seo-reactui}} does not have a 'ResourceQuota' policy associated Excepted value: metadata.name={{seo-reactui}} has a 'ResourceQuota' policy associated","markdown":"Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}} does not have a 'ResourceQuota' policy associated \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}} has a 'ResourceQuota' policy associated"},"fullDescription":{"text":"Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume Value: metadata.name={{seo-reactui}} does not have a 'ResourceQuota' policy associated Excepted value: metadata.name={{seo-reactui}} has a 'ResourceQuota' policy associated"},"properties":{"security-severity":"2.0","name":"Pod or Container Without ResourceQuota","id":"Pod or Container Without ResourceQuota - 48a5beba-e4c0-4584-a2aa-e6894e4cf424 [Taken from query_id] (kics)","description":"Each namespace should have a ResourceQuota policy associated to limit the total amount of resources Pods, Containers and PersistentVolumeClaims can consume Value: metadata.name={{seo-reactui}} does not have a 'ResourceQuota' policy associated Excepted value: metadata.name={{seo-reactui}} has a 'ResourceQuota' policy associated","tags":["security","checkmarx","kics"]}},{"id":"No Drop Capabilities for Containers - 268ca686-7fb7-4ae9-b129-955a2a89064e [Taken from query_id] (kics)","name":"No Drop Capabilities for Containers","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Sees if Kubernetes Drop Capabilities exists to ensure containers security context Value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.securityContext.capabilities is undefined Excepted value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.securityContext.capabilities should be set","markdown":"Sees if Kubernetes Drop Capabilities exists to ensure containers security context \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.securityContext.capabilities is undefined \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.securityContext.capabilities should be set"},"fullDescription":{"text":"Sees if Kubernetes Drop Capabilities exists to ensure containers security context Value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.securityContext.capabilities is undefined Excepted value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.securityContext.capabilities should be set"},"properties":{"security-severity":"2.0","name":"No Drop Capabilities for Containers","id":"No Drop Capabilities for Containers - 268ca686-7fb7-4ae9-b129-955a2a89064e [Taken from query_id] (kics)","description":"Sees if Kubernetes Drop Capabilities exists to ensure containers security context Value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.securityContext.capabilities is undefined Excepted value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.securityContext.capabilities should be set","tags":["security","checkmarx","kics"]}},{"id":"Healthcheck Instruction Missing - b03a748a-542d-44f4-bb86-9199ab4fd2d5 [Taken from query_id] (kics)","name":"Healthcheck Instruction Missing","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working Value: Dockerfile doesn't contain instruction 'HEALTHCHECK' Excepted value: Dockerfile should contain instruction 'HEALTHCHECK'","markdown":"Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e Dockerfile doesn't contain instruction 'HEALTHCHECK' \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e Dockerfile should contain instruction 'HEALTHCHECK'"},"fullDescription":{"text":"Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working Value: Dockerfile doesn't contain instruction 'HEALTHCHECK' Excepted value: Dockerfile should contain instruction 'HEALTHCHECK'"},"properties":{"security-severity":"2.0","name":"Healthcheck Instruction Missing","id":"Healthcheck Instruction Missing - b03a748a-542d-44f4-bb86-9199ab4fd2d5 [Taken from query_id] (kics)","description":"Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working Value: Dockerfile doesn't contain instruction 'HEALTHCHECK' Excepted value: Dockerfile should contain instruction 'HEALTHCHECK'","tags":["security","checkmarx","kics"]}},{"id":"Pod or Container Without LimitRange - 4a20ebac-1060-4c81-95d1-1f7f620e983b [Taken from query_id] (kics)","name":"Pod or Container Without LimitRange","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries Value: metadata.name={{seo-reactui}} does not have a 'LimitRange' policy associated Excepted value: metadata.name={{seo-reactui}} has a 'LimitRange' policy associated","markdown":"Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}} does not have a 'LimitRange' policy associated \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}} has a 'LimitRange' policy associated"},"fullDescription":{"text":"Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries Value: metadata.name={{seo-reactui}} does not have a 'LimitRange' policy associated Excepted value: metadata.name={{seo-reactui}} has a 'LimitRange' policy associated"},"properties":{"security-severity":"2.0","name":"Pod or Container Without LimitRange","id":"Pod or Container Without LimitRange - 4a20ebac-1060-4c81-95d1-1f7f620e983b [Taken from query_id] (kics)","description":"Each namespace should have a LimitRange policy associated to ensure that resource allocations of Pods, Containers and PersistentVolumeClaims do not exceed the defined boundaries Value: metadata.name={{seo-reactui}} does not have a 'LimitRange' policy associated Excepted value: metadata.name={{seo-reactui}} has a 'LimitRange' policy associated","tags":["security","checkmarx","kics"]}},{"id":"Client Use Of Iframe Without Sandbox - 12151859793050070545 (sast)","name":"Client Use Of Iframe Without Sandbox","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"The application employs an HTML iframe at whose contents are not properly sandboxed","markdown":"The application employs an HTML iframe at whose contents are not properly sandboxed"},"fullDescription":{"text":"The application employs an HTML iframe at whose contents are not properly sandboxed"},"properties":{"security-severity":"2.0","name":"Client Use Of Iframe Without Sandbox","id":"Client Use Of Iframe Without Sandbox - 12151859793050070545 (sast)","description":"The application employs an HTML iframe at whose contents are not properly sandboxed","tags":["security","checkmarx","sast"]}},{"id":"Liveness Probe Is Not Defined - ade74944-a674-4e00-859e-c6eab5bde441 [Taken from query_id] (kics)","name":"Liveness Probe Is Not Defined","helpUri":"https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html","help":{"text":"In case of an unresponsive container, a Liveness Probe can help your application become more available since it restarts the container. However, it can lead to cascading failures. Define one if you really need it Value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.livenessProbe is undefined Excepted value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.livenessProbe should be defined","markdown":"In case of an unresponsive container, a Liveness Probe can help your application become more available since it restarts the container. However, it can lead to cascading failures. Define one if you really need it \u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eValue:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.livenessProbe is undefined \u003cbr\u003e\u003cstrong\u003eExcepted value:\u003c/strong\u003e metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.livenessProbe should be defined"},"fullDescription":{"text":"In case of an unresponsive container, a Liveness Probe can help your application become more available since it restarts the container. However, it can lead to cascading failures. Define one if you really need it Value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.livenessProbe is undefined Excepted value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.livenessProbe should be defined"},"properties":{"security-severity":"1.0","name":"Liveness Probe Is Not Defined","id":"Liveness Probe Is Not Defined - ade74944-a674-4e00-859e-c6eab5bde441 [Taken from query_id] (kics)","description":"In case of an unresponsive container, a Liveness Probe can help your application become more available since it restarts the container. However, it can lead to cascading failures. Define one if you really need it Value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.livenessProbe is undefined Excepted value: metadata.name={{seo-reactui}}.spec.containers.name={{seo-reactui}}.livenessProbe should be defined","tags":["security","checkmarx","kics"]}}]}},"results":[{"ruleId":"CVE-2023-42282 (containers)","level":"error","message":{"text":" (CVE-2023-42282)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2025-6545 (sca)","level":"error","message":{"text":"Npm-pbkdf2-3.1.2 (CVE-2025-6545)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"package.json"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2025-6547 (sca)","level":"error","message":{"text":"Npm-pbkdf2-3.1.2 (CVE-2025-6547)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"package.json"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-21538 (containers)","level":"error","message":{"text":" (CVE-2024-21538)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-29415 (containers)","level":"error","message":{"text":" (CVE-2024-29415)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-4741 (containers)","level":"error","message":{"text":" (CVE-2024-4741)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-4741 (containers)","level":"error","message":{"text":" (CVE-2024-4741)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-4741 (containers)","level":"error","message":{"text":" (CVE-2024-4741)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-5535 (containers)","level":"error","message":{"text":" (CVE-2024-5535)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-5535 (containers)","level":"error","message":{"text":" (CVE-2024-5535)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-5535 (containers)","level":"error","message":{"text":" (CVE-2024-5535)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-6119 (containers)","level":"error","message":{"text":" (CVE-2024-6119)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-6119 (containers)","level":"error","message":{"text":" (CVE-2024-6119)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-6119 (containers)","level":"error","message":{"text":" (CVE-2024-6119)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2025-26519 (containers)","level":"error","message":{"text":" (CVE-2025-26519)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Cxdca8e59f-8bfe (sca)","level":"error","message":{"text":"Npm-inflight-1.0.6 (Cxdca8e59f-8bfe)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"package.json"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Seccomp Profile Is Not Configured - f377b83e-bd07-4f48-a591-60c82b14a78b [Taken from query_id] (kics)","level":"warning","message":{"text":"Seccomp Profile Is Not Configured"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":30,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2023-42363 (containers)","level":"warning","message":{"text":" (CVE-2023-42363)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2023-42363 (containers)","level":"warning","message":{"text":" (CVE-2023-42363)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2023-42364 (containers)","level":"warning","message":{"text":" (CVE-2023-42364)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2023-42364 (containers)","level":"warning","message":{"text":" (CVE-2023-42364)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2023-42365 (containers)","level":"warning","message":{"text":" (CVE-2023-42365)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2023-42365 (containers)","level":"warning","message":{"text":" (CVE-2023-42365)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2023-42366 (containers)","level":"warning","message":{"text":" (CVE-2023-42366)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2023-42366 (containers)","level":"warning","message":{"text":" (CVE-2023-42366)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-13176 (containers)","level":"warning","message":{"text":" (CVE-2024-13176)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-13176 (containers)","level":"warning","message":{"text":" (CVE-2024-13176)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-13176 (containers)","level":"warning","message":{"text":" (CVE-2024-13176)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-28863 (containers)","level":"warning","message":{"text":" (CVE-2024-28863)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-4603 (containers)","level":"warning","message":{"text":" (CVE-2024-4603)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-4603 (containers)","level":"warning","message":{"text":" (CVE-2024-4603)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-4603 (containers)","level":"warning","message":{"text":" (CVE-2024-4603)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-9143 (containers)","level":"warning","message":{"text":" (CVE-2024-9143)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-9143 (containers)","level":"warning","message":{"text":" (CVE-2024-9143)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-9143 (containers)","level":"warning","message":{"text":" (CVE-2024-9143)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2025-32395 (sca)","level":"warning","message":{"text":"Npm-vite-5.4.17 (CVE-2025-32395)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"package.json"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2025-46565 (sca)","level":"warning","message":{"text":"Npm-vite-5.4.17 (CVE-2025-46565)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"package.json"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Cxbb85e86c-2fac (sca)","level":"warning","message":{"text":"Npm-esbuild-0.21.5 (Cxbb85e86c-2fac)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"package.json"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Container Running With Low UID - 02323c00-cdc3-4fdc-a310-4f2b3e7a1660 [Taken from query_id] (kics)","level":"warning","message":{"text":"Container Running With Low UID"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":26,"startColumn":1,"endColumn":2}}}]},{"ruleId":"NET RAW Capabilities Not Being Dropped - dbbc6705-d541-43b0-b166-dd4be8208b54 [Taken from query_id] (kics)","level":"warning","message":{"text":"NET RAW Capabilities Not Being Dropped"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":30,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Missing HSTS Header - 7630264517191277634 (sast)","level":"warning","message":{"text":"Missing HSTS Header"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/apis/qrApis.ts"},"region":{"startLine":28,"startColumn":41,"endColumn":45}}}]},{"ruleId":"Service Account Token Automount Not Disabled - 48471392-d4d0-47c0-b135-cdec95eb3eef [Taken from query_id] (kics)","level":"warning","message":{"text":"Service Account Token Automount Not Disabled"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":23,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Readiness Probe Is Not Configured - a659f3b5-9bf0-438a-bd9a-7d3a6427f1e3 [Taken from query_id] (kics)","level":"warning","message":{"text":"Readiness Probe Is Not Configured"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":30,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Unsafe Use Of Target blank - 17155209939029667221 (sast)","level":"note","message":{"text":"Unsafe Use Of Target blank"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/pages/ChangeOrder/ChangeOrderDashboard.tsx"},"region":{"startLine":138,"startColumn":16,"endColumn":17}}}]},{"ruleId":"CVE-2024-2511 (containers)","level":"note","message":{"text":" (CVE-2024-2511)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-2511 (containers)","level":"note","message":{"text":" (CVE-2024-2511)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2024-2511 (containers)","level":"note","message":{"text":" (CVE-2024-2511)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2025-5889 (containers)","level":"note","message":{"text":" (CVE-2025-5889)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2025-5889 (sca)","level":"note","message":{"text":"Npm-brace-expansion-2.0.1 (CVE-2025-5889)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"package.json"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"CVE-2025-5889 (sca)","level":"note","message":{"text":"Npm-brace-expansion-1.1.11 (CVE-2025-5889)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"package.json"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Cx8bc4df28-fcf5 (containers)","level":"note","message":{"text":" (Cx8bc4df28-fcf5)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Image Without Digest - 7c81d34c-8e5a-402b-9798-9f442630e678 [Taken from query_id] (kics)","level":"note","message":{"text":"Image Without Digest"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":30,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Unsafe Use Of Target blank - 17155209939029667221 (sast)","level":"note","message":{"text":"Unsafe Use Of Target blank"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/components/Tracker/TrackerRecordsTable.tsx"},"region":{"startLine":68,"startColumn":12,"endColumn":13}}}]},{"ruleId":"Unsafe Use Of Target blank - 17155209939029667221 (sast)","level":"note","message":{"text":"Unsafe Use Of Target blank"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/components/PMSchedule/PMScheduleRecordsTable.tsx"},"region":{"startLine":66,"startColumn":14,"endColumn":15}}}]},{"ruleId":"Deployment Without PodDisruptionBudget - b23e9b98-0cb6-4fc9-b257-1f3270442678 [Taken from query_id] (kics)","level":"note","message":{"text":"Deployment Without PodDisruptionBudget"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":13,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Root Container Not Mounted Read-only - a9c2f49d-0671-4fc9-9ece-f4e261e128d0 [Taken from query_id] (kics)","level":"note","message":{"text":"Root Container Not Mounted Read-only"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":30,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Multiple RUN, ADD, COPY, Instructions Listed - 0008c003-79aa-42d8-95b8-1c2fe37dbfe6 [Taken from query_id] (kics)","level":"note","message":{"text":"Multiple RUN, ADD, COPY, Instructions Listed"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":13,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Pod or Container Without ResourceQuota - 48a5beba-e4c0-4584-a2aa-e6894e4cf424 [Taken from query_id] (kics)","level":"note","message":{"text":"Pod or Container Without ResourceQuota"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"No Drop Capabilities for Containers - 268ca686-7fb7-4ae9-b129-955a2a89064e [Taken from query_id] (kics)","level":"note","message":{"text":"No Drop Capabilities for Containers"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":30,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Healthcheck Instruction Missing - b03a748a-542d-44f4-bb86-9199ab4fd2d5 [Taken from query_id] (kics)","level":"note","message":{"text":"Healthcheck Instruction Missing"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"Dockerfile"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Pod or Container Without LimitRange - 4a20ebac-1060-4c81-95d1-1f7f620e983b [Taken from query_id] (kics)","level":"note","message":{"text":"Pod or Container Without LimitRange"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":1,"startColumn":1,"endColumn":2}}}]},{"ruleId":"Unsafe Use Of Target blank - 17155209939029667221 (sast)","level":"note","message":{"text":"Unsafe Use Of Target blank"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/components/Common/GenerateQR.tsx"},"region":{"startLine":26,"startColumn":15,"endColumn":18}}}]},{"ruleId":"Client Use Of Iframe Without Sandbox - 12151859793050070545 (sast)","level":"note","message":{"text":"Client Use Of Iframe Without Sandbox"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/components/Help/HelpModel.tsx"},"region":{"startLine":26,"startColumn":10,"endColumn":18}}}]},{"ruleId":"Unsafe Use Of Target blank - 17155209939029667221 (sast)","level":"note","message":{"text":"Unsafe Use Of Target blank"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/components/PMSchedule/PMScheduleRecordsTable.tsx"},"region":{"startLine":54,"startColumn":14,"endColumn":15}}}]},{"ruleId":"Liveness Probe Is Not Defined - ade74944-a674-4e00-859e-c6eab5bde441 [Taken from query_id] (kics)","level":"note","message":{"text":"Liveness Probe Is Not Defined"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"charts/templates/deployment.yml"},"region":{"startLine":30,"startColumn":1,"endColumn":2}}}]}]}]}
