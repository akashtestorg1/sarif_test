{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Checkmarx One",
          "version": "1.0",
          "informationUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
          "rules": [
            {
              "id": "CVE-2017-16042 (sca)",
              "name": "Cve201716042",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Growl adds growl notification support to nodejs. Growl versions prior to 1.10.0 does not properly sanitize input before passing it to exec, allowing for arbitrary command execution.",
                "markdown": "Growl adds growl notification support to nodejs. Growl versions prior to 1.10.0 does not properly sanitize input before passing it to exec, allowing for arbitrary command execution."
              },
              "fullDescription": {
                "text": "Growl adds growl notification support to nodejs. Growl versions prior to 1.10.0 does not properly sanitize input before passing it to exec, allowing for arbitrary command execution."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve201716042",
                "id": "CVE-2017-16042 (sca)",
                "description": "Growl adds growl notification support to nodejs. Growl versions prior to 1.10.0 does not properly sanitize input before passing it to exec, allowing for arbitrary command execution.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-16492 (sca)",
              "name": "Cve201816492",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A Prototype Pollution vulnerability was found in module extend that allows an attacker to inject arbitrary properties onto &#34;Object.Prototype&#34;. This issue affects versions prior to 2.0.2 and 3.0.x prior to 3.0.2.",
                "markdown": "A Prototype Pollution vulnerability was found in module extend that allows an attacker to inject arbitrary properties onto &#34;Object.Prototype&#34;. This issue affects versions prior to 2.0.2 and 3.0.x prior to 3.0.2."
              },
              "fullDescription": {
                "text": "A Prototype Pollution vulnerability was found in module extend that allows an attacker to inject arbitrary properties onto &#34;Object.Prototype&#34;. This issue affects versions prior to 2.0.2 and 3.0.x prior to 3.0.2."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve201816492",
                "id": "CVE-2018-16492 (sca)",
                "description": "A Prototype Pollution vulnerability was found in module extend that allows an attacker to inject arbitrary properties onto &#34;Object.Prototype&#34;. This issue affects versions prior to 2.0.2 and 3.0.x prior to 3.0.2.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-10744 (sca)",
              "name": "Cve201910744",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A Prototype Pollution vulnerability was discovered in lodash prior to 4.17.12, in lodash.defaultsdeep prior to 4.6.1, and in @sailshq/lodash prior to 3.10.4. The function &#39;defaultsDeep&#39; allows a malicious user to modify the prototype of Object via &#39;{constructor: {prototype: {...}}}&#39; causing the addition or modification of an existing property that will exist on all objects.",
                "markdown": "A Prototype Pollution vulnerability was discovered in lodash prior to 4.17.12, in lodash.defaultsdeep prior to 4.6.1, and in @sailshq/lodash prior to 3.10.4. The function &#39;defaultsDeep&#39; allows a malicious user to modify the prototype of Object via &#39;{constructor: {prototype: {...}}}&#39; causing the addition or modification of an existing property that will exist on all objects."
              },
              "fullDescription": {
                "text": "A Prototype Pollution vulnerability was discovered in lodash prior to 4.17.12, in lodash.defaultsdeep prior to 4.6.1, and in @sailshq/lodash prior to 3.10.4. The function &#39;defaultsDeep&#39; allows a malicious user to modify the prototype of Object via &#39;{constructor: {prototype: {...}}}&#39; causing the addition or modification of an existing property that will exist on all objects."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve201910744",
                "id": "CVE-2019-10744 (sca)",
                "description": "A Prototype Pollution vulnerability was discovered in lodash prior to 4.17.12, in lodash.defaultsdeep prior to 4.6.1, and in @sailshq/lodash prior to 3.10.4. The function &#39;defaultsDeep&#39; allows a malicious user to modify the prototype of Object via &#39;{constructor: {prototype: {...}}}&#39; causing the addition or modification of an existing property that will exist on all objects.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-10746 (sca)",
              "name": "Cve201910746",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The mixin-deep is vulnerable to Prototype Pollution in versions prior to 1.3.2 and 2.0.0. The function `mixinDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload.",
                "markdown": "The mixin-deep is vulnerable to Prototype Pollution in versions prior to 1.3.2 and 2.0.0. The function `mixinDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload."
              },
              "fullDescription": {
                "text": "The mixin-deep is vulnerable to Prototype Pollution in versions prior to 1.3.2 and 2.0.0. The function `mixinDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve201910746",
                "id": "CVE-2019-10746 (sca)",
                "description": "The mixin-deep is vulnerable to Prototype Pollution in versions prior to 1.3.2 and 2.0.0. The function `mixinDeep` could be tricked into adding or modifying properties of `Object.prototype` using a `constructor` payload.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-10747 (sca)",
              "name": "Cve201910747",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package set-value is vulnerable to Prototype Pollution through 2.0.0 and 3.0.0. The &#34;set&#34; function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.",
                "markdown": "The package set-value is vulnerable to Prototype Pollution through 2.0.0 and 3.0.0. The &#34;set&#34; function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects."
              },
              "fullDescription": {
                "text": "The package set-value is vulnerable to Prototype Pollution through 2.0.0 and 3.0.0. The &#34;set&#34; function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve201910747",
                "id": "CVE-2019-10747 (sca)",
                "description": "The package set-value is vulnerable to Prototype Pollution through 2.0.0 and 3.0.0. The &#34;set&#34; function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-19919 (sca)",
              "name": "Cve201919919",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of handlebars prior to 3.0.8 and 4.x prior to 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Object&#39;s &#34;__proto__&#34; and &#34;__defineGetter__&#34; properties, which may allow an attacker to execute arbitrary code through crafted payloads.",
                "markdown": "Versions of handlebars prior to 3.0.8 and 4.x prior to 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Object&#39;s &#34;__proto__&#34; and &#34;__defineGetter__&#34; properties, which may allow an attacker to execute arbitrary code through crafted payloads."
              },
              "fullDescription": {
                "text": "Versions of handlebars prior to 3.0.8 and 4.x prior to 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Object&#39;s &#34;__proto__&#34; and &#34;__defineGetter__&#34; properties, which may allow an attacker to execute arbitrary code through crafted payloads."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve201919919",
                "id": "CVE-2019-19919 (sca)",
                "description": "Versions of handlebars prior to 3.0.8 and 4.x prior to 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Object&#39;s &#34;__proto__&#34; and &#34;__defineGetter__&#34; properties, which may allow an attacker to execute arbitrary code through crafted payloads.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-28282 (sca)",
              "name": "Cve202028282",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Prototype Pollution vulnerability in getobject version 0.1.0 allows an attacker to cause a Denial of Service and may lead to Remote Code Execution.",
                "markdown": "Prototype Pollution vulnerability in getobject version 0.1.0 allows an attacker to cause a Denial of Service and may lead to Remote Code Execution."
              },
              "fullDescription": {
                "text": "Prototype Pollution vulnerability in getobject version 0.1.0 allows an attacker to cause a Denial of Service and may lead to Remote Code Execution."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202028282",
                "id": "CVE-2020-28282 (sca)",
                "description": "Prototype Pollution vulnerability in getobject version 0.1.0 allows an attacker to cause a Denial of Service and may lead to Remote Code Execution.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-7610 (sca)",
              "name": "Cve20207610",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions prior to 1.1.4 of bson are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object&#39;s `_bsotype`, leading to cases where an object is serialized as a document rather than the intended BSON type.",
                "markdown": "Versions prior to 1.1.4 of bson are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object&#39;s `_bsotype`, leading to cases where an object is serialized as a document rather than the intended BSON type."
              },
              "fullDescription": {
                "text": "Versions prior to 1.1.4 of bson are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object&#39;s `_bsotype`, leading to cases where an object is serialized as a document rather than the intended BSON type."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve20207610",
                "id": "CVE-2020-7610 (sca)",
                "description": "Versions prior to 1.1.4 of bson are vulnerable to Deserialization of Untrusted Data. The package will ignore an unknown value for an object&#39;s `_bsotype`, leading to cases where an object is serialized as a document rather than the intended BSON type.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-7774 (sca)",
              "name": "Cve20207774",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "This affects the package y18n versions prior to 3.2.2, 4.x prior to 4.0.1, 5.0.x prior to 5.0.5 and 6.0.0-alpha.0, are vulnerable to Prototype Pollution.",
                "markdown": "This affects the package y18n versions prior to 3.2.2, 4.x prior to 4.0.1, 5.0.x prior to 5.0.5 and 6.0.0-alpha.0, are vulnerable to Prototype Pollution."
              },
              "fullDescription": {
                "text": "This affects the package y18n versions prior to 3.2.2, 4.x prior to 4.0.1, 5.0.x prior to 5.0.5 and 6.0.0-alpha.0, are vulnerable to Prototype Pollution."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve20207774",
                "id": "CVE-2020-7774 (sca)",
                "description": "This affects the package y18n versions prior to 3.2.2, 4.x prior to 4.0.1, 5.0.x prior to 5.0.5 and 6.0.0-alpha.0, are vulnerable to Prototype Pollution.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-7788 (sca)",
              "name": "Cve20207788",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package ini versions prior to 1.3.6 have a Prototype Pollution vulnerability. If an attacker submits a malicious INI file to an application that parses it with &#34;ini.parse&#34;, they will pollute the prototype of the application. This can be exploited further depending on the context.",
                "markdown": "The package ini versions prior to 1.3.6 have a Prototype Pollution vulnerability. If an attacker submits a malicious INI file to an application that parses it with &#34;ini.parse&#34;, they will pollute the prototype of the application. This can be exploited further depending on the context."
              },
              "fullDescription": {
                "text": "The package ini versions prior to 1.3.6 have a Prototype Pollution vulnerability. If an attacker submits a malicious INI file to an application that parses it with &#34;ini.parse&#34;, they will pollute the prototype of the application. This can be exploited further depending on the context."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve20207788",
                "id": "CVE-2020-7788 (sca)",
                "description": "The package ini versions prior to 1.3.6 have a Prototype Pollution vulnerability. If an attacker submits a malicious INI file to an application that parses it with &#34;ini.parse&#34;, they will pollute the prototype of the application. This can be exploited further depending on the context.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-23369 (sca)",
              "name": "Cve202123369",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package handlebars prior to 4.7.7 is vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.",
                "markdown": "The package handlebars prior to 4.7.7 is vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source."
              },
              "fullDescription": {
                "text": "The package handlebars prior to 4.7.7 is vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202123369",
                "id": "CVE-2021-23369 (sca)",
                "description": "The package handlebars prior to 4.7.7 is vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-23383 (sca)",
              "name": "Cve202123383",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package handlebars versions prior to 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.",
                "markdown": "The package handlebars versions prior to 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source."
              },
              "fullDescription": {
                "text": "The package handlebars versions prior to 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202123383",
                "id": "CVE-2021-23383 (sca)",
                "description": "The package handlebars versions prior to 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-23440 (sca)",
              "name": "Cve202123440",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A Type-Confusion vulnerability in set-value package  can lead to a bypass of CVE-2019-10747 when the user-provided keys are used in the `path` parameter arrays. This issue affctes set-value versions prior to 2.0.1, 3.x prior to 3.0.3 and in 4.0.0.",
                "markdown": "A Type-Confusion vulnerability in set-value package  can lead to a bypass of CVE-2019-10747 when the user-provided keys are used in the `path` parameter arrays. This issue affctes set-value versions prior to 2.0.1, 3.x prior to 3.0.3 and in 4.0.0."
              },
              "fullDescription": {
                "text": "A Type-Confusion vulnerability in set-value package  can lead to a bypass of CVE-2019-10747 when the user-provided keys are used in the `path` parameter arrays. This issue affctes set-value versions prior to 2.0.1, 3.x prior to 3.0.3 and in 4.0.0."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202123440",
                "id": "CVE-2021-23440 (sca)",
                "description": "A Type-Confusion vulnerability in set-value package  can lead to a bypass of CVE-2019-10747 when the user-provided keys are used in the `path` parameter arrays. This issue affctes set-value versions prior to 2.0.1, 3.x prior to 3.0.3 and in 4.0.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-23807 (sca)",
              "name": "Cve202123807",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A Type Confusion vulnerability in jsonpointer can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays. This issue affects jsonpointer versions prior to 5.0.0.",
                "markdown": "A Type Confusion vulnerability in jsonpointer can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays. This issue affects jsonpointer versions prior to 5.0.0."
              },
              "fullDescription": {
                "text": "A Type Confusion vulnerability in jsonpointer can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays. This issue affects jsonpointer versions prior to 5.0.0."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202123807",
                "id": "CVE-2021-23807 (sca)",
                "description": "A Type Confusion vulnerability in jsonpointer can lead to a bypass of a previous Prototype Pollution fix when the pointer components are arrays. This issue affects jsonpointer versions prior to 5.0.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-3918 (sca)",
              "name": "Cve20213918",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package json-schema versions prior to 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes (&#39;Prototype Pollution&#39;)",
                "markdown": "The package json-schema versions prior to 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes (&#39;Prototype Pollution&#39;)"
              },
              "fullDescription": {
                "text": "The package json-schema versions prior to 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes (&#39;Prototype Pollution&#39;)"
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve20213918",
                "id": "CVE-2021-3918 (sca)",
                "description": "The package json-schema versions prior to 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes (&#39;Prototype Pollution&#39;)",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-44906 (containers)",
              "name": "Cve202144906",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Minimist through 1.2.5 is vulnerable to Prototype Pollution via file &#34;index.js&#34;, function &#34;setKey()&#34; (lines 69-95).",
                "markdown": "Minimist through 1.2.5 is vulnerable to Prototype Pollution via file &#34;index.js&#34;, function &#34;setKey()&#34; (lines 69-95)."
              },
              "fullDescription": {
                "text": "Minimist through 1.2.5 is vulnerable to Prototype Pollution via file &#34;index.js&#34;, function &#34;setKey()&#34; (lines 69-95)."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202144906",
                "id": "CVE-2021-44906 (containers)",
                "description": "Minimist through 1.2.5 is vulnerable to Prototype Pollution via file &#34;index.js&#34;, function &#34;setKey()&#34; (lines 69-95).",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2021-44906 (sca)",
              "name": "Cve202144906",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Minimist through 1.2.5 is vulnerable to Prototype Pollution via file &#34;index.js&#34;, function &#34;setKey()&#34; (lines 69-95).",
                "markdown": "Minimist through 1.2.5 is vulnerable to Prototype Pollution via file &#34;index.js&#34;, function &#34;setKey()&#34; (lines 69-95)."
              },
              "fullDescription": {
                "text": "Minimist through 1.2.5 is vulnerable to Prototype Pollution via file &#34;index.js&#34;, function &#34;setKey()&#34; (lines 69-95)."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202144906",
                "id": "CVE-2021-44906 (sca)",
                "description": "Minimist through 1.2.5 is vulnerable to Prototype Pollution via file &#34;index.js&#34;, function &#34;setKey()&#34; (lines 69-95).",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-37434 (containers)",
              "name": "Cve202237434",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in &#34;inflate.c&#34; via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "markdown": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in &#34;inflate.c&#34; via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "fullDescription": {
                "text": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in &#34;inflate.c&#34; via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference)."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202237434",
                "id": "CVE-2022-37434 (containers)",
                "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in &#34;inflate.c&#34; via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-25344 (sca)",
              "name": "Cve202325344",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "An issue was discovered in swig-templates in versions through 2.0.3 and swig versions 1.0.0-pre1 through 1.4.2, allowing attackers to execute arbitrary code via a crafted &#34;Object.prototype&#34; anonymous function.",
                "markdown": "An issue was discovered in swig-templates in versions through 2.0.3 and swig versions 1.0.0-pre1 through 1.4.2, allowing attackers to execute arbitrary code via a crafted &#34;Object.prototype&#34; anonymous function."
              },
              "fullDescription": {
                "text": "An issue was discovered in swig-templates in versions through 2.0.3 and swig versions 1.0.0-pre1 through 1.4.2, allowing attackers to execute arbitrary code via a crafted &#34;Object.prototype&#34; anonymous function."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202325344",
                "id": "CVE-2023-25344 (sca)",
                "description": "An issue was discovered in swig-templates in versions through 2.0.3 and swig versions 1.0.0-pre1 through 1.4.2, allowing attackers to execute arbitrary code via a crafted &#34;Object.prototype&#34; anonymous function.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2023-26136 (sca)",
              "name": "Cve202326136",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package tough-cookie in versions prior to 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in &#34;rejectPublicSuffixes=false&#34; mode. This issue arises from the manner in which the objects are initialized.",
                "markdown": "The package tough-cookie in versions prior to 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in &#34;rejectPublicSuffixes=false&#34; mode. This issue arises from the manner in which the objects are initialized."
              },
              "fullDescription": {
                "text": "The package tough-cookie in versions prior to 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in &#34;rejectPublicSuffixes=false&#34; mode. This issue arises from the manner in which the objects are initialized."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202326136",
                "id": "CVE-2023-26136 (sca)",
                "description": "The package tough-cookie in versions prior to 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in &#34;rejectPublicSuffixes=false&#34; mode. This issue arises from the manner in which the objects are initialized.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2023-26136 (containers)",
              "name": "Cve202326136",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package tough-cookie in versions prior to 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in &#34;rejectPublicSuffixes=false&#34; mode. This issue arises from the manner in which the objects are initialized.",
                "markdown": "The package tough-cookie in versions prior to 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in &#34;rejectPublicSuffixes=false&#34; mode. This issue arises from the manner in which the objects are initialized."
              },
              "fullDescription": {
                "text": "The package tough-cookie in versions prior to 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in &#34;rejectPublicSuffixes=false&#34; mode. This issue arises from the manner in which the objects are initialized."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202326136",
                "id": "CVE-2023-26136 (containers)",
                "description": "The package tough-cookie in versions prior to 4.1.3 are vulnerable to Prototype Pollution due to improper handling of Cookies when using CookieJar in &#34;rejectPublicSuffixes=false&#34; mode. This issue arises from the manner in which the objects are initialized.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-42282 (containers)",
              "name": "Cve202342282",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The `isPublic()` function in the NPM package ip doesn&#39;t correctly identify certain private IP addresses in uncommon formats, such as 0x7F.1 as private. Instead, it reports them as public by returning true. This can lead to security issues such as Server-Side Request Forgery (SSRF) if `isPublic()` is used to protect sensitive code paths when passed user input. Versions prior to 1.1.9 and versions 2.x prior to 2.0.1 are affected.\n",
                "markdown": "The `isPublic()` function in the NPM package ip doesn&#39;t correctly identify certain private IP addresses in uncommon formats, such as 0x7F.1 as private. Instead, it reports them as public by returning true. This can lead to security issues such as Server-Side Request Forgery (SSRF) if `isPublic()` is used to protect sensitive code paths when passed user input. Versions prior to 1.1.9 and versions 2.x prior to 2.0.1 are affected.\n"
              },
              "fullDescription": {
                "text": "The `isPublic()` function in the NPM package ip doesn&#39;t correctly identify certain private IP addresses in uncommon formats, such as 0x7F.1 as private. Instead, it reports them as public by returning true. This can lead to security issues such as Server-Side Request Forgery (SSRF) if `isPublic()` is used to protect sensitive code paths when passed user input. Versions prior to 1.1.9 and versions 2.x prior to 2.0.1 are affected.\n"
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202342282",
                "id": "CVE-2023-42282 (containers)",
                "description": "The `isPublic()` function in the NPM package ip doesn&#39;t correctly identify certain private IP addresses in uncommon formats, such as 0x7F.1 as private. Instead, it reports them as public by returning true. This can lead to security issues such as Server-Side Request Forgery (SSRF) if `isPublic()` is used to protect sensitive code paths when passed user input. Versions prior to 1.1.9 and versions 2.x prior to 2.0.1 are affected.\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-45311 (sca)",
              "name": "Cve202345311",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package fsevents in versions 1.0.0 through 1.2.10 depends on the &#34;https://fsevents-binaries.s3-us-west-2.amazonaws.com&#34; URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary.",
                "markdown": "The package fsevents in versions 1.0.0 through 1.2.10 depends on the &#34;https://fsevents-binaries.s3-us-west-2.amazonaws.com&#34; URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary."
              },
              "fullDescription": {
                "text": "The package fsevents in versions 1.0.0 through 1.2.10 depends on the &#34;https://fsevents-binaries.s3-us-west-2.amazonaws.com&#34; URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202345311",
                "id": "CVE-2023-45311 (sca)",
                "description": "The package fsevents in versions 1.0.0 through 1.2.10 depends on the &#34;https://fsevents-binaries.s3-us-west-2.amazonaws.com&#34; URL, which might allow an adversary to execute arbitrary code if any JavaScript project (that depends on fsevents) distributes code that was obtained from that URL at a time when it was controlled by an adversary.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-3596 (containers)",
              "name": "Cve20243596",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "RADIUS Protocol under RFC 2865 is susceptible to forgery attacks by a local attacker who can modify any valid Response (Access-Accept, Access-Reject, or Access-Challenge) to any other response using a chosen-prefix collision attack against MD5 Response Authenticator signature. This vulnerability affects edumfa versions prior to  2.2.0",
                "markdown": "RADIUS Protocol under RFC 2865 is susceptible to forgery attacks by a local attacker who can modify any valid Response (Access-Accept, Access-Reject, or Access-Challenge) to any other response using a chosen-prefix collision attack against MD5 Response Authenticator signature. This vulnerability affects edumfa versions prior to  2.2.0"
              },
              "fullDescription": {
                "text": "RADIUS Protocol under RFC 2865 is susceptible to forgery attacks by a local attacker who can modify any valid Response (Access-Accept, Access-Reject, or Access-Challenge) to any other response using a chosen-prefix collision attack against MD5 Response Authenticator signature. This vulnerability affects edumfa versions prior to  2.2.0"
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve20243596",
                "id": "CVE-2024-3596 (containers)",
                "description": "RADIUS Protocol under RFC 2865 is susceptible to forgery attacks by a local attacker who can modify any valid Response (Access-Accept, Access-Reject, or Access-Challenge) to any other response using a chosen-prefix collision attack against MD5 Response Authenticator signature. This vulnerability affects edumfa versions prior to  2.2.0",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-37371 (containers)",
              "name": "Cve202437371",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In MIT Kerberos 5 (aka krb5) prior to version 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
                "markdown": "In MIT Kerberos 5 (aka krb5) prior to version 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields."
              },
              "fullDescription": {
                "text": "In MIT Kerberos 5 (aka krb5) prior to version 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202437371",
                "id": "CVE-2024-37371 (containers)",
                "description": "In MIT Kerberos 5 (aka krb5) prior to version 1.21.3, an attacker can cause invalid memory reads during GSS message token handling by sending message tokens with invalid length fields.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-40643 (sca)",
              "name": "Cve202440643",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Joplin is a free, open-source note-taking and to-do application. Joplin fails to consider that &#34;&lt;&#34; followed by a non-letter character will not be considered HTML as such it is possible to do a Cross-site Scripting (XSS) by putting an &#34;illegal&#34; tag within a tag. This issue affects htmlparser2 versions 3.0.0 prior to 4.1.0 &amp; @joplin/fork-htmlparser2 versions 3.0.0 through 4.1.52.\n\n",
                "markdown": "Joplin is a free, open-source note-taking and to-do application. Joplin fails to consider that &#34;&lt;&#34; followed by a non-letter character will not be considered HTML as such it is possible to do a Cross-site Scripting (XSS) by putting an &#34;illegal&#34; tag within a tag. This issue affects htmlparser2 versions 3.0.0 prior to 4.1.0 &amp; @joplin/fork-htmlparser2 versions 3.0.0 through 4.1.52.\n\n"
              },
              "fullDescription": {
                "text": "Joplin is a free, open-source note-taking and to-do application. Joplin fails to consider that &#34;&lt;&#34; followed by a non-letter character will not be considered HTML as such it is possible to do a Cross-site Scripting (XSS) by putting an &#34;illegal&#34; tag within a tag. This issue affects htmlparser2 versions 3.0.0 prior to 4.1.0 &amp; @joplin/fork-htmlparser2 versions 3.0.0 through 4.1.52.\n\n"
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202440643",
                "id": "CVE-2024-40643 (sca)",
                "description": "Joplin is a free, open-source note-taking and to-do application. Joplin fails to consider that &#34;&lt;&#34; followed by a non-letter character will not be considered HTML as such it is possible to do a Cross-site Scripting (XSS) by putting an &#34;illegal&#34; tag within a tag. This issue affects htmlparser2 versions 3.0.0 prior to 4.1.0 &amp; @joplin/fork-htmlparser2 versions 3.0.0 through 4.1.52.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-45337 (containers)",
              "name": "Cve202445337",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Applications and libraries that misuse the &#39;ServerConfig.PublicKeyCallback&#39; callback may be susceptible to an authorization bypass. The documentation for &#39;ServerConfig.PublicKeyCallback&#39; says that a call to this function does not guarantee that the key offered is in fact used to authenticate. Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. &#39;PublicKeyCallback&#39; may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to &#39;PublicKeyCallback&#39; (or derived information) and make security-relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B and then authenticate with A. &#39;PublicKeyCallback&#39; would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation, golang.org/x/crypto prior to 0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to &#39;ServerConfig.PublicKeyCallback&#39; will be the key used to authenticate the connection. &#39;PublicKeyCallback&#39; will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to &#39;PublicKeyCallback&#39; if the connection is then authenticated with a different method, such as &#39;PasswordCallback&#39;, &#39;KeyboardInteractiveCallback&#39;, or &#39;NoClientAuth&#39;. Users should be using the &#39;Extensions&#39; field of the &#39;Permissions&#39; return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing the external state. Once the connection is established, the state corresponding to the successful authentication attempt can be retrieved via the &#39;ServerConn.Permissions&#39; field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
                "markdown": "Applications and libraries that misuse the &#39;ServerConfig.PublicKeyCallback&#39; callback may be susceptible to an authorization bypass. The documentation for &#39;ServerConfig.PublicKeyCallback&#39; says that a call to this function does not guarantee that the key offered is in fact used to authenticate. Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. &#39;PublicKeyCallback&#39; may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to &#39;PublicKeyCallback&#39; (or derived information) and make security-relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B and then authenticate with A. &#39;PublicKeyCallback&#39; would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation, golang.org/x/crypto prior to 0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to &#39;ServerConfig.PublicKeyCallback&#39; will be the key used to authenticate the connection. &#39;PublicKeyCallback&#39; will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to &#39;PublicKeyCallback&#39; if the connection is then authenticated with a different method, such as &#39;PasswordCallback&#39;, &#39;KeyboardInteractiveCallback&#39;, or &#39;NoClientAuth&#39;. Users should be using the &#39;Extensions&#39; field of the &#39;Permissions&#39; return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing the external state. Once the connection is established, the state corresponding to the successful authentication attempt can be retrieved via the &#39;ServerConn.Permissions&#39; field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance."
              },
              "fullDescription": {
                "text": "Applications and libraries that misuse the &#39;ServerConfig.PublicKeyCallback&#39; callback may be susceptible to an authorization bypass. The documentation for &#39;ServerConfig.PublicKeyCallback&#39; says that a call to this function does not guarantee that the key offered is in fact used to authenticate. Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. &#39;PublicKeyCallback&#39; may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to &#39;PublicKeyCallback&#39; (or derived information) and make security-relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B and then authenticate with A. &#39;PublicKeyCallback&#39; would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation, golang.org/x/crypto prior to 0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to &#39;ServerConfig.PublicKeyCallback&#39; will be the key used to authenticate the connection. &#39;PublicKeyCallback&#39; will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to &#39;PublicKeyCallback&#39; if the connection is then authenticated with a different method, such as &#39;PasswordCallback&#39;, &#39;KeyboardInteractiveCallback&#39;, or &#39;NoClientAuth&#39;. Users should be using the &#39;Extensions&#39; field of the &#39;Permissions&#39; return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing the external state. Once the connection is established, the state corresponding to the successful authentication attempt can be retrieved via the &#39;ServerConn.Permissions&#39; field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve202445337",
                "id": "CVE-2024-45337 (containers)",
                "description": "Applications and libraries that misuse the &#39;ServerConfig.PublicKeyCallback&#39; callback may be susceptible to an authorization bypass. The documentation for &#39;ServerConfig.PublicKeyCallback&#39; says that a call to this function does not guarantee that the key offered is in fact used to authenticate. Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. &#39;PublicKeyCallback&#39; may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to &#39;PublicKeyCallback&#39; (or derived information) and make security-relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B and then authenticate with A. &#39;PublicKeyCallback&#39; would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation, golang.org/x/crypto prior to 0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to &#39;ServerConfig.PublicKeyCallback&#39; will be the key used to authenticate the connection. &#39;PublicKeyCallback&#39; will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to &#39;PublicKeyCallback&#39; if the connection is then authenticated with a different method, such as &#39;PasswordCallback&#39;, &#39;KeyboardInteractiveCallback&#39;, or &#39;NoClientAuth&#39;. Users should be using the &#39;Extensions&#39; field of the &#39;Permissions&#39; return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing the external state. Once the connection is established, the state corresponding to the successful authentication attempt can be retrieved via the &#39;ServerConn.Permissions&#39; field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-7783 (sca)",
              "name": "Cve20257783",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Use of Insufficiently Random Values vulnerability in form-data allows HTTP Parameter Pollution (HPP). This vulnerability is associated with program files `lib/form_data.Js`. This issue affects form-data versions 0.0.2 through 2.5.3, versions 3.0.0 through 3.0.3, and versions 4.0.0 through 4.0.3. This issue also affects axios versions prior to 1.11.0, as it includes the vulnerable form-data package as a dependency.",
                "markdown": "Use of Insufficiently Random Values vulnerability in form-data allows HTTP Parameter Pollution (HPP). This vulnerability is associated with program files `lib/form_data.Js`. This issue affects form-data versions 0.0.2 through 2.5.3, versions 3.0.0 through 3.0.3, and versions 4.0.0 through 4.0.3. This issue also affects axios versions prior to 1.11.0, as it includes the vulnerable form-data package as a dependency."
              },
              "fullDescription": {
                "text": "Use of Insufficiently Random Values vulnerability in form-data allows HTTP Parameter Pollution (HPP). This vulnerability is associated with program files `lib/form_data.Js`. This issue affects form-data versions 0.0.2 through 2.5.3, versions 3.0.0 through 3.0.3, and versions 4.0.0 through 4.0.3. This issue also affects axios versions prior to 1.11.0, as it includes the vulnerable form-data package as a dependency."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve20257783",
                "id": "CVE-2025-7783 (sca)",
                "description": "Use of Insufficiently Random Values vulnerability in form-data allows HTTP Parameter Pollution (HPP). This vulnerability is associated with program files `lib/form_data.Js`. This issue affects form-data versions 0.0.2 through 2.5.3, versions 3.0.0 through 3.0.3, and versions 4.0.0 through 4.0.3. This issue also affects axios versions prior to 1.11.0, as it includes the vulnerable form-data package as a dependency.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2025-7783 (containers)",
              "name": "Cve20257783",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Use of Insufficiently Random Values vulnerability in form-data allows HTTP Parameter Pollution (HPP). This vulnerability is associated with program files `lib/form_data.Js`. This issue affects form-data versions 0.0.2 through 2.5.3, versions 3.0.0 through 3.0.3, and versions 4.0.0 through 4.0.3. This issue also affects axios versions prior to 1.11.0, as it includes the vulnerable form-data package as a dependency.",
                "markdown": "Use of Insufficiently Random Values vulnerability in form-data allows HTTP Parameter Pollution (HPP). This vulnerability is associated with program files `lib/form_data.Js`. This issue affects form-data versions 0.0.2 through 2.5.3, versions 3.0.0 through 3.0.3, and versions 4.0.0 through 4.0.3. This issue also affects axios versions prior to 1.11.0, as it includes the vulnerable form-data package as a dependency."
              },
              "fullDescription": {
                "text": "Use of Insufficiently Random Values vulnerability in form-data allows HTTP Parameter Pollution (HPP). This vulnerability is associated with program files `lib/form_data.Js`. This issue affects form-data versions 0.0.2 through 2.5.3, versions 3.0.0 through 3.0.3, and versions 4.0.0 through 4.0.3. This issue also affects axios versions prior to 1.11.0, as it includes the vulnerable form-data package as a dependency."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cve20257783",
                "id": "CVE-2025-7783 (containers)",
                "description": "Use of Insufficiently Random Values vulnerability in form-data allows HTTP Parameter Pollution (HPP). This vulnerability is associated with program files `lib/form_data.Js`. This issue affects form-data versions 0.0.2 through 2.5.3, versions 3.0.0 through 3.0.3, and versions 4.0.0 through 4.0.3. This issue also affects axios versions prior to 1.11.0, as it includes the vulnerable form-data package as a dependency.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "Cx2937c64c-029b (sca)",
              "name": "Cx2937c64c029b",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The coveralls npm package before 3.1.1 is vulnerable to command injection attack via unsafe `exec` usage in fetchGitData.js.",
                "markdown": "The coveralls npm package before 3.1.1 is vulnerable to command injection attack via unsafe `exec` usage in fetchGitData.js."
              },
              "fullDescription": {
                "text": "The coveralls npm package before 3.1.1 is vulnerable to command injection attack via unsafe `exec` usage in fetchGitData.js."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cx2937c64c029b",
                "id": "Cx2937c64c-029b (sca)",
                "description": "The coveralls npm package before 3.1.1 is vulnerable to command injection attack via unsafe `exec` usage in fetchGitData.js.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx91bd0ed8-3d13 (sca)",
              "name": "Cx91bd0ed83d13",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "This package downloads a harmful file.\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)",
                "markdown": "This package downloads a harmful file.\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)"
              },
              "fullDescription": {
                "text": "This package downloads a harmful file.\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)"
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cx91bd0ed83d13",
                "id": "Cx91bd0ed8-3d13 (sca)",
                "description": "This package downloads a harmful file.\n### About\n\nUsing a dynamic analysis environment (also known as a Sandbox) we can monitor filesystem activity such as newly created files within the lifecycle of the code package.\n\nOnce new files are created, our technology analyzes each of the newly created files. In case a file is harmful, this risk is shown. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/harmful-file-download.png)",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx9fce0189-774f (sca)",
              "name": "Cx9fce0189774f",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "handlebars before 3.0.7 and 4.0.x before 4.0.13 are vulnerable to Prototype Pollution. Templates may alter an Objects&#39; prototype, thus allowing an attacker to execute arbitrary code on the server.",
                "markdown": "handlebars before 3.0.7 and 4.0.x before 4.0.13 are vulnerable to Prototype Pollution. Templates may alter an Objects&#39; prototype, thus allowing an attacker to execute arbitrary code on the server."
              },
              "fullDescription": {
                "text": "handlebars before 3.0.7 and 4.0.x before 4.0.13 are vulnerable to Prototype Pollution. Templates may alter an Objects&#39; prototype, thus allowing an attacker to execute arbitrary code on the server."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cx9fce0189774f",
                "id": "Cx9fce0189-774f (sca)",
                "description": "handlebars before 3.0.7 and 4.0.x before 4.0.13 are vulnerable to Prototype Pollution. Templates may alter an Objects&#39; prototype, thus allowing an attacker to execute arbitrary code on the server.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxb2bfdbf4-dc11 (sca)",
              "name": "Cxb2bfdbf4dc11",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there&#39;s a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It&#39;s a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority.",
                "markdown": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there&#39;s a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It&#39;s a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority."
              },
              "fullDescription": {
                "text": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there&#39;s a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It&#39;s a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority."
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Cxb2bfdbf4dc11",
                "id": "Cxb2bfdbf4-dc11 (sca)",
                "description": "This package was manually inspected by a security researcher and flagged as malicious\n### About\n\nClassifying malicious packages is an internal process, analysis is done at scale automatically via multiple engines. Once there&#39;s a risk suspicion, this is forwarded to a security researcher for a manual evaluation.\n\nAttackers take advantage of the excessive trust in the open-source ecosystem and launch software supply chain attacks in the form of code packages.   \n\nThe risk of having a package with a malicious payload is high. It&#39;s a common behavior for most of the malicious payloads to execute itself automatically upon installing or using the package. \n\n![infographic](https://checkmarx-scs-cdn.s3.amazonaws.com/sca/infographics/malicious-package.png)\n\nWhile some dependency vulnerabilities have the privilege to be kept as known issue due to risk-management, same does not apply in the case of a malicious package, and it should be removed with the highest priority.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Code Injection - 18264905025034185052 (sast)",
              "name": "Code Injection",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The application&#39;s\u00a0 method receives and\u00a0dynamically executes user-controlled code using\u00a0afterTax,\u00a0at line 33 of /app/routes/contributions.js. This could enable an attacker to inject and run arbitrary code.\n\nThe attacker can inject the executed code via user input,\u00a0afterTax, which is retrieved by the application in the  method, at line 33 of /app/routes/contributions.js.\n\n",
                "markdown": "The application&#39;s\u00a0 method receives and\u00a0dynamically executes user-controlled code using\u00a0afterTax,\u00a0at line 33 of /app/routes/contributions.js. This could enable an attacker to inject and run arbitrary code.\n\nThe attacker can inject the executed code via user input,\u00a0afterTax, which is retrieved by the application in the  method, at line 33 of /app/routes/contributions.js.\n\n"
              },
              "fullDescription": {
                "text": "The application&#39;s\u00a0 method receives and\u00a0dynamically executes user-controlled code using\u00a0afterTax,\u00a0at line 33 of /app/routes/contributions.js. This could enable an attacker to inject and run arbitrary code.\n\nThe attacker can inject the executed code via user input,\u00a0afterTax, which is retrieved by the application in the  method, at line 33 of /app/routes/contributions.js.\n\n"
              },
              "properties": {
                "security-severity": "9.0",
                "name": "Code Injection",
                "id": "Code Injection - 18264905025034185052 (sast)",
                "description": "The application&#39;s\u00a0 method receives and\u00a0dynamically executes user-controlled code using\u00a0afterTax,\u00a0at line 33 of /app/routes/contributions.js. This could enable an attacker to inject and run arbitrary code.\n\nThe attacker can inject the executed code via user input,\u00a0afterTax, which is retrieved by the application in the  method, at line 33 of /app/routes/contributions.js.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "Token-Permissions - TokenPermissionsID (sscs-scorecard)",
              "name": "Token-Permissions",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the project's workflows follow the principle of least privilege."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Token-Permissions",
                "id": "Token-Permissions - TokenPermissionsID (sscs-scorecard)",
                "description": "Determines if the project's workflows follow the principle of least privilege.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "Hashicorp-Tf-Password - hashicorp-tf-password (sscs-secret-detection)",
              "name": "Hashicorp-Tf-Password",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Extract password \"Use*** from codebase and store securely in a vault.",
                "markdown": "Extract password \"Use*** from codebase and store securely in a vault."
              },
              "fullDescription": {
                "text": "Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Hashicorp-Tf-Password",
                "id": "Hashicorp-Tf-Password - hashicorp-tf-password (sscs-secret-detection)",
                "description": "Identified a HashiCorp Terraform password field, risking unauthorized infrastructure configuration and security breaches.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-secret-detection"
                ]
              }
            },
            {
              "id": "SSRF - 9890841350290224058 (sast)",
              "name": "SSRF",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The application sends a request to a remote server, for some resource, using url in /app/routes/research.js:16. However, an attacker can control the target of the request, by sending a URL or other data in\u00a0symbol at /app/routes/research.js:15.\n\n",
                "markdown": "The application sends a request to a remote server, for some resource, using url in /app/routes/research.js:16. However, an attacker can control the target of the request, by sending a URL or other data in\u00a0symbol at /app/routes/research.js:15.\n\n"
              },
              "fullDescription": {
                "text": "The application sends a request to a remote server, for some resource, using url in /app/routes/research.js:16. However, an attacker can control the target of the request, by sending a URL or other data in\u00a0symbol at /app/routes/research.js:15.\n\n"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "SSRF",
                "id": "SSRF - 9890841350290224058 (sast)",
                "description": "The application sends a request to a remote server, for some resource, using url in /app/routes/research.js:16. However, an attacker can control the target of the request, by sending a URL or other data in\u00a0symbol at /app/routes/research.js:15.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "Generic-Api-Key - generic-api-key (sscs-secret-detection)",
              "name": "Generic-Api-Key",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Remove api-key v9dn*** from code and store in AWS Secrets Manager.",
                "markdown": "Remove api-key v9dn*** from code and store in AWS Secrets Manager."
              },
              "fullDescription": {
                "text": "Detected a Generic API Key, potentially exposing access to various services and sensitive operations."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Generic-Api-Key",
                "id": "Generic-Api-Key - generic-api-key (sscs-secret-detection)",
                "description": "Detected a Generic API Key, potentially exposing access to various services and sensitive operations.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-secret-detection"
                ]
              }
            },
            {
              "id": "Dependency-Update-Tool - DependencyUpdateToolID (sscs-scorecard)",
              "name": "Dependency-Update-Tool",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#dependency-update-tool",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the project uses a dependency update tool."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Dependency-Update-Tool",
                "id": "Dependency-Update-Tool - DependencyUpdateToolID (sscs-scorecard)",
                "description": "Determines if the project uses a dependency update tool.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "CVE-2014-10064 (sca)",
              "name": "Cve201410064",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The qs module before 1.0.0 does not have an option or default for specifying object depth and when parsing a string representing a deeply nested object will block the event loop for long periods of time. An attacker could leverage this to cause a temporary denial-of-service condition, for example, in a web application, other requests would not be processed while this blocking is occurring.",
                "markdown": "The qs module before 1.0.0 does not have an option or default for specifying object depth and when parsing a string representing a deeply nested object will block the event loop for long periods of time. An attacker could leverage this to cause a temporary denial-of-service condition, for example, in a web application, other requests would not be processed while this blocking is occurring."
              },
              "fullDescription": {
                "text": "The qs module before 1.0.0 does not have an option or default for specifying object depth and when parsing a string representing a deeply nested object will block the event loop for long periods of time. An attacker could leverage this to cause a temporary denial-of-service condition, for example, in a web application, other requests would not be processed while this blocking is occurring."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201410064",
                "id": "CVE-2014-10064 (sca)",
                "description": "The qs module before 1.0.0 does not have an option or default for specifying object depth and when parsing a string representing a deeply nested object will block the event loop for long periods of time. An attacker could leverage this to cause a temporary denial-of-service condition, for example, in a web application, other requests would not be processed while this blocking is occurring.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2015-8858 (sca)",
              "name": "Cve20158858",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A Regular Expression Denial of Service (ReDoS) vulnerability was discovered in uglify-js. Malicious inputs can be passed into the parse() method.",
                "markdown": "A Regular Expression Denial of Service (ReDoS) vulnerability was discovered in uglify-js. Malicious inputs can be passed into the parse() method."
              },
              "fullDescription": {
                "text": "A Regular Expression Denial of Service (ReDoS) vulnerability was discovered in uglify-js. Malicious inputs can be passed into the parse() method."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20158858",
                "id": "CVE-2015-8858 (sca)",
                "description": "A Regular Expression Denial of Service (ReDoS) vulnerability was discovered in uglify-js. Malicious inputs can be passed into the parse() method.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2016-10540 (sca)",
              "name": "Cve201610540",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects. The primary function, `minimatch(path, pattern)` in Minimatch 3.0.1 and earlier is vulnerable to ReDoS in the `pattern` parameter.",
                "markdown": "Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects. The primary function, `minimatch(path, pattern)` in Minimatch 3.0.1 and earlier is vulnerable to ReDoS in the `pattern` parameter."
              },
              "fullDescription": {
                "text": "Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects. The primary function, `minimatch(path, pattern)` in Minimatch 3.0.1 and earlier is vulnerable to ReDoS in the `pattern` parameter."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201610540",
                "id": "CVE-2016-10540 (sca)",
                "description": "Minimatch is a minimal matching utility that works by converting glob expressions into JavaScript `RegExp` objects. The primary function, `minimatch(path, pattern)` in Minimatch 3.0.1 and earlier is vulnerable to ReDoS in the `pattern` parameter.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2016-2515 (sca)",
              "name": "Cve20162515",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Hawk before 3.1.3 and 4.x before 4.1.1 allow remote attackers to cause a denial of service (CPU consumption or partial outage) via a long (1) header or (2) URI that is matched against an improper regular expression.",
                "markdown": "Hawk before 3.1.3 and 4.x before 4.1.1 allow remote attackers to cause a denial of service (CPU consumption or partial outage) via a long (1) header or (2) URI that is matched against an improper regular expression."
              },
              "fullDescription": {
                "text": "Hawk before 3.1.3 and 4.x before 4.1.1 allow remote attackers to cause a denial of service (CPU consumption or partial outage) via a long (1) header or (2) URI that is matched against an improper regular expression."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20162515",
                "id": "CVE-2016-2515 (sca)",
                "description": "Hawk before 3.1.3 and 4.x before 4.1.1 allow remote attackers to cause a denial of service (CPU consumption or partial outage) via a long (1) header or (2) URI that is matched against an improper regular expression.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-1000048 (sca)",
              "name": "Cve20171000048",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "the web framework using ljharb&#39;s qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",
                "markdown": "the web framework using ljharb&#39;s qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash."
              },
              "fullDescription": {
                "text": "the web framework using ljharb&#39;s qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20171000048",
                "id": "CVE-2017-1000048 (sca)",
                "description": "the web framework using ljharb&#39;s qs module older than v6.3.2, v6.2.3, v6.1.2, and v6.0.4 is vulnerable to a DoS. A malicious user can send a evil request to cause the web framework crash.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-15010 (sca)",
              "name": "Cve201715010",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU.",
                "markdown": "A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU."
              },
              "fullDescription": {
                "text": "A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201715010",
                "id": "CVE-2017-15010 (sca)",
                "description": "A ReDoS (regular expression denial of service) flaw was found in the tough-cookie module before 2.3.3 for Node.js. An attacker that is able to make an HTTP request using a specially crafted cookie may cause the application to consume an excessive amount of CPU.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-16032 (sca)",
              "name": "Cve201716032",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Brace-expansion is vulnerable to a Regular Expression Denial of Service (ReDoS) condition in versions prior to 1.1.7.",
                "markdown": "Brace-expansion is vulnerable to a Regular Expression Denial of Service (ReDoS) condition in versions prior to 1.1.7."
              },
              "fullDescription": {
                "text": "Brace-expansion is vulnerable to a Regular Expression Denial of Service (ReDoS) condition in versions prior to 1.1.7."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201716032",
                "id": "CVE-2017-16032 (sca)",
                "description": "Brace-expansion is vulnerable to a Regular Expression Denial of Service (ReDoS) condition in versions prior to 1.1.7.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-16114 (sca)",
              "name": "Cve201716114",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The marked module is vulnerable to a regular expression denial of service before 0.3.9. Based on the information published in the public issue, 1k characters can block for around 6 seconds.",
                "markdown": "The marked module is vulnerable to a regular expression denial of service before 0.3.9. Based on the information published in the public issue, 1k characters can block for around 6 seconds."
              },
              "fullDescription": {
                "text": "The marked module is vulnerable to a regular expression denial of service before 0.3.9. Based on the information published in the public issue, 1k characters can block for around 6 seconds."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201716114",
                "id": "CVE-2017-16114 (sca)",
                "description": "The marked module is vulnerable to a regular expression denial of service before 0.3.9. Based on the information published in the public issue, 1k characters can block for around 6 seconds.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-16138 (sca)",
              "name": "Cve201716138",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The mime module &lt; 1.4.1 and 2.0.0 through 2.0.2 is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.",
                "markdown": "The mime module &lt; 1.4.1 and 2.0.0 through 2.0.2 is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input."
              },
              "fullDescription": {
                "text": "The mime module &lt; 1.4.1 and 2.0.0 through 2.0.2 is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201716138",
                "id": "CVE-2017-16138 (sca)",
                "description": "The mime module &lt; 1.4.1 and 2.0.0 through 2.0.2 is vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-18077 (sca)",
              "name": "Cve201718077",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "index.js in brace-expansion before 1.1.7 is vulnerable to Regular Expression Denial of Service (ReDoS) attacks, as demonstrated by an expand argument containing many comma characters.",
                "markdown": "index.js in brace-expansion before 1.1.7 is vulnerable to Regular Expression Denial of Service (ReDoS) attacks, as demonstrated by an expand argument containing many comma characters."
              },
              "fullDescription": {
                "text": "index.js in brace-expansion before 1.1.7 is vulnerable to Regular Expression Denial of Service (ReDoS) attacks, as demonstrated by an expand argument containing many comma characters."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201718077",
                "id": "CVE-2017-18077 (sca)",
                "description": "index.js in brace-expansion before 1.1.7 is vulnerable to Regular Expression Denial of Service (ReDoS) attacks, as demonstrated by an expand argument containing many comma characters.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-20834 (sca)",
              "name": "Cve201820834",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in node-tar before version 4.4.2 (excluding version 2.2.2). An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content. A patch has been applied to node-tar v2.2.2).",
                "markdown": "A vulnerability was found in node-tar before version 4.4.2 (excluding version 2.2.2). An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content. A patch has been applied to node-tar v2.2.2)."
              },
              "fullDescription": {
                "text": "A vulnerability was found in node-tar before version 4.4.2 (excluding version 2.2.2). An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content. A patch has been applied to node-tar v2.2.2)."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201820834",
                "id": "CVE-2018-20834 (sca)",
                "description": "A vulnerability was found in node-tar before version 4.4.2 (excluding version 2.2.2). An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content. A patch has been applied to node-tar v2.2.2).",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-3728 (sca)",
              "name": "Cve20183728",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "hoek node module before 4.2.1 and 5.0.x before 5.0.3 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via &#39;merge&#39; and &#39;applyToDefaults&#39; functions, which allows a malicious user to modify the prototype of &#34;Object&#34; via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
                "markdown": "hoek node module before 4.2.1 and 5.0.x before 5.0.3 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via &#39;merge&#39; and &#39;applyToDefaults&#39; functions, which allows a malicious user to modify the prototype of &#34;Object&#34; via __proto__, causing the addition or modification of an existing property that will exist on all objects."
              },
              "fullDescription": {
                "text": "hoek node module before 4.2.1 and 5.0.x before 5.0.3 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via &#39;merge&#39; and &#39;applyToDefaults&#39; functions, which allows a malicious user to modify the prototype of &#34;Object&#34; via __proto__, causing the addition or modification of an existing property that will exist on all objects."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20183728",
                "id": "CVE-2018-3728 (sca)",
                "description": "hoek node module before 4.2.1 and 5.0.x before 5.0.3 suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via &#39;merge&#39; and &#39;applyToDefaults&#39; functions, which allows a malicious user to modify the prototype of &#34;Object&#34; via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-3737 (sca)",
              "name": "Cve20183737",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "sshpk is vulnerable to ReDoS when parsing crafted invalid public keys.",
                "markdown": "sshpk is vulnerable to ReDoS when parsing crafted invalid public keys."
              },
              "fullDescription": {
                "text": "sshpk is vulnerable to ReDoS when parsing crafted invalid public keys."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20183737",
                "id": "CVE-2018-3737 (sca)",
                "description": "sshpk is vulnerable to ReDoS when parsing crafted invalid public keys.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-13173 (sca)",
              "name": "Cve201913173",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "fstream before 1.0.12 is vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink, will overwrite the system&#39;s file with the contents of the extracted file. The fstream.DirWriter() function is vulnerable.",
                "markdown": "fstream before 1.0.12 is vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink, will overwrite the system&#39;s file with the contents of the extracted file. The fstream.DirWriter() function is vulnerable."
              },
              "fullDescription": {
                "text": "fstream before 1.0.12 is vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink, will overwrite the system&#39;s file with the contents of the extracted file. The fstream.DirWriter() function is vulnerable."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201913173",
                "id": "CVE-2019-13173 (sca)",
                "description": "fstream before 1.0.12 is vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink, will overwrite the system&#39;s file with the contents of the extracted file. The fstream.DirWriter() function is vulnerable.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-16776 (sca)",
              "name": "Cve201916776",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user&#39;s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "markdown": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user&#39;s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option."
              },
              "fullDescription": {
                "text": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user&#39;s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201916776",
                "id": "CVE-2019-16776 (sca)",
                "description": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It fails to prevent access to folders outside of the intended node_modules folder through the bin field. A properly constructed entry in the package.json bin field would allow a package publisher to modify and/or gain access to arbitrary files on a user&#39;s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-20149 (sca)",
              "name": "Cve201920149",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "ctorName in index.js in kind-of v6.0.0 through v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by &#39;constructor&#39;: {&#39;name&#39;:&#39;Symbol&#39;}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result.",
                "markdown": "ctorName in index.js in kind-of v6.0.0 through v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by &#39;constructor&#39;: {&#39;name&#39;:&#39;Symbol&#39;}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result."
              },
              "fullDescription": {
                "text": "ctorName in index.js in kind-of v6.0.0 through v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by &#39;constructor&#39;: {&#39;name&#39;:&#39;Symbol&#39;}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201920149",
                "id": "CVE-2019-20149 (sca)",
                "description": "ctorName in index.js in kind-of v6.0.0 through v6.0.2 allows external user input to overwrite certain internal attributes via a conflicting name, as demonstrated by &#39;constructor&#39;: {&#39;name&#39;:&#39;Symbol&#39;}. Hence, a crafted payload can overwrite this builtin attribute to manipulate the type detection result.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-20920 (sca)",
              "name": "Cve201920920",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim&#39;s browser (effectively serving as XSS).",
                "markdown": "Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim&#39;s browser (effectively serving as XSS)."
              },
              "fullDescription": {
                "text": "Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim&#39;s browser (effectively serving as XSS)."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201920920",
                "id": "CVE-2019-20920 (sca)",
                "description": "Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim&#39;s browser (effectively serving as XSS).",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-20922 (sca)",
              "name": "Cve201920922",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources.",
                "markdown": "Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources."
              },
              "fullDescription": {
                "text": "Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve201920922",
                "id": "CVE-2019-20922 (sca)",
                "description": "Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-28469 (sca)",
              "name": "Cve202028469",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In glob-parent prior to 5.1.2 the way that the `enclosure` regex in `index.js` is defined could allow an attacker to exploit it, and cause a Denial of Service (ReDoS). This has been fixed in version 5.1.2.",
                "markdown": "In glob-parent prior to 5.1.2 the way that the `enclosure` regex in `index.js` is defined could allow an attacker to exploit it, and cause a Denial of Service (ReDoS). This has been fixed in version 5.1.2."
              },
              "fullDescription": {
                "text": "In glob-parent prior to 5.1.2 the way that the `enclosure` regex in `index.js` is defined could allow an attacker to exploit it, and cause a Denial of Service (ReDoS). This has been fixed in version 5.1.2."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202028469",
                "id": "CVE-2020-28469 (sca)",
                "description": "In glob-parent prior to 5.1.2 the way that the `enclosure` regex in `index.js` is defined could allow an attacker to exploit it, and cause a Denial of Service (ReDoS). This has been fixed in version 5.1.2.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-7662 (sca)",
              "name": "Cve20207662",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "websocket-extensions npm module prior to 0.1.4 allows Denial of Service (DoS) via Regex Backtracking. The extension parser may take quadratic time when parsing a header containing an unclosed string parameter value whose content is a repeating two-byte sequence of a backslash and some other character. This could be abused by an attacker to conduct Regex Denial Of Service (ReDoS) on a single-threaded server by providing a malicious payload with the Sec-WebSocket-Extensions header.",
                "markdown": "websocket-extensions npm module prior to 0.1.4 allows Denial of Service (DoS) via Regex Backtracking. The extension parser may take quadratic time when parsing a header containing an unclosed string parameter value whose content is a repeating two-byte sequence of a backslash and some other character. This could be abused by an attacker to conduct Regex Denial Of Service (ReDoS) on a single-threaded server by providing a malicious payload with the Sec-WebSocket-Extensions header."
              },
              "fullDescription": {
                "text": "websocket-extensions npm module prior to 0.1.4 allows Denial of Service (DoS) via Regex Backtracking. The extension parser may take quadratic time when parsing a header containing an unclosed string parameter value whose content is a repeating two-byte sequence of a backslash and some other character. This could be abused by an attacker to conduct Regex Denial Of Service (ReDoS) on a single-threaded server by providing a malicious payload with the Sec-WebSocket-Extensions header."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20207662",
                "id": "CVE-2020-7662 (sca)",
                "description": "websocket-extensions npm module prior to 0.1.4 allows Denial of Service (DoS) via Regex Backtracking. The extension parser may take quadratic time when parsing a header containing an unclosed string parameter value whose content is a repeating two-byte sequence of a backslash and some other character. This could be abused by an attacker to conduct Regex Denial Of Service (ReDoS) on a single-threaded server by providing a malicious payload with the Sec-WebSocket-Extensions header.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-7729 (sca)",
              "name": "Cve20207729",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML.",
                "markdown": "The package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML."
              },
              "fullDescription": {
                "text": "The package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20207729",
                "id": "CVE-2020-7729 (sca)",
                "description": "The package grunt before 1.3.0 are vulnerable to Arbitrary Code Execution due to the default usage of the function load() instead of its secure replacement safeLoad() of the package js-yaml inside grunt.file.readYAML.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-7754 (sca)",
              "name": "Cve20207754",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "This affects the package npm-user-validate before 1.0.1. The regex that validates user emails took exponentially longer to process long input strings beginning with @ characters.",
                "markdown": "This affects the package npm-user-validate before 1.0.1. The regex that validates user emails took exponentially longer to process long input strings beginning with @ characters."
              },
              "fullDescription": {
                "text": "This affects the package npm-user-validate before 1.0.1. The regex that validates user emails took exponentially longer to process long input strings beginning with @ characters."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20207754",
                "id": "CVE-2020-7754 (sca)",
                "description": "This affects the package npm-user-validate before 1.0.1. The regex that validates user emails took exponentially longer to process long input strings beginning with @ characters.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-8116 (sca)",
              "name": "Cve20208116",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
                "markdown": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects."
              },
              "fullDescription": {
                "text": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20208116",
                "id": "CVE-2020-8116 (sca)",
                "description": "Prototype pollution vulnerability in dot-prop npm package versions before 4.2.1 and versions 5.x before 5.1.1 allows an attacker to add arbitrary properties to JavaScript language constructs such as objects.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-8203 (sca)",
              "name": "Cve20208203",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.",
                "markdown": "Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20."
              },
              "fullDescription": {
                "text": "Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20208203",
                "id": "CVE-2020-8203 (sca)",
                "description": "Prototype pollution attack when using _.zipObjectDeep in lodash before 4.17.20.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-23337 (sca)",
              "name": "Cve202123337",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "lodash and lodash-es prior to 4.17.21, are vulnerable to Command Injection via the &#34;template&#34; function. lodash.template versions are vulnerable, too.",
                "markdown": "lodash and lodash-es prior to 4.17.21, are vulnerable to Command Injection via the &#34;template&#34; function. lodash.template versions are vulnerable, too."
              },
              "fullDescription": {
                "text": "lodash and lodash-es prior to 4.17.21, are vulnerable to Command Injection via the &#34;template&#34; function. lodash.template versions are vulnerable, too."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202123337",
                "id": "CVE-2021-23337 (sca)",
                "description": "lodash and lodash-es prior to 4.17.21, are vulnerable to Command Injection via the &#34;template&#34; function. lodash.template versions are vulnerable, too.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-23343 (sca)",
              "name": "Cve202123343",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "path-parse prior to 1.0.7 is vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",
                "markdown": "path-parse prior to 1.0.7 is vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity."
              },
              "fullDescription": {
                "text": "path-parse prior to 1.0.7 is vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202123343",
                "id": "CVE-2021-23343 (sca)",
                "description": "path-parse prior to 1.0.7 is vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-23358 (sca)",
              "name": "Cve202123358",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
                "markdown": "The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized."
              },
              "fullDescription": {
                "text": "The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202123358",
                "id": "CVE-2021-23358 (sca)",
                "description": "The package underscore from 1.13.0-0 and before 1.13.0-2, from 1.3.2 and before 1.12.1 are vulnerable to Arbitrary Code Injection via the template function, particularly when a variable property is passed as an argument as it is not sanitized.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-32803 (sca)",
              "name": "Cve202132803",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
                "markdown": "The npm package &#34;tar&#34; (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2."
              },
              "fullDescription": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202132803",
                "id": "CVE-2021-32803 (sca)",
                "description": "The npm package &#34;tar&#34; (aka node-tar) before versions 6.1.2, 5.0.7, 4.4.15, and 3.2.3 has an arbitrary File Creation/Overwrite vulnerability via insufficient symlink protection. `node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-32804 (sca)",
              "name": "Cve202132804",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) versions prior to 3.2.2 and 4.x prior to 4.4.14, 5.x prior to 5.0.6 and 6.x prior to 6.1.1 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",
                "markdown": "The npm package &#34;tar&#34; (aka node-tar) versions prior to 3.2.2 and 4.x prior to 4.4.14, 5.x prior to 5.0.6 and 6.x prior to 6.1.1 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar."
              },
              "fullDescription": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) versions prior to 3.2.2 and 4.x prior to 4.4.14, 5.x prior to 5.0.6 and 6.x prior to 6.1.1 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202132804",
                "id": "CVE-2021-32804 (sca)",
                "description": "The npm package &#34;tar&#34; (aka node-tar) versions prior to 3.2.2 and 4.x prior to 4.4.14, 5.x prior to 5.0.6 and 6.x prior to 6.1.1 has a arbitrary File Creation/Overwrite vulnerability due to insufficient absolute path sanitization. node-tar aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. This logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. This issue was addressed in releases 3.2.2, 4.4.14, 5.0.6 and 6.1.1. Users may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths. See referenced GitHub Advisory for details. Be aware of CVE-2021-32803 which fixes a similar bug in later versions of tar.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-33623 (sca)",
              "name": "Cve202133623",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The &#34;trim-newlines&#34; package before 3.0.1 and 4.x before 4.0.1 for Node.js is vulnerable to Regular Expression Denial-of-Service (ReDoS) through the &#34;.end()&#34; method.",
                "markdown": "The &#34;trim-newlines&#34; package before 3.0.1 and 4.x before 4.0.1 for Node.js is vulnerable to Regular Expression Denial-of-Service (ReDoS) through the &#34;.end()&#34; method."
              },
              "fullDescription": {
                "text": "The &#34;trim-newlines&#34; package before 3.0.1 and 4.x before 4.0.1 for Node.js is vulnerable to Regular Expression Denial-of-Service (ReDoS) through the &#34;.end()&#34; method."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202133623",
                "id": "CVE-2021-33623 (sca)",
                "description": "The &#34;trim-newlines&#34; package before 3.0.1 and 4.x before 4.0.1 for Node.js is vulnerable to Regular Expression Denial-of-Service (ReDoS) through the &#34;.end()&#34; method.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-37701 (sca)",
              "name": "Cve202137701",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.",
                "markdown": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc."
              },
              "fullDescription": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202137701",
                "id": "CVE-2021-37701 (sca)",
                "description": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.16, 5.0.8, and 6.1.7 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems. By first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. Additionally, a similar confusion could arise on case-insensitive filesystems. If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit. A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. These issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-9r2w-394v-53qc.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-37712 (sca)",
              "name": "Cve202137712",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 &#34;short path&#34; counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",
                "markdown": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 &#34;short path&#34; counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p."
              },
              "fullDescription": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 &#34;short path&#34; counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202137712",
                "id": "CVE-2021-37712 (sca)",
                "description": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created. This logic was insufficient when extracting tar files that contained both a directory and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 &#34;short path&#34; counterparts. A specially crafted tar archive could thus include a directory with one form of the path, followed by a symbolic link with a different string that resolves to the same file system entity, followed by a file using the first form. By first creating a directory, and then replacing that directory with a symlink that had a different apparent name that resolved to the same entry in the filesystem, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. If this is not possible, a workaround is available in the referenced GHSA-qq89-hq3f-393p.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-37713 (sca)",
              "name": "Cve202137713",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",
                "markdown": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves."
              },
              "fullDescription": {
                "text": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202137713",
                "id": "CVE-2021-37713 (sca)",
                "description": "The npm package &#34;tar&#34; (aka node-tar) before versions 4.4.18, 5.0.10, and 6.1.9 has an arbitrary file creation/overwrite and arbitrary code execution vulnerability. node-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory. This logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`. If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory. Additionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path. This only affects users of `node-tar` on Windows systems. These issues were addressed in releases 4.4.18, 5.0.10 and 6.1.9. The v3 branch of node-tar has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of node-tar. There is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does. Users are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-3807 (containers)",
              "name": "Cve20213807",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package ansi-regex versions 3.x prior to 3.0.1, 4.x prior to 4.1.1, 5.x prior to 5.0.1 and 6.0.x prior to 6.0.1 is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "The package ansi-regex versions 3.x prior to 3.0.1, 4.x prior to 4.1.1, 5.x prior to 5.0.1 and 6.0.x prior to 6.0.1 is vulnerable to Inefficient Regular Expression Complexity"
              },
              "fullDescription": {
                "text": "The package ansi-regex versions 3.x prior to 3.0.1, 4.x prior to 4.1.1, 5.x prior to 5.0.1 and 6.0.x prior to 6.0.1 is vulnerable to Inefficient Regular Expression Complexity"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20213807",
                "id": "CVE-2021-3807 (containers)",
                "description": "The package ansi-regex versions 3.x prior to 3.0.1, 4.x prior to 4.1.1, 5.x prior to 5.0.1 and 6.0.x prior to 6.0.1 is vulnerable to Inefficient Regular Expression Complexity",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2021-3807 (sca)",
              "name": "Cve20213807",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package ansi-regex versions 3.x prior to 3.0.1, 4.x prior to 4.1.1, 5.x prior to 5.0.1 and 6.0.x prior to 6.0.1 is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "The package ansi-regex versions 3.x prior to 3.0.1, 4.x prior to 4.1.1, 5.x prior to 5.0.1 and 6.0.x prior to 6.0.1 is vulnerable to Inefficient Regular Expression Complexity"
              },
              "fullDescription": {
                "text": "The package ansi-regex versions 3.x prior to 3.0.1, 4.x prior to 4.1.1, 5.x prior to 5.0.1 and 6.0.x prior to 6.0.1 is vulnerable to Inefficient Regular Expression Complexity"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20213807",
                "id": "CVE-2021-3807 (sca)",
                "description": "The package ansi-regex versions 3.x prior to 3.0.1, 4.x prior to 4.1.1, 5.x prior to 5.0.1 and 6.0.x prior to 6.0.1 is vulnerable to Inefficient Regular Expression Complexity",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-3820 (sca)",
              "name": "Cve20213820",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The `inflect` package prior to 0.3.7 is vulnerable to Inefficient Regular Expression Complexity",
                "markdown": "The `inflect` package prior to 0.3.7 is vulnerable to Inefficient Regular Expression Complexity"
              },
              "fullDescription": {
                "text": "The `inflect` package prior to 0.3.7 is vulnerable to Inefficient Regular Expression Complexity"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20213820",
                "id": "CVE-2021-3820 (sca)",
                "description": "The `inflect` package prior to 0.3.7 is vulnerable to Inefficient Regular Expression Complexity",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-43138 (sca)",
              "name": "Cve202143138",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In Async versions 2.0.0-rc.6 prior to 2.6.4, and 3.x prior to 3.2.2, a malicious user can obtain privileges via the &#34;mapValues()&#34; method, aka &#34;lib/internal/iterator.js&#34; &#34;createObjectIterator&#34; Prototype Pollution.",
                "markdown": "In Async versions 2.0.0-rc.6 prior to 2.6.4, and 3.x prior to 3.2.2, a malicious user can obtain privileges via the &#34;mapValues()&#34; method, aka &#34;lib/internal/iterator.js&#34; &#34;createObjectIterator&#34; Prototype Pollution."
              },
              "fullDescription": {
                "text": "In Async versions 2.0.0-rc.6 prior to 2.6.4, and 3.x prior to 3.2.2, a malicious user can obtain privileges via the &#34;mapValues()&#34; method, aka &#34;lib/internal/iterator.js&#34; &#34;createObjectIterator&#34; Prototype Pollution."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202143138",
                "id": "CVE-2021-43138 (sca)",
                "description": "In Async versions 2.0.0-rc.6 prior to 2.6.4, and 3.x prior to 3.2.2, a malicious user can obtain privileges via the &#34;mapValues()&#34; method, aka &#34;lib/internal/iterator.js&#34; &#34;createObjectIterator&#34; Prototype Pollution.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-0144 (sca)",
              "name": "Cve20220144",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "shelljs prior to 0.8.5 is vulnerable to Improper Privilege Management.",
                "markdown": "shelljs prior to 0.8.5 is vulnerable to Improper Privilege Management."
              },
              "fullDescription": {
                "text": "shelljs prior to 0.8.5 is vulnerable to Improper Privilege Management."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20220144",
                "id": "CVE-2022-0144 (sca)",
                "description": "shelljs prior to 0.8.5 is vulnerable to Improper Privilege Management.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-1537 (sca)",
              "name": "Cve20221537",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in versions prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user&#39;s .bashrc file or replace /etc/shadow file if the GruntJS user is root.",
                "markdown": "file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in versions prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user&#39;s .bashrc file or replace /etc/shadow file if the GruntJS user is root."
              },
              "fullDescription": {
                "text": "file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in versions prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user&#39;s .bashrc file or replace /etc/shadow file if the GruntJS user is root."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20221537",
                "id": "CVE-2022-1537 (sca)",
                "description": "file.copy operations in GruntJS are vulnerable to a TOCTOU race condition leading to arbitrary file write in versions prior to 1.5.3. This vulnerability is capable of arbitrary file writes which can lead to local privilege escalation to the GruntJS user if a lower-privileged user has write access to both source and destination directories as the lower-privileged user can create a symlink to the GruntJS user&#39;s .bashrc file or replace /etc/shadow file if the GruntJS user is root.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-21680 (sca)",
              "name": "Cve202221680",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",
                "markdown": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."
              },
              "fullDescription": {
                "text": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202221680",
                "id": "CVE-2022-21680 (sca)",
                "description": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `block.def` may cause catastrophic backtracking against some strings and lead to a regular expression denial of service (ReDoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-21681 (sca)",
              "name": "Cve202221681",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",
                "markdown": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."
              },
              "fullDescription": {
                "text": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202221681",
                "id": "CVE-2022-21681 (sca)",
                "description": "Marked is a markdown parser and compiler. Prior to version 4.0.10, the regular expression `inline.reflinkSearch` may cause catastrophic backtracking against some strings and lead to a denial of service (DoS). Anyone who runs untrusted markdown through a vulnerable version of marked and does not use a worker with a time limit may be affected. As a workaround, avoid running untrusted markdown through marked or run marked on a worker thread and set a reasonable time limit to prevent draining resources.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-21803 (sca)",
              "name": "Cve202221803",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",
                "markdown": "This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype."
              },
              "fullDescription": {
                "text": "This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202221803",
                "id": "CVE-2022-21803 (sca)",
                "description": "This affects the package nconf before 0.11.4. When using the memory engine, it is possible to store a nested JSON representation of the configuration. The .set() function, that is responsible for setting the configuration properties, is vulnerable to Prototype Pollution. By providing a crafted property, it is possible to modify the properties on the Object.prototype.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-24785 (sca)",
              "name": "Cve202224785",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",
                "markdown": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js."
              },
              "fullDescription": {
                "text": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202224785",
                "id": "CVE-2022-24785 (sca)",
                "description": "Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-24999 (sca)",
              "name": "Cve202224999",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The qs package as used in Express through 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an &#34;__ proto__ key&#34; can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as &#34;a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000&#34;. This vulnerability affects qs versions through 6.2.3, 6.3.0 through 6.3.2, 6.4.0, 6.5.0 through 6.5.2, 6.6.0, 6.7.0 through 6.7.2, 6.8.0 through 6.8.2, 6.9.0 through 6.9.6 and 6.10.0 through 6.10.2  (and therefore Express 4.17.3, which has &#34;deps: qs@6.9.7&#34; in its release description, is not vulnerable).",
                "markdown": "The qs package as used in Express through 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an &#34;__ proto__ key&#34; can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as &#34;a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000&#34;. This vulnerability affects qs versions through 6.2.3, 6.3.0 through 6.3.2, 6.4.0, 6.5.0 through 6.5.2, 6.6.0, 6.7.0 through 6.7.2, 6.8.0 through 6.8.2, 6.9.0 through 6.9.6 and 6.10.0 through 6.10.2  (and therefore Express 4.17.3, which has &#34;deps: qs@6.9.7&#34; in its release description, is not vulnerable)."
              },
              "fullDescription": {
                "text": "The qs package as used in Express through 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an &#34;__ proto__ key&#34; can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as &#34;a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000&#34;. This vulnerability affects qs versions through 6.2.3, 6.3.0 through 6.3.2, 6.4.0, 6.5.0 through 6.5.2, 6.6.0, 6.7.0 through 6.7.2, 6.8.0 through 6.8.2, 6.9.0 through 6.9.6 and 6.10.0 through 6.10.2  (and therefore Express 4.17.3, which has &#34;deps: qs@6.9.7&#34; in its release description, is not vulnerable)."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202224999",
                "id": "CVE-2022-24999 (sca)",
                "description": "The qs package as used in Express through 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an &#34;__ proto__ key&#34; can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as &#34;a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000&#34;. This vulnerability affects qs versions through 6.2.3, 6.3.0 through 6.3.2, 6.4.0, 6.5.0 through 6.5.2, 6.6.0, 6.7.0 through 6.7.2, 6.8.0 through 6.8.2, 6.9.0 through 6.9.6 and 6.10.0 through 6.10.2  (and therefore Express 4.17.3, which has &#34;deps: qs@6.9.7&#34; in its release description, is not vulnerable).",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-24999 (containers)",
              "name": "Cve202224999",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The qs package as used in Express through 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an &#34;__ proto__ key&#34; can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as &#34;a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000&#34;. This vulnerability affects qs versions through 6.2.3, 6.3.0 through 6.3.2, 6.4.0, 6.5.0 through 6.5.2, 6.6.0, 6.7.0 through 6.7.2, 6.8.0 through 6.8.2, 6.9.0 through 6.9.6 and 6.10.0 through 6.10.2  (and therefore Express 4.17.3, which has &#34;deps: qs@6.9.7&#34; in its release description, is not vulnerable).",
                "markdown": "The qs package as used in Express through 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an &#34;__ proto__ key&#34; can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as &#34;a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000&#34;. This vulnerability affects qs versions through 6.2.3, 6.3.0 through 6.3.2, 6.4.0, 6.5.0 through 6.5.2, 6.6.0, 6.7.0 through 6.7.2, 6.8.0 through 6.8.2, 6.9.0 through 6.9.6 and 6.10.0 through 6.10.2  (and therefore Express 4.17.3, which has &#34;deps: qs@6.9.7&#34; in its release description, is not vulnerable)."
              },
              "fullDescription": {
                "text": "The qs package as used in Express through 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an &#34;__ proto__ key&#34; can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as &#34;a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000&#34;. This vulnerability affects qs versions through 6.2.3, 6.3.0 through 6.3.2, 6.4.0, 6.5.0 through 6.5.2, 6.6.0, 6.7.0 through 6.7.2, 6.8.0 through 6.8.2, 6.9.0 through 6.9.6 and 6.10.0 through 6.10.2  (and therefore Express 4.17.3, which has &#34;deps: qs@6.9.7&#34; in its release description, is not vulnerable)."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202224999",
                "id": "CVE-2022-24999 (containers)",
                "description": "The qs package as used in Express through 4.17.3 and other products, allows attackers to cause a Node process hang for an Express application because an &#34;__ proto__ key&#34; can be used. In many typical Express use cases, an unauthenticated remote attacker can place the attack payload in the query string of the URL that is used to visit the application, such as &#34;a[__proto__]=b&amp;a[__proto__]&amp;a[length]=100000000&#34;. This vulnerability affects qs versions through 6.2.3, 6.3.0 through 6.3.2, 6.4.0, 6.5.0 through 6.5.2, 6.6.0, 6.7.0 through 6.7.2, 6.8.0 through 6.8.2, 6.9.0 through 6.9.6 and 6.10.0 through 6.10.2  (and therefore Express 4.17.3, which has &#34;deps: qs@6.9.7&#34; in its release description, is not vulnerable).",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2022-25881 (containers)",
              "name": "Cve202225881",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "http-cache semantics prior to 4.1.1 contains an Inefficient Regular Expression Complexity, leading to Denial of Service. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
                "markdown": "http-cache semantics prior to 4.1.1 contains an Inefficient Regular Expression Complexity, leading to Denial of Service. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library."
              },
              "fullDescription": {
                "text": "http-cache semantics prior to 4.1.1 contains an Inefficient Regular Expression Complexity, leading to Denial of Service. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202225881",
                "id": "CVE-2022-25881 (containers)",
                "description": "http-cache semantics prior to 4.1.1 contains an Inefficient Regular Expression Complexity, leading to Denial of Service. The issue can be exploited via malicious request header values sent to a server, when that server reads the cache policy from the request using this library.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2022-25883 (sca)",
              "name": "Cve202225883",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package semver versions prior to 5.7.2, 6.x through 6.3.0 and 7.x through 7.5.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function &#34;new Range&#34;, when untrusted user data is provided as a range.",
                "markdown": "The package semver versions prior to 5.7.2, 6.x through 6.3.0 and 7.x through 7.5.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function &#34;new Range&#34;, when untrusted user data is provided as a range."
              },
              "fullDescription": {
                "text": "The package semver versions prior to 5.7.2, 6.x through 6.3.0 and 7.x through 7.5.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function &#34;new Range&#34;, when untrusted user data is provided as a range."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202225883",
                "id": "CVE-2022-25883 (sca)",
                "description": "The package semver versions prior to 5.7.2, 6.x through 6.3.0 and 7.x through 7.5.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function &#34;new Range&#34;, when untrusted user data is provided as a range.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-25883 (containers)",
              "name": "Cve202225883",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package semver versions prior to 5.7.2, 6.x through 6.3.0 and 7.x through 7.5.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function &#34;new Range&#34;, when untrusted user data is provided as a range.",
                "markdown": "The package semver versions prior to 5.7.2, 6.x through 6.3.0 and 7.x through 7.5.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function &#34;new Range&#34;, when untrusted user data is provided as a range."
              },
              "fullDescription": {
                "text": "The package semver versions prior to 5.7.2, 6.x through 6.3.0 and 7.x through 7.5.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function &#34;new Range&#34;, when untrusted user data is provided as a range."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202225883",
                "id": "CVE-2022-25883 (containers)",
                "description": "The package semver versions prior to 5.7.2, 6.x through 6.3.0 and 7.x through 7.5.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the function &#34;new Range&#34;, when untrusted user data is provided as a range.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2022-29167 (sca)",
              "name": "Cve202229167",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker&#39;s input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",
                "markdown": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker&#39;s input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`."
              },
              "fullDescription": {
                "text": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker&#39;s input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202229167",
                "id": "CVE-2022-29167 (sca)",
                "description": "Hawk is an HTTP authentication scheme providing mechanisms for making authenticated HTTP requests with partial cryptographic verification of the request and response, covering the HTTP method, request URI, host, and optionally the request payload. Hawk used a regular expression to parse `Host` HTTP header (`Hawk.utils.parseHost()`), which was subject to regular expression DoS attack - meaning each added character in the attacker&#39;s input increases the computation time exponentially. `parseHost()` was patched in `9.0.1` to use built-in `URL` class to parse hostname instead. `Hawk.authenticate()` accepts `options` argument. If that contains `host` and `port`, those would be used instead of a call to `utils.parseHost()`.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-31129 (sca)",
              "name": "Cve202231129",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input. This issue affects versions 2.18.0 through 2.29.3.",
                "markdown": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input. This issue affects versions 2.18.0 through 2.29.3."
              },
              "fullDescription": {
                "text": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input. This issue affects versions 2.18.0 through 2.29.3."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202231129",
                "id": "CVE-2022-31129 (sca)",
                "description": "moment is a JavaScript date library for parsing, validating, manipulating, and formatting dates. Affected versions of moment were found to use an inefficient parsing algorithm. Specifically using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs. Users may notice a noticeable slowdown is observed with inputs above 10k characters. Users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks. The problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking. Users are advised to upgrade. Users unable to upgrade should consider limiting date lengths accepted from user input. This issue affects versions 2.18.0 through 2.29.3.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-3517 (sca)",
              "name": "Cve20223517",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in the minimatch package versions prior to 3.0.5. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the &#34;braceExpand&#34; function with specific arguments, resulting in a Denial of Service.",
                "markdown": "A vulnerability was found in the minimatch package versions prior to 3.0.5. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the &#34;braceExpand&#34; function with specific arguments, resulting in a Denial of Service."
              },
              "fullDescription": {
                "text": "A vulnerability was found in the minimatch package versions prior to 3.0.5. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the &#34;braceExpand&#34; function with specific arguments, resulting in a Denial of Service."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20223517",
                "id": "CVE-2022-3517 (sca)",
                "description": "A vulnerability was found in the minimatch package versions prior to 3.0.5. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the &#34;braceExpand&#34; function with specific arguments, resulting in a Denial of Service.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-3517 (containers)",
              "name": "Cve20223517",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in the minimatch package versions prior to 3.0.5. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the &#34;braceExpand&#34; function with specific arguments, resulting in a Denial of Service.",
                "markdown": "A vulnerability was found in the minimatch package versions prior to 3.0.5. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the &#34;braceExpand&#34; function with specific arguments, resulting in a Denial of Service."
              },
              "fullDescription": {
                "text": "A vulnerability was found in the minimatch package versions prior to 3.0.5. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the &#34;braceExpand&#34; function with specific arguments, resulting in a Denial of Service."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20223517",
                "id": "CVE-2022-3517 (containers)",
                "description": "A vulnerability was found in the minimatch package versions prior to 3.0.5. This flaw allows a Regular Expression Denial of Service (ReDoS) when calling the &#34;braceExpand&#34; function with specific arguments, resulting in a Denial of Service.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2022-38900 (containers)",
              "name": "Cve202238900",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Package &#39;decode-uri-component&#39; versions prior to 0.2.1 is vulnerable to Improper Input Validation resulting in possible Denial of Service (DoS) attack.\n\n",
                "markdown": "Package &#39;decode-uri-component&#39; versions prior to 0.2.1 is vulnerable to Improper Input Validation resulting in possible Denial of Service (DoS) attack.\n\n"
              },
              "fullDescription": {
                "text": "Package &#39;decode-uri-component&#39; versions prior to 0.2.1 is vulnerable to Improper Input Validation resulting in possible Denial of Service (DoS) attack.\n\n"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202238900",
                "id": "CVE-2022-38900 (containers)",
                "description": "Package &#39;decode-uri-component&#39; versions prior to 0.2.1 is vulnerable to Improper Input Validation resulting in possible Denial of Service (DoS) attack.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2022-38900 (sca)",
              "name": "Cve202238900",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Package &#39;decode-uri-component&#39; versions prior to 0.2.1 is vulnerable to Improper Input Validation resulting in possible Denial of Service (DoS) attack.\n\n",
                "markdown": "Package &#39;decode-uri-component&#39; versions prior to 0.2.1 is vulnerable to Improper Input Validation resulting in possible Denial of Service (DoS) attack.\n\n"
              },
              "fullDescription": {
                "text": "Package &#39;decode-uri-component&#39; versions prior to 0.2.1 is vulnerable to Improper Input Validation resulting in possible Denial of Service (DoS) attack.\n\n"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202238900",
                "id": "CVE-2022-38900 (sca)",
                "description": "Package &#39;decode-uri-component&#39; versions prior to 0.2.1 is vulnerable to Improper Input Validation resulting in possible Denial of Service (DoS) attack.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-4450 (containers)",
              "name": "Cve20224450",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The function &#34;PEM_read_bio_ex()&#34; reads a PEM file from a BIO and parses and decodes the &#34;name&#34; (e.g. &#34;CERTIFICATE&#34;), any header data and the payload data. If the function succeeds then the &#34;name_out&#34;, &#34;header&#34; and &#34;data&#34; arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case &#34;PEM_read_bio_ex()&#34; will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions &#34;PEM_read_bio()&#34; and &#34;PEM_read()&#34; are simple wrappers around &#34;PEM_read_bio_ex()&#34; and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including &#34;PEM_X509_INFO_read_bio_ex()&#34; and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if &#34;PEM_read_bio_ex()&#34; returns a failure code. These locations include the &#34;PEM_read_bio_TYPE()&#34; functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue. This issue affects OpenSSL versions 1.1.1-pre1 through 1.1.1s and 3.0.0-alpha1 through 3.0.7.",
                "markdown": "The function &#34;PEM_read_bio_ex()&#34; reads a PEM file from a BIO and parses and decodes the &#34;name&#34; (e.g. &#34;CERTIFICATE&#34;), any header data and the payload data. If the function succeeds then the &#34;name_out&#34;, &#34;header&#34; and &#34;data&#34; arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case &#34;PEM_read_bio_ex()&#34; will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions &#34;PEM_read_bio()&#34; and &#34;PEM_read()&#34; are simple wrappers around &#34;PEM_read_bio_ex()&#34; and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including &#34;PEM_X509_INFO_read_bio_ex()&#34; and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if &#34;PEM_read_bio_ex()&#34; returns a failure code. These locations include the &#34;PEM_read_bio_TYPE()&#34; functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue. This issue affects OpenSSL versions 1.1.1-pre1 through 1.1.1s and 3.0.0-alpha1 through 3.0.7."
              },
              "fullDescription": {
                "text": "The function &#34;PEM_read_bio_ex()&#34; reads a PEM file from a BIO and parses and decodes the &#34;name&#34; (e.g. &#34;CERTIFICATE&#34;), any header data and the payload data. If the function succeeds then the &#34;name_out&#34;, &#34;header&#34; and &#34;data&#34; arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case &#34;PEM_read_bio_ex()&#34; will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions &#34;PEM_read_bio()&#34; and &#34;PEM_read()&#34; are simple wrappers around &#34;PEM_read_bio_ex()&#34; and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including &#34;PEM_X509_INFO_read_bio_ex()&#34; and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if &#34;PEM_read_bio_ex()&#34; returns a failure code. These locations include the &#34;PEM_read_bio_TYPE()&#34; functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue. This issue affects OpenSSL versions 1.1.1-pre1 through 1.1.1s and 3.0.0-alpha1 through 3.0.7."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20224450",
                "id": "CVE-2022-4450 (containers)",
                "description": "The function &#34;PEM_read_bio_ex()&#34; reads a PEM file from a BIO and parses and decodes the &#34;name&#34; (e.g. &#34;CERTIFICATE&#34;), any header data and the payload data. If the function succeeds then the &#34;name_out&#34;, &#34;header&#34; and &#34;data&#34; arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case &#34;PEM_read_bio_ex()&#34; will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions &#34;PEM_read_bio()&#34; and &#34;PEM_read()&#34; are simple wrappers around &#34;PEM_read_bio_ex()&#34; and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including &#34;PEM_X509_INFO_read_bio_ex()&#34; and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if &#34;PEM_read_bio_ex()&#34; returns a failure code. These locations include the &#34;PEM_read_bio_TYPE()&#34; functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue. This issue affects OpenSSL versions 1.1.1-pre1 through 1.1.1s and 3.0.0-alpha1 through 3.0.7.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-0215 (containers)",
              "name": "Cve20230215",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The public API function &#34;BIO_new_NDEF&#34; is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the &#34;SMIME&#34;, &#34;CMS&#34; and &#34;PKCS7&#34; streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new &#34;BIO_f_asn1&#34; filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example, if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call &#34;BIO_pop()&#34; on the BIO, then a Use-After-Free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function &#34;B64_write_ASN1()&#34; which may cause &#34;BIO_new_NDEF()&#34; to be called and will subsequently call &#34;BIO_pop()&#34; on the BIO. This internal function is in turn called by the public API functions &#34;PEM_write_bio_ASN1_stream&#34;, &#34;PEM_write_bio_CMS_stream&#34;, &#34;PEM_write_bio_PKCS7_stream&#34;, &#34;SMIME_write_ASN1&#34;, &#34;SMIME_write_CMS&#34; and, &#34;SMIME_write_PKCS7&#34;. Other public API functions that may be impacted by this include &#34;i2d_ASN1_bio_stream&#34;, &#34;BIO_new_CMS&#34;, &#34;BIO_new_PKCS7&#34;, &#34;i2d_CMS_bio_stream&#34;, and &#34;i2d_PKCS7_bio_stream&#34;. The OpenSSL &#34;CMS&#34; and &#34;SMIME&#34; command line applications are similarly affected. This vulnerability affects OpenSSL versions . This vulnerability affects OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7.",
                "markdown": "The public API function &#34;BIO_new_NDEF&#34; is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the &#34;SMIME&#34;, &#34;CMS&#34; and &#34;PKCS7&#34; streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new &#34;BIO_f_asn1&#34; filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example, if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call &#34;BIO_pop()&#34; on the BIO, then a Use-After-Free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function &#34;B64_write_ASN1()&#34; which may cause &#34;BIO_new_NDEF()&#34; to be called and will subsequently call &#34;BIO_pop()&#34; on the BIO. This internal function is in turn called by the public API functions &#34;PEM_write_bio_ASN1_stream&#34;, &#34;PEM_write_bio_CMS_stream&#34;, &#34;PEM_write_bio_PKCS7_stream&#34;, &#34;SMIME_write_ASN1&#34;, &#34;SMIME_write_CMS&#34; and, &#34;SMIME_write_PKCS7&#34;. Other public API functions that may be impacted by this include &#34;i2d_ASN1_bio_stream&#34;, &#34;BIO_new_CMS&#34;, &#34;BIO_new_PKCS7&#34;, &#34;i2d_CMS_bio_stream&#34;, and &#34;i2d_PKCS7_bio_stream&#34;. The OpenSSL &#34;CMS&#34; and &#34;SMIME&#34; command line applications are similarly affected. This vulnerability affects OpenSSL versions . This vulnerability affects OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7."
              },
              "fullDescription": {
                "text": "The public API function &#34;BIO_new_NDEF&#34; is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the &#34;SMIME&#34;, &#34;CMS&#34; and &#34;PKCS7&#34; streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new &#34;BIO_f_asn1&#34; filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example, if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call &#34;BIO_pop()&#34; on the BIO, then a Use-After-Free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function &#34;B64_write_ASN1()&#34; which may cause &#34;BIO_new_NDEF()&#34; to be called and will subsequently call &#34;BIO_pop()&#34; on the BIO. This internal function is in turn called by the public API functions &#34;PEM_write_bio_ASN1_stream&#34;, &#34;PEM_write_bio_CMS_stream&#34;, &#34;PEM_write_bio_PKCS7_stream&#34;, &#34;SMIME_write_ASN1&#34;, &#34;SMIME_write_CMS&#34; and, &#34;SMIME_write_PKCS7&#34;. Other public API functions that may be impacted by this include &#34;i2d_ASN1_bio_stream&#34;, &#34;BIO_new_CMS&#34;, &#34;BIO_new_PKCS7&#34;, &#34;i2d_CMS_bio_stream&#34;, and &#34;i2d_PKCS7_bio_stream&#34;. The OpenSSL &#34;CMS&#34; and &#34;SMIME&#34; command line applications are similarly affected. This vulnerability affects OpenSSL versions . This vulnerability affects OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20230215",
                "id": "CVE-2023-0215 (containers)",
                "description": "The public API function &#34;BIO_new_NDEF&#34; is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the &#34;SMIME&#34;, &#34;CMS&#34; and &#34;PKCS7&#34; streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new &#34;BIO_f_asn1&#34; filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example, if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call &#34;BIO_pop()&#34; on the BIO, then a Use-After-Free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function &#34;B64_write_ASN1()&#34; which may cause &#34;BIO_new_NDEF()&#34; to be called and will subsequently call &#34;BIO_pop()&#34; on the BIO. This internal function is in turn called by the public API functions &#34;PEM_write_bio_ASN1_stream&#34;, &#34;PEM_write_bio_CMS_stream&#34;, &#34;PEM_write_bio_PKCS7_stream&#34;, &#34;SMIME_write_ASN1&#34;, &#34;SMIME_write_CMS&#34; and, &#34;SMIME_write_PKCS7&#34;. Other public API functions that may be impacted by this include &#34;i2d_ASN1_bio_stream&#34;, &#34;BIO_new_CMS&#34;, &#34;BIO_new_PKCS7&#34;, &#34;i2d_CMS_bio_stream&#34;, and &#34;i2d_PKCS7_bio_stream&#34;. The OpenSSL &#34;CMS&#34; and &#34;SMIME&#34; command line applications are similarly affected. This vulnerability affects OpenSSL versions . This vulnerability affects OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-0286 (containers)",
              "name": "Cve20230286",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an &#34;ASN1_STRING&#34; but the public structure definition for &#34;GENERAL_NAME&#34; incorrectly specified the type of the x400Address field as &#34;ASN1_TYPE&#34;. This field is subsequently interpreted by the OpenSSL function &#34;GENERAL_NAME_cmp&#34; as an &#34;ASN1_TYPE&#34; rather than an &#34;ASN1_STRING&#34;. When CRL checking is enabled (i.e. the application sets the &#34;X509_V_FLAG_CRL_CHECK&#34; flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications that have implemented their own functionality for retrieving CRLs over a network.This vulnerability affects OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7.",
                "markdown": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an &#34;ASN1_STRING&#34; but the public structure definition for &#34;GENERAL_NAME&#34; incorrectly specified the type of the x400Address field as &#34;ASN1_TYPE&#34;. This field is subsequently interpreted by the OpenSSL function &#34;GENERAL_NAME_cmp&#34; as an &#34;ASN1_TYPE&#34; rather than an &#34;ASN1_STRING&#34;. When CRL checking is enabled (i.e. the application sets the &#34;X509_V_FLAG_CRL_CHECK&#34; flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications that have implemented their own functionality for retrieving CRLs over a network.This vulnerability affects OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7."
              },
              "fullDescription": {
                "text": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an &#34;ASN1_STRING&#34; but the public structure definition for &#34;GENERAL_NAME&#34; incorrectly specified the type of the x400Address field as &#34;ASN1_TYPE&#34;. This field is subsequently interpreted by the OpenSSL function &#34;GENERAL_NAME_cmp&#34; as an &#34;ASN1_TYPE&#34; rather than an &#34;ASN1_STRING&#34;. When CRL checking is enabled (i.e. the application sets the &#34;X509_V_FLAG_CRL_CHECK&#34; flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications that have implemented their own functionality for retrieving CRLs over a network.This vulnerability affects OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20230286",
                "id": "CVE-2023-0286 (containers)",
                "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an &#34;ASN1_STRING&#34; but the public structure definition for &#34;GENERAL_NAME&#34; incorrectly specified the type of the x400Address field as &#34;ASN1_TYPE&#34;. This field is subsequently interpreted by the OpenSSL function &#34;GENERAL_NAME_cmp&#34; as an &#34;ASN1_TYPE&#34; rather than an &#34;ASN1_STRING&#34;. When CRL checking is enabled (i.e. the application sets the &#34;X509_V_FLAG_CRL_CHECK&#34; flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications that have implemented their own functionality for retrieving CRLs over a network.This vulnerability affects OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-0464 (containers)",
              "name": "Cve20230464",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers the exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the &#34;-policy&#34; argument to the command line utilities or by calling the &#34;X509_VERIFY_PARAM_set1_policies()&#34; function. This issue affects openssl versions 1.0.2x prior to 1.0.2zh, 1.1.1x prior to 1.1.1u, 3.0.0x prior to 3.0.9, and 3.1.0x prior to 3.1.1.",
                "markdown": "A security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers the exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the &#34;-policy&#34; argument to the command line utilities or by calling the &#34;X509_VERIFY_PARAM_set1_policies()&#34; function. This issue affects openssl versions 1.0.2x prior to 1.0.2zh, 1.1.1x prior to 1.1.1u, 3.0.0x prior to 3.0.9, and 3.1.0x prior to 3.1.1."
              },
              "fullDescription": {
                "text": "A security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers the exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the &#34;-policy&#34; argument to the command line utilities or by calling the &#34;X509_VERIFY_PARAM_set1_policies()&#34; function. This issue affects openssl versions 1.0.2x prior to 1.0.2zh, 1.1.1x prior to 1.1.1u, 3.0.0x prior to 3.0.9, and 3.1.0x prior to 3.1.1."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20230464",
                "id": "CVE-2023-0464 (containers)",
                "description": "A security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers the exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the &#34;-policy&#34; argument to the command line utilities or by calling the &#34;X509_VERIFY_PARAM_set1_policies()&#34; function. This issue affects openssl versions 1.0.2x prior to 1.0.2zh, 1.1.1x prior to 1.1.1u, 3.0.0x prior to 3.0.9, and 3.1.0x prior to 3.1.1.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-25345 (sca)",
              "name": "Cve202325345",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Directory Traversal Vulnerability in all versions of swig-templates and swig allows attackers to read arbitrary files via the &#34;include&#34; or &#34;extends&#34; tags.",
                "markdown": "Directory Traversal Vulnerability in all versions of swig-templates and swig allows attackers to read arbitrary files via the &#34;include&#34; or &#34;extends&#34; tags."
              },
              "fullDescription": {
                "text": "Directory Traversal Vulnerability in all versions of swig-templates and swig allows attackers to read arbitrary files via the &#34;include&#34; or &#34;extends&#34; tags."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202325345",
                "id": "CVE-2023-25345 (sca)",
                "description": "Directory Traversal Vulnerability in all versions of swig-templates and swig allows attackers to read arbitrary files via the &#34;include&#34; or &#34;extends&#34; tags.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2023-45133 (sca)",
              "name": "Cve202345133",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Babel is a compiler for writing JavaScript. In `@babel/traverse` versions prior to 7.23.2 and 8.0.x prior to 8.0.0-alpha.4, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. This issue also affects babel-traverse versions through 7.0.0-beta.3. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any &#34;polyfill provider&#34; plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3.",
                "markdown": "Babel is a compiler for writing JavaScript. In `@babel/traverse` versions prior to 7.23.2 and 8.0.x prior to 8.0.0-alpha.4, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. This issue also affects babel-traverse versions through 7.0.0-beta.3. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any &#34;polyfill provider&#34; plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3."
              },
              "fullDescription": {
                "text": "Babel is a compiler for writing JavaScript. In `@babel/traverse` versions prior to 7.23.2 and 8.0.x prior to 8.0.0-alpha.4, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. This issue also affects babel-traverse versions through 7.0.0-beta.3. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any &#34;polyfill provider&#34; plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202345133",
                "id": "CVE-2023-45133 (sca)",
                "description": "Babel is a compiler for writing JavaScript. In `@babel/traverse` versions prior to 7.23.2 and 8.0.x prior to 8.0.0-alpha.4, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. This issue also affects babel-traverse versions through 7.0.0-beta.3. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any &#34;polyfill provider&#34; plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-21538 (sca)",
              "name": "Cve202421538",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
                "markdown": "Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string."
              },
              "fullDescription": {
                "text": "Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202421538",
                "id": "CVE-2024-21538 (sca)",
                "description": "Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-21538 (containers)",
              "name": "Cve202421538",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
                "markdown": "Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string."
              },
              "fullDescription": {
                "text": "Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202421538",
                "id": "CVE-2024-21538 (containers)",
                "description": "Versions of the package cross-spawn prior to 6.0.6 and 7.x prior to 7.0.5 are vulnerable to Regular Expression Denial of Service (ReDoS), due to improper input sanitization. An attacker can increase the CPU usage and crash the program by crafting a very large and well crafted string.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-26461 (containers)",
              "name": "Cve202426461",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Kerberos 5 (aka krb5) contains a Memory Leak vulnerability in `/krb5/src/lib/gssapi/krb5/k5sealv3.c`.",
                "markdown": "Kerberos 5 (aka krb5) contains a Memory Leak vulnerability in `/krb5/src/lib/gssapi/krb5/k5sealv3.c`."
              },
              "fullDescription": {
                "text": "Kerberos 5 (aka krb5) contains a Memory Leak vulnerability in `/krb5/src/lib/gssapi/krb5/k5sealv3.c`."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202426461",
                "id": "CVE-2024-26461 (containers)",
                "description": "Kerberos 5 (aka krb5) contains a Memory Leak vulnerability in `/krb5/src/lib/gssapi/krb5/k5sealv3.c`.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-29415 (containers)",
              "name": "Cve202429415",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The ip package 0.0.2 through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via &#34;isPublic()&#34;. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
                "markdown": "The ip package 0.0.2 through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via &#34;isPublic()&#34;. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282."
              },
              "fullDescription": {
                "text": "The ip package 0.0.2 through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via &#34;isPublic()&#34;. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202429415",
                "id": "CVE-2024-29415 (containers)",
                "description": "The ip package 0.0.2 through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via &#34;isPublic()&#34;. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-33599 (containers)",
              "name": "Cve202433599",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Stack-based buffer overflow in netgroup cache. If the Name Service Cache Daemon&#39;s (&#34;nscd&#34;) fixed size cache is exhausted\nby client requests, then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow. This flaw was introduced when the cache was added to nscd. This vulnerability is only present in the &#34;nscd&#34; binary. This issue affects the package glibc versions 2.15 through 2.39.900.",
                "markdown": "Stack-based buffer overflow in netgroup cache. If the Name Service Cache Daemon&#39;s (&#34;nscd&#34;) fixed size cache is exhausted\nby client requests, then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow. This flaw was introduced when the cache was added to nscd. This vulnerability is only present in the &#34;nscd&#34; binary. This issue affects the package glibc versions 2.15 through 2.39.900."
              },
              "fullDescription": {
                "text": "Stack-based buffer overflow in netgroup cache. If the Name Service Cache Daemon&#39;s (&#34;nscd&#34;) fixed size cache is exhausted\nby client requests, then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow. This flaw was introduced when the cache was added to nscd. This vulnerability is only present in the &#34;nscd&#34; binary. This issue affects the package glibc versions 2.15 through 2.39.900."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202433599",
                "id": "CVE-2024-33599 (containers)",
                "description": "Stack-based buffer overflow in netgroup cache. If the Name Service Cache Daemon&#39;s (&#34;nscd&#34;) fixed size cache is exhausted\nby client requests, then a subsequent client request for netgroup data\nmay result in a stack-based buffer overflow. This flaw was introduced when the cache was added to nscd. This vulnerability is only present in the &#34;nscd&#34; binary. This issue affects the package glibc versions 2.15 through 2.39.900.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-33601 (containers)",
              "name": "Cve202433601",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The &#34;nscd: netgroup&#34; cache may cause the daemon to terminate upon memory allocation failure. The Name Service Cache Daemon (nscd)&#39;s netgroup cache utilizes &#34;xmalloc&#34; or &#34;xrealloc&#34; functions, which can result in process termination due to memory allocation failure, leading to Denial of Service (DoS) for clients. The flaw was introduced in glibc when the cache was added to nscd. This vulnerability is only present in the nscd binary. The vulnerability affects versions 2.15 through 2.39.9000.\n",
                "markdown": "The &#34;nscd: netgroup&#34; cache may cause the daemon to terminate upon memory allocation failure. The Name Service Cache Daemon (nscd)&#39;s netgroup cache utilizes &#34;xmalloc&#34; or &#34;xrealloc&#34; functions, which can result in process termination due to memory allocation failure, leading to Denial of Service (DoS) for clients. The flaw was introduced in glibc when the cache was added to nscd. This vulnerability is only present in the nscd binary. The vulnerability affects versions 2.15 through 2.39.9000.\n"
              },
              "fullDescription": {
                "text": "The &#34;nscd: netgroup&#34; cache may cause the daemon to terminate upon memory allocation failure. The Name Service Cache Daemon (nscd)&#39;s netgroup cache utilizes &#34;xmalloc&#34; or &#34;xrealloc&#34; functions, which can result in process termination due to memory allocation failure, leading to Denial of Service (DoS) for clients. The flaw was introduced in glibc when the cache was added to nscd. This vulnerability is only present in the nscd binary. The vulnerability affects versions 2.15 through 2.39.9000.\n"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202433601",
                "id": "CVE-2024-33601 (containers)",
                "description": "The &#34;nscd: netgroup&#34; cache may cause the daemon to terminate upon memory allocation failure. The Name Service Cache Daemon (nscd)&#39;s netgroup cache utilizes &#34;xmalloc&#34; or &#34;xrealloc&#34; functions, which can result in process termination due to memory allocation failure, leading to Denial of Service (DoS) for clients. The flaw was introduced in glibc when the cache was added to nscd. This vulnerability is only present in the nscd binary. The vulnerability affects versions 2.15 through 2.39.9000.\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-33602 (containers)",
              "name": "Cve202433602",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The &#34;nscd: netgroup&#34; cache assumes NSS callback uses in-buffer strings. The Name Service Cache Daemon&#39;s (nscd) netgroup cache can corrupt memory when the NSS callback fails to store all strings in the provided buffer. The flaw was introduced in glibc when the cache was added to nscd. This vulnerability is only present in the nscd binary. The vulnerability affects versions 2.15 through 2.39.9000. This vulnerability affects only the nscd binary. This has the same fix as CVE-2024-33601.",
                "markdown": "The &#34;nscd: netgroup&#34; cache assumes NSS callback uses in-buffer strings. The Name Service Cache Daemon&#39;s (nscd) netgroup cache can corrupt memory when the NSS callback fails to store all strings in the provided buffer. The flaw was introduced in glibc when the cache was added to nscd. This vulnerability is only present in the nscd binary. The vulnerability affects versions 2.15 through 2.39.9000. This vulnerability affects only the nscd binary. This has the same fix as CVE-2024-33601."
              },
              "fullDescription": {
                "text": "The &#34;nscd: netgroup&#34; cache assumes NSS callback uses in-buffer strings. The Name Service Cache Daemon&#39;s (nscd) netgroup cache can corrupt memory when the NSS callback fails to store all strings in the provided buffer. The flaw was introduced in glibc when the cache was added to nscd. This vulnerability is only present in the nscd binary. The vulnerability affects versions 2.15 through 2.39.9000. This vulnerability affects only the nscd binary. This has the same fix as CVE-2024-33601."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202433602",
                "id": "CVE-2024-33602 (containers)",
                "description": "The &#34;nscd: netgroup&#34; cache assumes NSS callback uses in-buffer strings. The Name Service Cache Daemon&#39;s (nscd) netgroup cache can corrupt memory when the NSS callback fails to store all strings in the provided buffer. The flaw was introduced in glibc when the cache was added to nscd. This vulnerability is only present in the nscd binary. The vulnerability affects versions 2.15 through 2.39.9000. This vulnerability affects only the nscd binary. This has the same fix as CVE-2024-33601.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-37370 (containers)",
              "name": "Cve202437370",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In MIT Kerberos 5 (krb5) prior to version 1.21.3, an attacker can manipulate the plaintext Extra Count field within a confidential GSS krb5 wrap token. This manipulation can cause the unwrapped token to appear truncated in the application.",
                "markdown": "In MIT Kerberos 5 (krb5) prior to version 1.21.3, an attacker can manipulate the plaintext Extra Count field within a confidential GSS krb5 wrap token. This manipulation can cause the unwrapped token to appear truncated in the application."
              },
              "fullDescription": {
                "text": "In MIT Kerberos 5 (krb5) prior to version 1.21.3, an attacker can manipulate the plaintext Extra Count field within a confidential GSS krb5 wrap token. This manipulation can cause the unwrapped token to appear truncated in the application."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202437370",
                "id": "CVE-2024-37370 (containers)",
                "description": "In MIT Kerberos 5 (krb5) prior to version 1.21.3, an attacker can manipulate the plaintext Extra Count field within a confidential GSS krb5 wrap token. This manipulation can cause the unwrapped token to appear truncated in the application.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-4068 (sca)",
              "name": "Cve20244068",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The NPM package &#34;braces&#34;, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In &#34;lib/parse.js,&#34; if a malicious user sends &#34;imbalanced braces&#34; as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "markdown": "The NPM package &#34;braces&#34;, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In &#34;lib/parse.js,&#34; if a malicious user sends &#34;imbalanced braces&#34; as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "fullDescription": {
                "text": "The NPM package &#34;braces&#34;, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In &#34;lib/parse.js,&#34; if a malicious user sends &#34;imbalanced braces&#34; as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20244068",
                "id": "CVE-2024-4068 (sca)",
                "description": "The NPM package &#34;braces&#34;, versions prior to 3.0.3, fails to limit the number of characters it can handle, which could lead to Memory Exhaustion. In &#34;lib/parse.js,&#34; if a malicious user sends &#34;imbalanced braces&#34; as input, the parsing will enter a loop, which will cause the program to start allocating heap memory without freeing it at any moment of the loop. Eventually, the JavaScript heap limit is reached, and the program will crash.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-45296 (sca)",
              "name": "Cve202445296",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The path-to-regexp turns path strings into regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). This issue affects path-to-regexp versions through 0.1.9, 0.2.0 through 1.8.0, 2.0.0 through 3.2.0, 4.0.0 through 6.2.2, and 7.0.0 through 7.2.0.",
                "markdown": "The path-to-regexp turns path strings into regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). This issue affects path-to-regexp versions through 0.1.9, 0.2.0 through 1.8.0, 2.0.0 through 3.2.0, 4.0.0 through 6.2.2, and 7.0.0 through 7.2.0."
              },
              "fullDescription": {
                "text": "The path-to-regexp turns path strings into regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). This issue affects path-to-regexp versions through 0.1.9, 0.2.0 through 1.8.0, 2.0.0 through 3.2.0, 4.0.0 through 6.2.2, and 7.0.0 through 7.2.0."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202445296",
                "id": "CVE-2024-45296 (sca)",
                "description": "The path-to-regexp turns path strings into regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. Because JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. The bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (.). This issue affects path-to-regexp versions through 0.1.9, 0.2.0 through 1.8.0, 2.0.0 through 3.2.0, 4.0.0 through 6.2.2, and 7.0.0 through 7.2.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-45590 (sca)",
              "name": "Cve202445590",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The body-parser is Node.js body parsing middleware. The body-parser package versions prior to 1.20.3 and 2.0.x prior to 2.0.0 are vulnerable to Denial of Service when URL encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in Denial of Service. ",
                "markdown": "The body-parser is Node.js body parsing middleware. The body-parser package versions prior to 1.20.3 and 2.0.x prior to 2.0.0 are vulnerable to Denial of Service when URL encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in Denial of Service. "
              },
              "fullDescription": {
                "text": "The body-parser is Node.js body parsing middleware. The body-parser package versions prior to 1.20.3 and 2.0.x prior to 2.0.0 are vulnerable to Denial of Service when URL encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in Denial of Service. "
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202445590",
                "id": "CVE-2024-45590 (sca)",
                "description": "The body-parser is Node.js body parsing middleware. The body-parser package versions prior to 1.20.3 and 2.0.x prior to 2.0.0 are vulnerable to Denial of Service when URL encoding is enabled. A malicious actor using a specially crafted payload could flood the server with a large number of requests, resulting in Denial of Service. ",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-4741 (containers)",
              "name": "Cve20244741",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Calling the OpenSSL API function &#34;SSL_free_buffers&#34; may cause memory to be accessed that was previously freed in some situations.\n\nThe first scenario occurs when a record header has been received from the network and processed by OpenSSL, but the full record body is yet to arrive. The second scenario occurs when a full record containing application data has been received and processed by OpenSSL, but the application has read only a part of this data. \n\nIn these cases, a call to &#34;SSL_free_buffers&#34; will succeed even though the buffer is still in use.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 3.0 versions prior to 3.0.14, 3.1 versions prior to 3.1.6, 3.2 versions prior to 3.2.2, 3.3 versions prior to 3.3.1 and 1.1.1 versions prior to 1.1.1y are affected by this issue.",
                "markdown": "Calling the OpenSSL API function &#34;SSL_free_buffers&#34; may cause memory to be accessed that was previously freed in some situations.\n\nThe first scenario occurs when a record header has been received from the network and processed by OpenSSL, but the full record body is yet to arrive. The second scenario occurs when a full record containing application data has been received and processed by OpenSSL, but the application has read only a part of this data. \n\nIn these cases, a call to &#34;SSL_free_buffers&#34; will succeed even though the buffer is still in use.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 3.0 versions prior to 3.0.14, 3.1 versions prior to 3.1.6, 3.2 versions prior to 3.2.2, 3.3 versions prior to 3.3.1 and 1.1.1 versions prior to 1.1.1y are affected by this issue."
              },
              "fullDescription": {
                "text": "Calling the OpenSSL API function &#34;SSL_free_buffers&#34; may cause memory to be accessed that was previously freed in some situations.\n\nThe first scenario occurs when a record header has been received from the network and processed by OpenSSL, but the full record body is yet to arrive. The second scenario occurs when a full record containing application data has been received and processed by OpenSSL, but the application has read only a part of this data. \n\nIn these cases, a call to &#34;SSL_free_buffers&#34; will succeed even though the buffer is still in use.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 3.0 versions prior to 3.0.14, 3.1 versions prior to 3.1.6, 3.2 versions prior to 3.2.2, 3.3 versions prior to 3.3.1 and 1.1.1 versions prior to 1.1.1y are affected by this issue."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20244741",
                "id": "CVE-2024-4741 (containers)",
                "description": "Calling the OpenSSL API function &#34;SSL_free_buffers&#34; may cause memory to be accessed that was previously freed in some situations.\n\nThe first scenario occurs when a record header has been received from the network and processed by OpenSSL, but the full record body is yet to arrive. The second scenario occurs when a full record containing application data has been received and processed by OpenSSL, but the application has read only a part of this data. \n\nIn these cases, a call to &#34;SSL_free_buffers&#34; will succeed even though the buffer is still in use.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL 3.0 versions prior to 3.0.14, 3.1 versions prior to 3.1.6, 3.2 versions prior to 3.2.2, 3.3 versions prior to 3.3.1 and 1.1.1 versions prior to 1.1.1y are affected by this issue.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-52798 (sca)",
              "name": "Cve202452798",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated. This issue affects path-to-regexp package versions through 0.1.11. Users are advised to upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.\n",
                "markdown": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated. This issue affects path-to-regexp package versions through 0.1.11. Users are advised to upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.\n"
              },
              "fullDescription": {
                "text": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated. This issue affects path-to-regexp package versions through 0.1.11. Users are advised to upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.\n"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202452798",
                "id": "CVE-2024-52798 (sca)",
                "description": "path-to-regexp turns path strings into a regular expressions. In certain cases, path-to-regexp will output a regular expression that can be exploited to cause poor performance. The regular expression that is vulnerable to backtracking can be generated. This issue affects path-to-regexp package versions through 0.1.11. Users are advised to upgrade to 0.1.12. This vulnerability exists because of an incomplete fix for CVE-2024-45296.\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-5535 (containers)",
              "name": "Cve20245535",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Calling the OpenSSL API function &#34;SSL_select_next_proto&#34; with an empty supported client protocol buffer may cause a crash or memory content to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application behavior or a crash. In particular, this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer, leading to a loss of confidentiality. However, only applications that directly call the &#34;SSL_select_next_proto&#34; function with a 0-length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function &#34;SSL_select_next_proto&#34; is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardized and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The &#34;SSL_select_next_proto&#34; function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists, it returns the first item to the client list. In either case, it will signal whether an overlap between the two lists was found. In the case where &#34;SSL_select_next_proto&#34; is called with a zero-length client list, it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server-side application callback for ALPN or a client-side application callback for NPN. In the case of ALPN, the list of protocols supplied by the client is guaranteed by libssl to never be zero. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case, if the &#34;SSL_select_next_proto&#34; function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero-length server list, has accidentally passed that zero-length server list in the &#34;client/client_len&#34; parameters, and has additionally failed to correctly handle a &#34;no overlap&#34; response (which would normally result in a handshake failure in ALPN), then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However, if the &#34;SSL_select_next_proto&#34; function is accidentally called with a &#34;client_len&#34; of 0, then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol, then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control, making active exploitation unlikely. This issue affects the openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.14, 3.1.0-alpha1 through 3.1.6, 3.2.0-alpha1 through 3.2.2, and 3.3.0-alpha1 through 3.3.1.",
                "markdown": "Calling the OpenSSL API function &#34;SSL_select_next_proto&#34; with an empty supported client protocol buffer may cause a crash or memory content to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application behavior or a crash. In particular, this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer, leading to a loss of confidentiality. However, only applications that directly call the &#34;SSL_select_next_proto&#34; function with a 0-length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function &#34;SSL_select_next_proto&#34; is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardized and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The &#34;SSL_select_next_proto&#34; function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists, it returns the first item to the client list. In either case, it will signal whether an overlap between the two lists was found. In the case where &#34;SSL_select_next_proto&#34; is called with a zero-length client list, it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server-side application callback for ALPN or a client-side application callback for NPN. In the case of ALPN, the list of protocols supplied by the client is guaranteed by libssl to never be zero. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case, if the &#34;SSL_select_next_proto&#34; function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero-length server list, has accidentally passed that zero-length server list in the &#34;client/client_len&#34; parameters, and has additionally failed to correctly handle a &#34;no overlap&#34; response (which would normally result in a handshake failure in ALPN), then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However, if the &#34;SSL_select_next_proto&#34; function is accidentally called with a &#34;client_len&#34; of 0, then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol, then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control, making active exploitation unlikely. This issue affects the openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.14, 3.1.0-alpha1 through 3.1.6, 3.2.0-alpha1 through 3.2.2, and 3.3.0-alpha1 through 3.3.1."
              },
              "fullDescription": {
                "text": "Calling the OpenSSL API function &#34;SSL_select_next_proto&#34; with an empty supported client protocol buffer may cause a crash or memory content to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application behavior or a crash. In particular, this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer, leading to a loss of confidentiality. However, only applications that directly call the &#34;SSL_select_next_proto&#34; function with a 0-length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function &#34;SSL_select_next_proto&#34; is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardized and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The &#34;SSL_select_next_proto&#34; function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists, it returns the first item to the client list. In either case, it will signal whether an overlap between the two lists was found. In the case where &#34;SSL_select_next_proto&#34; is called with a zero-length client list, it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server-side application callback for ALPN or a client-side application callback for NPN. In the case of ALPN, the list of protocols supplied by the client is guaranteed by libssl to never be zero. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case, if the &#34;SSL_select_next_proto&#34; function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero-length server list, has accidentally passed that zero-length server list in the &#34;client/client_len&#34; parameters, and has additionally failed to correctly handle a &#34;no overlap&#34; response (which would normally result in a handshake failure in ALPN), then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However, if the &#34;SSL_select_next_proto&#34; function is accidentally called with a &#34;client_len&#34; of 0, then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol, then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control, making active exploitation unlikely. This issue affects the openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.14, 3.1.0-alpha1 through 3.1.6, 3.2.0-alpha1 through 3.2.2, and 3.3.0-alpha1 through 3.3.1."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20245535",
                "id": "CVE-2024-5535 (containers)",
                "description": "Calling the OpenSSL API function &#34;SSL_select_next_proto&#34; with an empty supported client protocol buffer may cause a crash or memory content to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application behavior or a crash. In particular, this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer, leading to a loss of confidentiality. However, only applications that directly call the &#34;SSL_select_next_proto&#34; function with a 0-length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function &#34;SSL_select_next_proto&#34; is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never standardized and is deprecated in favour of ALPN. We believe that ALPN is significantly more widely deployed than NPN. The &#34;SSL_select_next_proto&#34; function accepts a list of protocols from the server and a list of protocols from the client and returns the first protocol that appears in the server list that also appears in the client list. In the case of no overlap between the two lists, it returns the first item to the client list. In either case, it will signal whether an overlap between the two lists was found. In the case where &#34;SSL_select_next_proto&#34; is called with a zero-length client list, it fails to notice this condition and returns the memory immediately following the client list pointer (and reports that there was no overlap in the lists). This function is typically called from a server-side application callback for ALPN or a client-side application callback for NPN. In the case of ALPN, the list of protocols supplied by the client is guaranteed by libssl to never be zero. The list of server protocols comes from the application and should never normally be expected to be of zero length. In this case, if the &#34;SSL_select_next_proto&#34; function has been called as expected (with the list supplied by the client passed in the client/client_len parameters), then the application will not be vulnerable to this issue. If the application has accidentally been configured with a zero-length server list, has accidentally passed that zero-length server list in the &#34;client/client_len&#34; parameters, and has additionally failed to correctly handle a &#34;no overlap&#34; response (which would normally result in a handshake failure in ALPN), then it will be vulnerable to this problem. In the case of NPN, the protocol permits the client to opportunistically select a protocol when there is no overlap. OpenSSL returns the first client protocol in the no overlap case in support of this. The list of client protocols comes from the application and should never normally be expected to be of zero length. However, if the &#34;SSL_select_next_proto&#34; function is accidentally called with a &#34;client_len&#34; of 0, then an invalid memory pointer will be returned instead. If the application uses this output as the opportunistic protocol, then the loss of confidentiality will occur. This issue has been assessed as Low severity because applications are most likely to be vulnerable if they are using NPN instead of ALPN - but NPN is not widely used. It also requires an application configuration or programming error. Finally, this issue would not typically be under attacker control, making active exploitation unlikely. This issue affects the openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.14, 3.1.0-alpha1 through 3.1.6, 3.2.0-alpha1 through 3.2.2, and 3.3.0-alpha1 through 3.3.1.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-0395 (containers)",
              "name": "Cve20250395",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "When the `assert()` function in the GNU C Library versions 2.14 through 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
                "markdown": "When the `assert()` function in the GNU C Library versions 2.14 through 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size."
              },
              "fullDescription": {
                "text": "When the `assert()` function in the GNU C Library versions 2.14 through 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20250395",
                "id": "CVE-2025-0395 (containers)",
                "description": "When the `assert()` function in the GNU C Library versions 2.14 through 2.40 fails, it does not allocate enough space for the assertion failure message string and size information, which may lead to a buffer overflow if the message string size aligns to page size.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-22869 (containers)",
              "name": "Cve202522869",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "SSH servers which implement file transfer protocols are vulnerable to a Denial of Service (DoS) attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted. This issue affects golang.org/x/crypto versions prior to 0.35.0.",
                "markdown": "SSH servers which implement file transfer protocols are vulnerable to a Denial of Service (DoS) attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted. This issue affects golang.org/x/crypto versions prior to 0.35.0."
              },
              "fullDescription": {
                "text": "SSH servers which implement file transfer protocols are vulnerable to a Denial of Service (DoS) attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted. This issue affects golang.org/x/crypto versions prior to 0.35.0."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202522869",
                "id": "CVE-2025-22869 (containers)",
                "description": "SSH servers which implement file transfer protocols are vulnerable to a Denial of Service (DoS) attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted. This issue affects golang.org/x/crypto versions prior to 0.35.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-29087 (containers)",
              "name": "Cve202529087",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In SQLite versions 3.44.0 through 3.44.3, 3.45.0 through 3.49.0, the &#34;concat_ws()&#34; SQL function can cause memory to be written beyond the end of a malloc-allocated buffer. If the separator argument is attacker-controlled and has a large string (e.g., 2MB or more), an Integer Overflow occurs in calculating the size of the result buffer, and thus malloc may not allocate enough memory. ",
                "markdown": "In SQLite versions 3.44.0 through 3.44.3, 3.45.0 through 3.49.0, the &#34;concat_ws()&#34; SQL function can cause memory to be written beyond the end of a malloc-allocated buffer. If the separator argument is attacker-controlled and has a large string (e.g., 2MB or more), an Integer Overflow occurs in calculating the size of the result buffer, and thus malloc may not allocate enough memory. "
              },
              "fullDescription": {
                "text": "In SQLite versions 3.44.0 through 3.44.3, 3.45.0 through 3.49.0, the &#34;concat_ws()&#34; SQL function can cause memory to be written beyond the end of a malloc-allocated buffer. If the separator argument is attacker-controlled and has a large string (e.g., 2MB or more), an Integer Overflow occurs in calculating the size of the result buffer, and thus malloc may not allocate enough memory. "
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202529087",
                "id": "CVE-2025-29087 (containers)",
                "description": "In SQLite versions 3.44.0 through 3.44.3, 3.45.0 through 3.49.0, the &#34;concat_ws()&#34; SQL function can cause memory to be written beyond the end of a malloc-allocated buffer. If the separator argument is attacker-controlled and has a large string (e.g., 2MB or more), an Integer Overflow occurs in calculating the size of the result buffer, and thus malloc may not allocate enough memory. ",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-4802 (containers)",
              "name": "Cve20254802",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Untrusted &#34;LD_LIBRARY_PATH&#34; environment variable vulnerability in the GNU C Library versions 2.27 through 2.38.9000 allows attacker-controlled loading of dynamically shared libraries in statically compiled setuid binaries that call &#34;dlopen&#34; (including internal &#34;dlopen&#34; calls after &#34;setlocale&#34; or calls to NSS functions such as &#34;getaddrinfo&#34;).",
                "markdown": "Untrusted &#34;LD_LIBRARY_PATH&#34; environment variable vulnerability in the GNU C Library versions 2.27 through 2.38.9000 allows attacker-controlled loading of dynamically shared libraries in statically compiled setuid binaries that call &#34;dlopen&#34; (including internal &#34;dlopen&#34; calls after &#34;setlocale&#34; or calls to NSS functions such as &#34;getaddrinfo&#34;)."
              },
              "fullDescription": {
                "text": "Untrusted &#34;LD_LIBRARY_PATH&#34; environment variable vulnerability in the GNU C Library versions 2.27 through 2.38.9000 allows attacker-controlled loading of dynamically shared libraries in statically compiled setuid binaries that call &#34;dlopen&#34; (including internal &#34;dlopen&#34; calls after &#34;setlocale&#34; or calls to NSS functions such as &#34;getaddrinfo&#34;)."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20254802",
                "id": "CVE-2025-4802 (containers)",
                "description": "Untrusted &#34;LD_LIBRARY_PATH&#34; environment variable vulnerability in the GNU C Library versions 2.27 through 2.38.9000 allows attacker-controlled loading of dynamically shared libraries in statically compiled setuid binaries that call &#34;dlopen&#34; (including internal &#34;dlopen&#34; calls after &#34;setlocale&#34; or calls to NSS functions such as &#34;getaddrinfo&#34;).",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-48060 (containers)",
              "name": "Cve202548060",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "jq is a command-line JSON processor. In versions up to and including 1.7.1, a heap-buffer-overflow is present in function `jv_string_vfmt` in the jq_fuzz_execute harness from oss-fuzz. This crash happens on file jv.c, line 1456 `void* p = malloc(sz);`. As of time of publication, no patched versions are available.",
                "markdown": "jq is a command-line JSON processor. In versions up to and including 1.7.1, a heap-buffer-overflow is present in function `jv_string_vfmt` in the jq_fuzz_execute harness from oss-fuzz. This crash happens on file jv.c, line 1456 `void* p = malloc(sz);`. As of time of publication, no patched versions are available."
              },
              "fullDescription": {
                "text": "jq is a command-line JSON processor. In versions up to and including 1.7.1, a heap-buffer-overflow is present in function `jv_string_vfmt` in the jq_fuzz_execute harness from oss-fuzz. This crash happens on file jv.c, line 1456 `void* p = malloc(sz);`. As of time of publication, no patched versions are available."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve202548060",
                "id": "CVE-2025-48060 (containers)",
                "description": "jq is a command-line JSON processor. In versions up to and including 1.7.1, a heap-buffer-overflow is present in function `jv_string_vfmt` in the jq_fuzz_execute harness from oss-fuzz. This crash happens on file jv.c, line 1456 `void* p = malloc(sz);`. As of time of publication, no patched versions are available.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-6965 (containers)",
              "name": "Cve20256965",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "There exists a vulnerability in SQLite versions through 3.44.4 and 3.45.x through 3.49.2, and 3.50.x through 3.50.1, where the number of aggregate terms could exceed the number of columns available. This could lead to a memory corruption issue. ",
                "markdown": "There exists a vulnerability in SQLite versions through 3.44.4 and 3.45.x through 3.49.2, and 3.50.x through 3.50.1, where the number of aggregate terms could exceed the number of columns available. This could lead to a memory corruption issue. "
              },
              "fullDescription": {
                "text": "There exists a vulnerability in SQLite versions through 3.44.4 and 3.45.x through 3.49.2, and 3.50.x through 3.50.1, where the number of aggregate terms could exceed the number of columns available. This could lead to a memory corruption issue. "
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cve20256965",
                "id": "CVE-2025-6965 (containers)",
                "description": "There exists a vulnerability in SQLite versions through 3.44.4 and 3.45.x through 3.49.2, and 3.50.x through 3.50.1, where the number of aggregate terms could exceed the number of columns available. This could lead to a memory corruption issue. ",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "Cx0b414307-5d4b (sca)",
              "name": "Cx0b4143075d4b",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Prototype Pollution vulnerability in lodash before 4.17.19.",
                "markdown": "Prototype Pollution vulnerability in lodash before 4.17.19."
              },
              "fullDescription": {
                "text": "Prototype Pollution vulnerability in lodash before 4.17.19."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cx0b4143075d4b",
                "id": "Cx0b414307-5d4b (sca)",
                "description": "Prototype Pollution vulnerability in lodash before 4.17.19.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx10578cb2-c0fc (sca)",
              "name": "Cx10578cb2c0fc",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The Cypress package in versions prior to 10.3.0 contains a memory leak in the &#34;CdpAutomation&#34; class that stores Data URLs as requests in the &#34;pendingBrowserPreRequests&#34; array unnecessarily. The storage of the Data URLs will eventually lead to the crash of Cypress which may cause a Denial of Service.",
                "markdown": "The Cypress package in versions prior to 10.3.0 contains a memory leak in the &#34;CdpAutomation&#34; class that stores Data URLs as requests in the &#34;pendingBrowserPreRequests&#34; array unnecessarily. The storage of the Data URLs will eventually lead to the crash of Cypress which may cause a Denial of Service."
              },
              "fullDescription": {
                "text": "The Cypress package in versions prior to 10.3.0 contains a memory leak in the &#34;CdpAutomation&#34; class that stores Data URLs as requests in the &#34;pendingBrowserPreRequests&#34; array unnecessarily. The storage of the Data URLs will eventually lead to the crash of Cypress which may cause a Denial of Service."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cx10578cb2c0fc",
                "id": "Cx10578cb2-c0fc (sca)",
                "description": "The Cypress package in versions prior to 10.3.0 contains a memory leak in the &#34;CdpAutomation&#34; class that stores Data URLs as requests in the &#34;pendingBrowserPreRequests&#34; array unnecessarily. The storage of the Data URLs will eventually lead to the crash of Cypress which may cause a Denial of Service.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx28d8d81d-c124 (sca)",
              "name": "Cx28d8d81dc124",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Stringstream is vulnerable to uninitialized buffer allocation. It allows to extract sensitive data from uninitialized memory or to cause a Denial of Service by passing in a large number, in setups where typed user input can be passed to the stream (e.g. from JSON), on Node.js 4.x and lower.",
                "markdown": "Stringstream is vulnerable to uninitialized buffer allocation. It allows to extract sensitive data from uninitialized memory or to cause a Denial of Service by passing in a large number, in setups where typed user input can be passed to the stream (e.g. from JSON), on Node.js 4.x and lower."
              },
              "fullDescription": {
                "text": "Stringstream is vulnerable to uninitialized buffer allocation. It allows to extract sensitive data from uninitialized memory or to cause a Denial of Service by passing in a large number, in setups where typed user input can be passed to the stream (e.g. from JSON), on Node.js 4.x and lower."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cx28d8d81dc124",
                "id": "Cx28d8d81d-c124 (sca)",
                "description": "Stringstream is vulnerable to uninitialized buffer allocation. It allows to extract sensitive data from uninitialized memory or to cause a Denial of Service by passing in a large number, in setups where typed user input can be passed to the stream (e.g. from JSON), on Node.js 4.x and lower.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx2d55b83a-7aa0 (sca)",
              "name": "Cx2d55b83a7aa0",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Braces is vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.",
                "markdown": "Braces is vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service."
              },
              "fullDescription": {
                "text": "Braces is vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cx2d55b83a7aa0",
                "id": "Cx2d55b83a-7aa0 (sca)",
                "description": "Braces is vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx3f1b0502-ac0d (sca)",
              "name": "Cx3f1b0502ac0d",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package console-browserify before 1.2.0 is vulnerable to memory leak. The timeEnd() function doesn&#39;t delete the `label` property of `times` object, persisting the reference and potentially causing a memory leak. Upon continuous usage, it can lead to decreased performace.",
                "markdown": "The package console-browserify before 1.2.0 is vulnerable to memory leak. The timeEnd() function doesn&#39;t delete the `label` property of `times` object, persisting the reference and potentially causing a memory leak. Upon continuous usage, it can lead to decreased performace."
              },
              "fullDescription": {
                "text": "The package console-browserify before 1.2.0 is vulnerable to memory leak. The timeEnd() function doesn&#39;t delete the `label` property of `times` object, persisting the reference and potentially causing a memory leak. Upon continuous usage, it can lead to decreased performace."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cx3f1b0502ac0d",
                "id": "Cx3f1b0502-ac0d (sca)",
                "description": "The package console-browserify before 1.2.0 is vulnerable to memory leak. The timeEnd() function doesn&#39;t delete the `label` property of `times` object, persisting the reference and potentially causing a memory leak. Upon continuous usage, it can lead to decreased performace.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx47c60579-4830 (sca)",
              "name": "Cx47c605794830",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Some versions of handlebars are vulnerable to Denial of Service. The package&#39;s parser may be forced into an endless loop while processing specially-crafted templates. This may allow attackers to exhaust system resources leading to Denial of Service. Affected versions are &gt;= 4.0.0, &lt; 4.4.5 .",
                "markdown": "Some versions of handlebars are vulnerable to Denial of Service. The package&#39;s parser may be forced into an endless loop while processing specially-crafted templates. This may allow attackers to exhaust system resources leading to Denial of Service. Affected versions are &gt;= 4.0.0, &lt; 4.4.5 ."
              },
              "fullDescription": {
                "text": "Some versions of handlebars are vulnerable to Denial of Service. The package&#39;s parser may be forced into an endless loop while processing specially-crafted templates. This may allow attackers to exhaust system resources leading to Denial of Service. Affected versions are &gt;= 4.0.0, &lt; 4.4.5 ."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cx47c605794830",
                "id": "Cx47c60579-4830 (sca)",
                "description": "Some versions of handlebars are vulnerable to Denial of Service. The package&#39;s parser may be forced into an endless loop while processing specially-crafted templates. This may allow attackers to exhaust system resources leading to Denial of Service. Affected versions are &gt;= 4.0.0, &lt; 4.4.5 .",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx62f5bb1b-fa5e (sca)",
              "name": "Cx62f5bb1bfa5e",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A Regular Expression Denial of Service (ReDoS) in moment 2.18 through 2.29.3 makes the server unavailable when a specially crafted input is provided to the default function &#34;moment()&#34;, which nearly matches the pattern being matched.\nThis will cause the regular expression matching to take a long time, all the while occupying the event loop and preventing it from processing other requests.",
                "markdown": "A Regular Expression Denial of Service (ReDoS) in moment 2.18 through 2.29.3 makes the server unavailable when a specially crafted input is provided to the default function &#34;moment()&#34;, which nearly matches the pattern being matched.\nThis will cause the regular expression matching to take a long time, all the while occupying the event loop and preventing it from processing other requests."
              },
              "fullDescription": {
                "text": "A Regular Expression Denial of Service (ReDoS) in moment 2.18 through 2.29.3 makes the server unavailable when a specially crafted input is provided to the default function &#34;moment()&#34;, which nearly matches the pattern being matched.\nThis will cause the regular expression matching to take a long time, all the while occupying the event loop and preventing it from processing other requests."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cx62f5bb1bfa5e",
                "id": "Cx62f5bb1b-fa5e (sca)",
                "description": "A Regular Expression Denial of Service (ReDoS) in moment 2.18 through 2.29.3 makes the server unavailable when a specially crafted input is provided to the default function &#34;moment()&#34;, which nearly matches the pattern being matched.\nThis will cause the regular expression matching to take a long time, all the while occupying the event loop and preventing it from processing other requests.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxa8a11659-1098 (sca)",
              "name": "Cxa8a116591098",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Tunnel-agent is vulnerable to memory exposure. This is exploitable if user supplied input is provided to the auth value and is a number.",
                "markdown": "Tunnel-agent is vulnerable to memory exposure. This is exploitable if user supplied input is provided to the auth value and is a number."
              },
              "fullDescription": {
                "text": "Tunnel-agent is vulnerable to memory exposure. This is exploitable if user supplied input is provided to the auth value and is a number."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxa8a116591098",
                "id": "Cxa8a11659-1098 (sca)",
                "description": "Tunnel-agent is vulnerable to memory exposure. This is exploitable if user supplied input is provided to the auth value and is a number.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxaa758609-b986 (sca)",
              "name": "Cxaa758609b986",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of `handlebars` prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package&#39;s lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim&#39;s browser (effectively serving as Cross-Site Scripting).\n\nThe following template can be used to demonstrate the vulnerability:  \n```{{#with &#34;constructor&#34;}}\n\t{{#with split as |a|}}\n\t\t{{pop (push &#34;alert(&#39;Vulnerable Handlebars JS&#39;);&#34;)}}\n\t\t{{#with (concat (lookup join (slice 0 1)))}}\n\t\t\t{{#each (slice 2 3)}}\n\t\t\t\t{{#with (apply 0 a)}}\n\t\t\t\t\t{{.}}\n\t\t\t\t{{/with}}\n\t\t\t{{/each}}\n\t\t{{/with}}\n\t{{/with}}\n{{/with}}```",
                "markdown": "Versions of `handlebars` prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package&#39;s lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim&#39;s browser (effectively serving as Cross-Site Scripting).\n\nThe following template can be used to demonstrate the vulnerability:  \n```{{#with &#34;constructor&#34;}}\n\t{{#with split as |a|}}\n\t\t{{pop (push &#34;alert(&#39;Vulnerable Handlebars JS&#39;);&#34;)}}\n\t\t{{#with (concat (lookup join (slice 0 1)))}}\n\t\t\t{{#each (slice 2 3)}}\n\t\t\t\t{{#with (apply 0 a)}}\n\t\t\t\t\t{{.}}\n\t\t\t\t{{/with}}\n\t\t\t{{/each}}\n\t\t{{/with}}\n\t{{/with}}\n{{/with}}```"
              },
              "fullDescription": {
                "text": "Versions of `handlebars` prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package&#39;s lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim&#39;s browser (effectively serving as Cross-Site Scripting).\n\nThe following template can be used to demonstrate the vulnerability:  \n```{{#with &#34;constructor&#34;}}\n\t{{#with split as |a|}}\n\t\t{{pop (push &#34;alert(&#39;Vulnerable Handlebars JS&#39;);&#34;)}}\n\t\t{{#with (concat (lookup join (slice 0 1)))}}\n\t\t\t{{#each (slice 2 3)}}\n\t\t\t\t{{#with (apply 0 a)}}\n\t\t\t\t\t{{.}}\n\t\t\t\t{{/with}}\n\t\t\t{{/each}}\n\t\t{{/with}}\n\t{{/with}}\n{{/with}}```"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxaa758609b986",
                "id": "Cxaa758609-b986 (sca)",
                "description": "Versions of `handlebars` prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package&#39;s lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim&#39;s browser (effectively serving as Cross-Site Scripting).\n\nThe following template can be used to demonstrate the vulnerability:  \n```{{#with &#34;constructor&#34;}}\n\t{{#with split as |a|}}\n\t\t{{pop (push &#34;alert(&#39;Vulnerable Handlebars JS&#39;);&#34;)}}\n\t\t{{#with (concat (lookup join (slice 0 1)))}}\n\t\t\t{{#each (slice 2 3)}}\n\t\t\t\t{{#with (apply 0 a)}}\n\t\t\t\t\t{{.}}\n\t\t\t\t{{/with}}\n\t\t\t{{/each}}\n\t\t{{/with}}\n\t{{/with}}\n{{/with}}```",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxb1cb3481-32bd (sca)",
              "name": "Cxb1cb348132bd",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The qs module is affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string.",
                "markdown": "The qs module is affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string."
              },
              "fullDescription": {
                "text": "The qs module is affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxb1cb348132bd",
                "id": "Cxb1cb3481-32bd (sca)",
                "description": "The qs module is affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxb244cccc-f1c7 (sca)",
              "name": "Cxb244ccccf1c7",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package `ws` up to 1.1.5 is vulnerable to stack overflow, due to recursive function call on flush() in `lib/Sender.js`, when a message with multiple MessageHandlers is passed, leading to denial of service. This affects the availability.",
                "markdown": "The package `ws` up to 1.1.5 is vulnerable to stack overflow, due to recursive function call on flush() in `lib/Sender.js`, when a message with multiple MessageHandlers is passed, leading to denial of service. This affects the availability."
              },
              "fullDescription": {
                "text": "The package `ws` up to 1.1.5 is vulnerable to stack overflow, due to recursive function call on flush() in `lib/Sender.js`, when a message with multiple MessageHandlers is passed, leading to denial of service. This affects the availability."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxb244ccccf1c7",
                "id": "Cxb244cccc-f1c7 (sca)",
                "description": "The package `ws` up to 1.1.5 is vulnerable to stack overflow, due to recursive function call on flush() in `lib/Sender.js`, when a message with multiple MessageHandlers is passed, leading to denial of service. This affects the availability.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxb3ca64d2-9cd1 (sca)",
              "name": "Cxb3ca64d29cd1",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package `mocha`is vulnerable to Regular Expression Denial of Service (ReDoS). The function `clean` in `utils.js` can make the server unavailable when a specially crafted input is provided. This issue affects versions prior to 10.1.0.",
                "markdown": "The package `mocha`is vulnerable to Regular Expression Denial of Service (ReDoS). The function `clean` in `utils.js` can make the server unavailable when a specially crafted input is provided. This issue affects versions prior to 10.1.0."
              },
              "fullDescription": {
                "text": "The package `mocha`is vulnerable to Regular Expression Denial of Service (ReDoS). The function `clean` in `utils.js` can make the server unavailable when a specially crafted input is provided. This issue affects versions prior to 10.1.0."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxb3ca64d29cd1",
                "id": "Cxb3ca64d2-9cd1 (sca)",
                "description": "The package `mocha`is vulnerable to Regular Expression Denial of Service (ReDoS). The function `clean` in `utils.js` can make the server unavailable when a specially crafted input is provided. This issue affects versions prior to 10.1.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxb5ff3426-7838 (sca)",
              "name": "Cxb5ff34267838",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of handlebars prior to 3.0.8 or 4.5.3 are vulnerable to prototype pollution. It is possible to add or modify properties to the Object prototype through a malicious template. This may allow attackers to crash the application or execute Arbitrary Code in specific conditions.",
                "markdown": "Versions of handlebars prior to 3.0.8 or 4.5.3 are vulnerable to prototype pollution. It is possible to add or modify properties to the Object prototype through a malicious template. This may allow attackers to crash the application or execute Arbitrary Code in specific conditions."
              },
              "fullDescription": {
                "text": "Versions of handlebars prior to 3.0.8 or 4.5.3 are vulnerable to prototype pollution. It is possible to add or modify properties to the Object prototype through a malicious template. This may allow attackers to crash the application or execute Arbitrary Code in specific conditions."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxb5ff34267838",
                "id": "Cxb5ff3426-7838 (sca)",
                "description": "Versions of handlebars prior to 3.0.8 or 4.5.3 are vulnerable to prototype pollution. It is possible to add or modify properties to the Object prototype through a malicious template. This may allow attackers to crash the application or execute Arbitrary Code in specific conditions.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxc6f5432f-0440 (sca)",
              "name": "Cxc6f5432f0440",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "is-my-json-valid is vulnerable to Regular Expression Denial of Service (ReDoS) via the email validation function.",
                "markdown": "is-my-json-valid is vulnerable to Regular Expression Denial of Service (ReDoS) via the email validation function."
              },
              "fullDescription": {
                "text": "is-my-json-valid is vulnerable to Regular Expression Denial of Service (ReDoS) via the email validation function."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxc6f5432f0440",
                "id": "Cxc6f5432f-0440 (sca)",
                "description": "is-my-json-valid is vulnerable to Regular Expression Denial of Service (ReDoS) via the email validation function.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxcc09496a-59c8 (sca)",
              "name": "Cxcc09496a59c8",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The js-yaml package is vulnerable to Code Injection in versions prior to 3.13.1. The &#34;load()&#34; function may execute arbitrary code injected through a malicious YAML file. Objects that have &#34;toString&#34; as a key and JavaScript code as the value can be used as explicit mapping keys. This allows attackers to execute the supplied code through the &#34;load()&#34; function. The &#34;safeLoad()&#34; function is unaffected.",
                "markdown": "The js-yaml package is vulnerable to Code Injection in versions prior to 3.13.1. The &#34;load()&#34; function may execute arbitrary code injected through a malicious YAML file. Objects that have &#34;toString&#34; as a key and JavaScript code as the value can be used as explicit mapping keys. This allows attackers to execute the supplied code through the &#34;load()&#34; function. The &#34;safeLoad()&#34; function is unaffected."
              },
              "fullDescription": {
                "text": "The js-yaml package is vulnerable to Code Injection in versions prior to 3.13.1. The &#34;load()&#34; function may execute arbitrary code injected through a malicious YAML file. Objects that have &#34;toString&#34; as a key and JavaScript code as the value can be used as explicit mapping keys. This allows attackers to execute the supplied code through the &#34;load()&#34; function. The &#34;safeLoad()&#34; function is unaffected."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxcc09496a59c8",
                "id": "Cxcc09496a-59c8 (sca)",
                "description": "The js-yaml package is vulnerable to Code Injection in versions prior to 3.13.1. The &#34;load()&#34; function may execute arbitrary code injected through a malicious YAML file. Objects that have &#34;toString&#34; as a key and JavaScript code as the value can be used as explicit mapping keys. This allows attackers to execute the supplied code through the &#34;load()&#34; function. The &#34;safeLoad()&#34; function is unaffected.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxd6c215a2-86bd (sca)",
              "name": "Cxd6c215a286bd",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of node-mongodb prior to 3.1.13 are vulnerable to Denial of Service. The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application.",
                "markdown": "Versions of node-mongodb prior to 3.1.13 are vulnerable to Denial of Service. The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application."
              },
              "fullDescription": {
                "text": "Versions of node-mongodb prior to 3.1.13 are vulnerable to Denial of Service. The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxd6c215a286bd",
                "id": "Cxd6c215a2-86bd (sca)",
                "description": "Versions of node-mongodb prior to 3.1.13 are vulnerable to Denial of Service. The package fails to properly catch an exception when a collection name is invalid and the DB does not exist, crashing the application.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxdca8e59f-8bfe (sca)",
              "name": "Cxdca8e59f8bfe",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used.",
                "markdown": "In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used."
              },
              "fullDescription": {
                "text": "In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxdca8e59f8bfe",
                "id": "Cxdca8e59f-8bfe (sca)",
                "description": "In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxdca8e59f-8bfe (containers)",
              "name": "Cxdca8e59f8bfe",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used.",
                "markdown": "In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used."
              },
              "fullDescription": {
                "text": "In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxdca8e59f8bfe",
                "id": "Cxdca8e59f-8bfe (containers)",
                "description": "In NPM `inflight` there is a Memory Leak because some resources are not freed correctly after being used. It appears to affect all versions, as the issue was not addressed and no fix is found. NOTE: In the meantime, `logdna-agent`, a package that depends on `inflight`, has merged a commit to address this solely in their package (so it should be fixed in `logdna-agent` in versions 1.6.5 and later). `Node-glob`, a package that also depends on `inflight`, was also planning to address this by not using `inflight` after version 8 is released, but it is still being used.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "Cxe299c2b0-ccc8 (sca)",
              "name": "Cxe299c2b0ccc8",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Domutils before version 1.6.0 is vulnerable to stack overflow. The function findAll in the file querying.js uses a recursive method to find elements, leading to stack overflow when ran against a huge page. This affects the availability. ",
                "markdown": "Domutils before version 1.6.0 is vulnerable to stack overflow. The function findAll in the file querying.js uses a recursive method to find elements, leading to stack overflow when ran against a huge page. This affects the availability. "
              },
              "fullDescription": {
                "text": "Domutils before version 1.6.0 is vulnerable to stack overflow. The function findAll in the file querying.js uses a recursive method to find elements, leading to stack overflow when ran against a huge page. This affects the availability. "
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxe299c2b0ccc8",
                "id": "Cxe299c2b0-ccc8 (sca)",
                "description": "Domutils before version 1.6.0 is vulnerable to stack overflow. The function findAll in the file querying.js uses a recursive method to find elements, leading to stack overflow when ran against a huge page. This affects the availability. ",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxf3872f17-a858 (sca)",
              "name": "Cxf3872f17a858",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package `ws` is vulnerable to stack overflow, due to recursive function calls in `lib/Receiver.js`. When the parser attempts to parse a buffer with a huge number of frames, it leads to stack memory consumption. This affects the availability.",
                "markdown": "The package `ws` is vulnerable to stack overflow, due to recursive function calls in `lib/Receiver.js`. When the parser attempts to parse a buffer with a huge number of frames, it leads to stack memory consumption. This affects the availability."
              },
              "fullDescription": {
                "text": "The package `ws` is vulnerable to stack overflow, due to recursive function calls in `lib/Receiver.js`. When the parser attempts to parse a buffer with a huge number of frames, it leads to stack memory consumption. This affects the availability."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Cxf3872f17a858",
                "id": "Cxf3872f17-a858 (sca)",
                "description": "The package `ws` is vulnerable to stack overflow, due to recursive function calls in `lib/Receiver.js`. When the parser attempts to parse a buffer with a huge number of frames, it leads to stack memory consumption. This affects the availability.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Reflected XSS - 16772998409937314312 (sast)",
              "name": "Reflected XSS",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The method  embeds untrusted data in generated output with render, at line 50 of /app/routes/contributions.js. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input session, which is read by the  method at line 44 of /app/routes/contributions.js. This input then flows through the code straight to the output web page, without sanitization.\u00a0\r\n\r\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n\n",
                "markdown": "The method  embeds untrusted data in generated output with render, at line 50 of /app/routes/contributions.js. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input session, which is read by the  method at line 44 of /app/routes/contributions.js. This input then flows through the code straight to the output web page, without sanitization.\u00a0\r\n\r\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n\n"
              },
              "fullDescription": {
                "text": "The method  embeds untrusted data in generated output with render, at line 50 of /app/routes/contributions.js. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input session, which is read by the  method at line 44 of /app/routes/contributions.js. This input then flows through the code straight to the output web page, without sanitization.\u00a0\r\n\r\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n\n"
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Reflected XSS",
                "id": "Reflected XSS - 16772998409937314312 (sast)",
                "description": "The method  embeds untrusted data in generated output with render, at line 50 of /app/routes/contributions.js. This untrusted data is embedded into the output without proper sanitization or encoding, enabling an attacker to inject malicious code into the generated web-page.\n\nThe attacker would be able to alter the returned web page by simply providing modified data in the user input session, which is read by the  method at line 44 of /app/routes/contributions.js. This input then flows through the code straight to the output web page, without sanitization.\u00a0\r\n\r\nThis can enable a Reflected Cross-Site Scripting (XSS) attack.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "Private-Key - private-key (sscs-secret-detection)",
              "name": "Private-Key",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Remove private-key MIIC*** from code and store securely in a secure vault.",
                "markdown": "Remove private-key MIIC*** from code and store securely in a secure vault."
              },
              "fullDescription": {
                "text": "Identified a Private Key, which may compromise cryptographic security and sensitive data encryption."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Private-Key",
                "id": "Private-Key - private-key (sscs-secret-detection)",
                "description": "Identified a Private Key, which may compromise cryptographic security and sensitive data encryption.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-secret-detection"
                ]
              }
            },
            {
              "id": "Code-Review - CodeReviewID (sscs-scorecard)",
              "name": "Code-Review",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#code-review",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the project requires human code review before pull requests (aka merge requests) are merged."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Code-Review",
                "id": "Code-Review - CodeReviewID (sscs-scorecard)",
                "description": "Determines if the project requires human code review before pull requests (aka merge requests) are merged.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "Branch-Protection - BranchProtectionID (sscs-scorecard)",
              "name": "Branch-Protection",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#branch-protection",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the default and release branches are protected with GitHub's branch protection settings."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Branch-Protection",
                "id": "Branch-Protection - BranchProtectionID (sscs-scorecard)",
                "description": "Determines if the default and release branches are protected with GitHub's branch protection settings.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "Maintained - MaintainedID (sscs-scorecard)",
              "name": "Maintained",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#maintained",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the project is \"actively maintained\"."
              },
              "properties": {
                "security-severity": "7.0",
                "name": "Maintained",
                "id": "Maintained - MaintainedID (sscs-scorecard)",
                "description": "Determines if the project is \"actively maintained\".",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "Security Opt Not Set - 610e266e-6c12-4bca-9925-1ed0cd29742b [Taken from query_id] (kics)",
              "name": "Security Opt Not Set",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Attribute &#39;security_opt&#39; should be defined. Value: Docker compose file does not have 'security_opt' attribute Excepted value: Docker compose file to have 'security_opt' attribute",
                "markdown": "Attribute &#39;security_opt&#39; should be defined. <br><br><strong>Value:</strong> Docker compose file does not have 'security_opt' attribute <br><strong>Excepted value:</strong> Docker compose file to have 'security_opt' attribute"
              },
              "fullDescription": {
                "text": "Attribute &#39;security_opt&#39; should be defined. Value: Docker compose file does not have 'security_opt' attribute Excepted value: Docker compose file to have 'security_opt' attribute"
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Security Opt Not Set",
                "id": "Security Opt Not Set - 610e266e-6c12-4bca-9925-1ed0cd29742b [Taken from query_id] (kics)",
                "description": "Attribute &#39;security_opt&#39; should be defined. Value: Docker compose file does not have 'security_opt' attribute Excepted value: Docker compose file to have 'security_opt' attribute",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            },
            {
              "id": "Healthcheck Not Set - 698ed579-b239-4f8f-a388-baa4bcb13ef8 [Taken from query_id] (kics)",
              "name": "Healthcheck Not Set",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Check containers periodically to see if they are running properly. Value: Healthcheck is not defined. Excepted value: Healthcheck should be defined.",
                "markdown": "Check containers periodically to see if they are running properly. <br><br><strong>Value:</strong> Healthcheck is not defined. <br><strong>Excepted value:</strong> Healthcheck should be defined."
              },
              "fullDescription": {
                "text": "Check containers periodically to see if they are running properly. Value: Healthcheck is not defined. Excepted value: Healthcheck should be defined."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Healthcheck Not Set",
                "id": "Healthcheck Not Set - 698ed579-b239-4f8f-a388-baa4bcb13ef8 [Taken from query_id] (kics)",
                "description": "Check containers periodically to see if they are running properly. Value: Healthcheck is not defined. Excepted value: Healthcheck should be defined.",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            },
            {
              "id": "Use Of Hardcoded Password - 2783517675732844652 (sast)",
              "name": "Use Of Hardcoded Password",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The application uses the hard-coded password &#34;Admin_123&#34; for authentication purposes, either using it to verify users&#39; identities, or to access another remote system. This password at line 18 of /artifacts/db-reset.js appears in the code, implying it is accessible to anyone with source code access, and cannot be changed without rebuilding\u00a0the application.\n\n",
                "markdown": "The application uses the hard-coded password &#34;Admin_123&#34; for authentication purposes, either using it to verify users&#39; identities, or to access another remote system. This password at line 18 of /artifacts/db-reset.js appears in the code, implying it is accessible to anyone with source code access, and cannot be changed without rebuilding\u00a0the application.\n\n"
              },
              "fullDescription": {
                "text": "The application uses the hard-coded password &#34;Admin_123&#34; for authentication purposes, either using it to verify users&#39; identities, or to access another remote system. This password at line 18 of /artifacts/db-reset.js appears in the code, implying it is accessible to anyone with source code access, and cannot be changed without rebuilding\u00a0the application.\n\n"
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Use Of Hardcoded Password",
                "id": "Use Of Hardcoded Password - 2783517675732844652 (sast)",
                "description": "The application uses the hard-coded password &#34;Admin_123&#34; for authentication purposes, either using it to verify users&#39; identities, or to access another remote system. This password at line 18 of /artifacts/db-reset.js appears in the code, implying it is accessible to anyone with source code access, and cannot be changed without rebuilding\u00a0the application.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "Fuzzing - FuzzingID (sscs-scorecard)",
              "name": "Fuzzing",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#fuzzing",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the project uses fuzzing."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Fuzzing",
                "id": "Fuzzing - FuzzingID (sscs-scorecard)",
                "description": "Determines if the project uses fuzzing.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
              "name": "Pinned-Dependencies",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#pinned-dependencies",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the project has declared and pinned the dependencies of its build process."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Pinned-Dependencies",
                "id": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
                "description": "Determines if the project has declared and pinned the dependencies of its build process.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "CVE-2014-7191 (sca)",
              "name": "Cve20147191",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The qs module before 1.0.0 in Node.js does not call the compact function for array data, which allows remote attackers to cause a denial of service (memory consumption) by using a large index value to create a sparse array.",
                "markdown": "The qs module before 1.0.0 in Node.js does not call the compact function for array data, which allows remote attackers to cause a denial of service (memory consumption) by using a large index value to create a sparse array."
              },
              "fullDescription": {
                "text": "The qs module before 1.0.0 in Node.js does not call the compact function for array data, which allows remote attackers to cause a denial of service (memory consumption) by using a large index value to create a sparse array."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20147191",
                "id": "CVE-2014-7191 (sca)",
                "description": "The qs module before 1.0.0 in Node.js does not call the compact function for array data, which allows remote attackers to cause a denial of service (memory consumption) by using a large index value to create a sparse array.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2016-1000232 (sca)",
              "name": "Cve20161000232",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "NodeJS Tough-Cookie version 2.2.2 contains a Regular Expression Parsing vulnerability in HTTP request Cookie Header parsing that can result in Denial of Service. This attack appear to be exploitable via Custom HTTP header passed by client. This vulnerability appears to have been fixed in 2.3.0.",
                "markdown": "NodeJS Tough-Cookie version 2.2.2 contains a Regular Expression Parsing vulnerability in HTTP request Cookie Header parsing that can result in Denial of Service. This attack appear to be exploitable via Custom HTTP header passed by client. This vulnerability appears to have been fixed in 2.3.0."
              },
              "fullDescription": {
                "text": "NodeJS Tough-Cookie version 2.2.2 contains a Regular Expression Parsing vulnerability in HTTP request Cookie Header parsing that can result in Denial of Service. This attack appear to be exploitable via Custom HTTP header passed by client. This vulnerability appears to have been fixed in 2.3.0."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20161000232",
                "id": "CVE-2016-1000232 (sca)",
                "description": "NodeJS Tough-Cookie version 2.2.2 contains a Regular Expression Parsing vulnerability in HTTP request Cookie Header parsing that can result in Denial of Service. This attack appear to be exploitable via Custom HTTP header passed by client. This vulnerability appears to have been fixed in 2.3.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2016-10531 (sca)",
              "name": "Cve201610531",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "marked is an application that is meant to parse and compile markdown. Due to the way that marked parses input in versions 0.3.x before 0.3.6, specifically HTML entities, it&#39;s possible to bypass marked&#39;s content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `&amp;#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left.",
                "markdown": "marked is an application that is meant to parse and compile markdown. Due to the way that marked parses input in versions 0.3.x before 0.3.6, specifically HTML entities, it&#39;s possible to bypass marked&#39;s content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `&amp;#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left."
              },
              "fullDescription": {
                "text": "marked is an application that is meant to parse and compile markdown. Due to the way that marked parses input in versions 0.3.x before 0.3.6, specifically HTML entities, it&#39;s possible to bypass marked&#39;s content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `&amp;#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201610531",
                "id": "CVE-2016-10531 (sca)",
                "description": "marked is an application that is meant to parse and compile markdown. Due to the way that marked parses input in versions 0.3.x before 0.3.6, specifically HTML entities, it&#39;s possible to bypass marked&#39;s content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `&amp;#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-1000427 (sca)",
              "name": "Cve20171000427",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser.",
                "markdown": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser."
              },
              "fullDescription": {
                "text": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20171000427",
                "id": "CVE-2017-1000427 (sca)",
                "description": "marked version 0.3.6 and earlier is vulnerable to an XSS attack in the data: URI parser.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-16026 (sca)",
              "name": "Cve201716026",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Request is an http client. If a request is made using ```multipart```, and the body type is a ```number```, then the specified number of non-zero memory is passed in the body. This affects Request &gt;=2.2.6 &lt;2.47.0 || &gt;=2.49.0 &lt;=2.67.0.",
                "markdown": "Request is an http client. If a request is made using ```multipart```, and the body type is a ```number```, then the specified number of non-zero memory is passed in the body. This affects Request &gt;=2.2.6 &lt;2.47.0 || &gt;=2.49.0 &lt;=2.67.0."
              },
              "fullDescription": {
                "text": "Request is an http client. If a request is made using ```multipart```, and the body type is a ```number```, then the specified number of non-zero memory is passed in the body. This affects Request &gt;=2.2.6 &lt;2.47.0 || &gt;=2.49.0 &lt;=2.67.0."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201716026",
                "id": "CVE-2017-16026 (sca)",
                "description": "Request is an http client. If a request is made using ```multipart```, and the body type is a ```number```, then the specified number of non-zero memory is passed in the body. This affects Request &gt;=2.2.6 &lt;2.47.0 || &gt;=2.49.0 &lt;=2.67.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-16028 (sca)",
              "name": "Cve201716028",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "react-native-meteor-oauth is a library for Oauth2 login to a Meteor server in React Native. In versions before 3.0.0 the oauth Random Token is generated using a non-cryptographically strong RNG (Math.random()).",
                "markdown": "react-native-meteor-oauth is a library for Oauth2 login to a Meteor server in React Native. In versions before 3.0.0 the oauth Random Token is generated using a non-cryptographically strong RNG (Math.random())."
              },
              "fullDescription": {
                "text": "react-native-meteor-oauth is a library for Oauth2 login to a Meteor server in React Native. In versions before 3.0.0 the oauth Random Token is generated using a non-cryptographically strong RNG (Math.random())."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201716028",
                "id": "CVE-2017-16028 (sca)",
                "description": "react-native-meteor-oauth is a library for Oauth2 login to a Meteor server in React Native. In versions before 3.0.0 the oauth Random Token is generated using a non-cryptographically strong RNG (Math.random()).",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-16137 (sca)",
              "name": "Cve201716137",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
                "markdown": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue."
              },
              "fullDescription": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201716137",
                "id": "CVE-2017-16137 (sca)",
                "description": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2017-20162 (sca)",
              "name": "Cve201720162",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in vercel ms prior to 2.0.0, which was classified as problematic. This issue affects the function &#34;parse&#34; of the file &#34;index.js&#34;. The manipulation of the argument &#34;str&#34; leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451.",
                "markdown": "A vulnerability was found in vercel ms prior to 2.0.0, which was classified as problematic. This issue affects the function &#34;parse&#34; of the file &#34;index.js&#34;. The manipulation of the argument &#34;str&#34; leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451."
              },
              "fullDescription": {
                "text": "A vulnerability was found in vercel ms prior to 2.0.0, which was classified as problematic. This issue affects the function &#34;parse&#34; of the file &#34;index.js&#34;. The manipulation of the argument &#34;str&#34; leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201720162",
                "id": "CVE-2017-20162 (sca)",
                "description": "A vulnerability was found in vercel ms prior to 2.0.0, which was classified as problematic. This issue affects the function &#34;parse&#34; of the file &#34;index.js&#34;. The manipulation of the argument &#34;str&#34; leads to inefficient regular expression complexity. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217451.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-1002204 (sca)",
              "name": "Cve20181002204",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "adm-zip npm library before 0.4.9 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as &#39;Zip-Slip&#39;.",
                "markdown": "adm-zip npm library before 0.4.9 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as &#39;Zip-Slip&#39;."
              },
              "fullDescription": {
                "text": "adm-zip npm library before 0.4.9 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as &#39;Zip-Slip&#39;."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20181002204",
                "id": "CVE-2018-1002204 (sca)",
                "description": "adm-zip npm library before 0.4.9 is vulnerable to directory traversal, allowing attackers to write to arbitrary files via a ../ (dot dot slash) in a Zip archive entry that is mishandled during extraction. This vulnerability is also known as &#39;Zip-Slip&#39;.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-1107 (sca)",
              "name": "Cve20181107",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "It was discovered that the is-my-json-valid JavaScript library used an inefficient regular expression to validate JSON fields defined to have email format. A specially crafted JSON file could cause it to consume an excessive amount of CPU time when validated.",
                "markdown": "It was discovered that the is-my-json-valid JavaScript library used an inefficient regular expression to validate JSON fields defined to have email format. A specially crafted JSON file could cause it to consume an excessive amount of CPU time when validated."
              },
              "fullDescription": {
                "text": "It was discovered that the is-my-json-valid JavaScript library used an inefficient regular expression to validate JSON fields defined to have email format. A specially crafted JSON file could cause it to consume an excessive amount of CPU time when validated."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20181107",
                "id": "CVE-2018-1107 (sca)",
                "description": "It was discovered that the is-my-json-valid JavaScript library used an inefficient regular expression to validate JSON fields defined to have email format. A specially crafted JSON file could cause it to consume an excessive amount of CPU time when validated.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-1109 (sca)",
              "name": "Cve20181109",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.",
                "markdown": "A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks."
              },
              "fullDescription": {
                "text": "A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20181109",
                "id": "CVE-2018-1109 (sca)",
                "description": "A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-16487 (sca)",
              "name": "Cve201816487",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A prototype pollution vulnerability was found in lodash where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",
                "markdown": "A prototype pollution vulnerability was found in lodash where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype."
              },
              "fullDescription": {
                "text": "A prototype pollution vulnerability was found in lodash where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201816487",
                "id": "CVE-2018-16487 (sca)",
                "description": "A prototype pollution vulnerability was found in lodash where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-21270 (sca)",
              "name": "Cve201821270",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x).",
                "markdown": "Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x)."
              },
              "fullDescription": {
                "text": "Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x)."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201821270",
                "id": "CVE-2018-21270 (sca)",
                "description": "Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x).",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-25110 (sca)",
              "name": "Cve201825110",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Marked prior to version 0.3.17 is vulnerable to a Regular Expression Denial of Service (ReDoS) attack due to catastrophic backtracking in several regular expressions used for parsing HTML tags and markdown links. An attacker can exploit this vulnerability by providing specially crafted markdown input, such as deeply nested or repetitively structured brackets or tag attributes, which cause the parser to hang and lead to a Denial of Service.",
                "markdown": "Marked prior to version 0.3.17 is vulnerable to a Regular Expression Denial of Service (ReDoS) attack due to catastrophic backtracking in several regular expressions used for parsing HTML tags and markdown links. An attacker can exploit this vulnerability by providing specially crafted markdown input, such as deeply nested or repetitively structured brackets or tag attributes, which cause the parser to hang and lead to a Denial of Service."
              },
              "fullDescription": {
                "text": "Marked prior to version 0.3.17 is vulnerable to a Regular Expression Denial of Service (ReDoS) attack due to catastrophic backtracking in several regular expressions used for parsing HTML tags and markdown links. An attacker can exploit this vulnerability by providing specially crafted markdown input, such as deeply nested or repetitively structured brackets or tag attributes, which cause the parser to hang and lead to a Denial of Service."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201825110",
                "id": "CVE-2018-25110 (sca)",
                "description": "Marked prior to version 0.3.17 is vulnerable to a Regular Expression Denial of Service (ReDoS) attack due to catastrophic backtracking in several regular expressions used for parsing HTML tags and markdown links. An attacker can exploit this vulnerability by providing specially crafted markdown input, such as deeply nested or repetitively structured brackets or tag attributes, which cause the parser to hang and lead to a Denial of Service.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2018-3721 (sca)",
              "name": "Cve20183721",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "lodash node module suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of &#34;Object&#34; via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
                "markdown": "lodash node module suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of &#34;Object&#34; via __proto__, causing the addition or modification of an existing property that will exist on all objects."
              },
              "fullDescription": {
                "text": "lodash node module suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of &#34;Object&#34; via __proto__, causing the addition or modification of an existing property that will exist on all objects."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20183721",
                "id": "CVE-2018-3721 (sca)",
                "description": "lodash node module suffers from a Modification of Assumed-Immutable Data (MAID) vulnerability via defaultsDeep, merge, and mergeWith functions, which allows a malicious user to modify the prototype of &#34;Object&#34; via __proto__, causing the addition or modification of an existing property that will exist on all objects.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-1010266 (sca)",
              "name": "Cve20191010266",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11.",
                "markdown": "lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11."
              },
              "fullDescription": {
                "text": "lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20191010266",
                "id": "CVE-2019-1010266 (sca)",
                "description": "lodash prior to 4.17.11 is affected by: CWE-400: Uncontrolled Resource Consumption. The impact is: Denial of service. The component is: Date handler. The attack vector is: Attacker provides very long strings, which the library attempts to match using a regular expression. The fixed version is: 4.17.11.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-10795 (sca)",
              "name": "Cve201910795",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The &#39;a&#39; function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",
                "markdown": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The &#39;a&#39; function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload."
              },
              "fullDescription": {
                "text": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The &#39;a&#39; function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201910795",
                "id": "CVE-2019-10795 (sca)",
                "description": "undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The &#39;a&#39; function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-16775 (sca)",
              "name": "Cve201916775",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user&#39;s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "markdown": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user&#39;s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option."
              },
              "fullDescription": {
                "text": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user&#39;s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201916775",
                "id": "CVE-2019-16775 (sca)",
                "description": "Versions of the npm CLI prior to 6.13.3 are vulnerable to an Arbitrary File Write. It is possible for packages to create symlinks to files outside of thenode_modules folder through the bin field upon installation. A properly constructed entry in the package.json bin field would allow a package publisher to create a symlink pointing to arbitrary files on a user&#39;s system when the package is installed. This behavior is still possible through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-16777 (sca)",
              "name": "Cve201916777",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a serve binary, any subsequent installs of packages that also create a serve binary would overwrite the previous serve binary. This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "markdown": "Versions of the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a serve binary, any subsequent installs of packages that also create a serve binary would overwrite the previous serve binary. This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option."
              },
              "fullDescription": {
                "text": "Versions of the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a serve binary, any subsequent installs of packages that also create a serve binary would overwrite the previous serve binary. This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve201916777",
                "id": "CVE-2019-16777 (sca)",
                "description": "Versions of the npm CLI prior to 6.13.4 are vulnerable to an Arbitrary File Overwrite. It fails to prevent existing globally-installed binaries to be overwritten by other package installations. For example, if a package was installed globally and created a serve binary, any subsequent installs of packages that also create a serve binary would overwrite the previous serve binary. This behavior is still allowed in local installations and also through install scripts. This vulnerability bypasses a user using the --ignore-scripts install option.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2019-2391 (sca)",
              "name": "Cve20192391",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure.",
                "markdown": "Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure."
              },
              "fullDescription": {
                "text": "Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20192391",
                "id": "CVE-2019-2391 (sca)",
                "description": "Incorrect parsing of certain JSON input may result in js-bson not correctly serializing BSON. This may cause unexpected application behaviour including data disclosure.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-15095 (sca)",
              "name": "Cve202015095",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like &#34;&lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;&#34;. The password value is not redacted and is printed to stdout and also to any generated log files.",
                "markdown": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like &#34;&lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;&#34;. The password value is not redacted and is printed to stdout and also to any generated log files."
              },
              "fullDescription": {
                "text": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like &#34;&lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;&#34;. The password value is not redacted and is printed to stdout and also to any generated log files."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202015095",
                "id": "CVE-2020-15095 (sca)",
                "description": "Versions of the npm CLI prior to 6.14.6 are vulnerable to an information exposure vulnerability through log files. The CLI supports URLs like &#34;&lt;protocol&gt;://[&lt;user&gt;[:&lt;password&gt;]@]&lt;hostname&gt;[:&lt;port&gt;][:][/]&lt;path&gt;&#34;. The password value is not redacted and is printed to stdout and also to any generated log files.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-15366 (sca)",
              "name": "Cve202015366",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
                "markdown": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)"
              },
              "fullDescription": {
                "text": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)"
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202015366",
                "id": "CVE-2020-15366 (sca)",
                "description": "An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-28500 (sca)",
              "name": "Cve202028500",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Lodash prior to 4.17.21 is vulnerable to Regular Expression Denial of Service (ReDoS) via the &#34;toNumber&#34;, &#34;trim&#34; and &#34;trimEnd&#34; functions.",
                "markdown": "Lodash prior to 4.17.21 is vulnerable to Regular Expression Denial of Service (ReDoS) via the &#34;toNumber&#34;, &#34;trim&#34; and &#34;trimEnd&#34; functions."
              },
              "fullDescription": {
                "text": "Lodash prior to 4.17.21 is vulnerable to Regular Expression Denial of Service (ReDoS) via the &#34;toNumber&#34;, &#34;trim&#34; and &#34;trimEnd&#34; functions."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202028500",
                "id": "CVE-2020-28500 (sca)",
                "description": "Lodash prior to 4.17.21 is vulnerable to Regular Expression Denial of Service (ReDoS) via the &#34;toNumber&#34;, &#34;trim&#34; and &#34;trimEnd&#34; functions.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-7598 (sca)",
              "name": "Cve20207598",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Affected versions of minimist are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of Object, causing the addition or modification of an existing property that will exist on all objects.\nParsing the argument --__proto__.y=Polluted adds a y property with value Polluted to all objects. The argument --__proto__=Polluted raises an uncaught error and crashes the application.\nThis is exploitable if attackers have control over the arguments being passed to minimist.",
                "markdown": "Affected versions of minimist are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of Object, causing the addition or modification of an existing property that will exist on all objects.\nParsing the argument --__proto__.y=Polluted adds a y property with value Polluted to all objects. The argument --__proto__=Polluted raises an uncaught error and crashes the application.\nThis is exploitable if attackers have control over the arguments being passed to minimist."
              },
              "fullDescription": {
                "text": "Affected versions of minimist are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of Object, causing the addition or modification of an existing property that will exist on all objects.\nParsing the argument --__proto__.y=Polluted adds a y property with value Polluted to all objects. The argument --__proto__=Polluted raises an uncaught error and crashes the application.\nThis is exploitable if attackers have control over the arguments being passed to minimist."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20207598",
                "id": "CVE-2020-7598 (sca)",
                "description": "Affected versions of minimist are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of Object, causing the addition or modification of an existing property that will exist on all objects.\nParsing the argument --__proto__.y=Polluted adds a y property with value Polluted to all objects. The argument --__proto__=Polluted raises an uncaught error and crashes the application.\nThis is exploitable if attackers have control over the arguments being passed to minimist.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-7608 (sca)",
              "name": "Cve20207608",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "yargs-parser could be tricked into adding or modifying properties of Object.prototype using a &#34;__proto__&#34; payload.",
                "markdown": "yargs-parser could be tricked into adding or modifying properties of Object.prototype using a &#34;__proto__&#34; payload."
              },
              "fullDescription": {
                "text": "yargs-parser could be tricked into adding or modifying properties of Object.prototype using a &#34;__proto__&#34; payload."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20207608",
                "id": "CVE-2020-7608 (sca)",
                "description": "yargs-parser could be tricked into adding or modifying properties of Object.prototype using a &#34;__proto__&#34; payload.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2020-8244 (sca)",
              "name": "Cve20208244",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A buffer over-read vulnerability exists in bl versions through 1.2.2, 2.0.0 through 2.2.0, 3.0.0, 4.0.0 through 4.0.2 which could allow an attacker to supply user input (even typed) that if it ends up in &#34;consume()&#34; argument and can become negative, the &#34;BufferList&#34; state can be corrupted, tricking it into exposing uninitialized memory via regular &#34;.slice()&#34; calls.",
                "markdown": "A buffer over-read vulnerability exists in bl versions through 1.2.2, 2.0.0 through 2.2.0, 3.0.0, 4.0.0 through 4.0.2 which could allow an attacker to supply user input (even typed) that if it ends up in &#34;consume()&#34; argument and can become negative, the &#34;BufferList&#34; state can be corrupted, tricking it into exposing uninitialized memory via regular &#34;.slice()&#34; calls."
              },
              "fullDescription": {
                "text": "A buffer over-read vulnerability exists in bl versions through 1.2.2, 2.0.0 through 2.2.0, 3.0.0, 4.0.0 through 4.0.2 which could allow an attacker to supply user input (even typed) that if it ends up in &#34;consume()&#34; argument and can become negative, the &#34;BufferList&#34; state can be corrupted, tricking it into exposing uninitialized memory via regular &#34;.slice()&#34; calls."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20208244",
                "id": "CVE-2020-8244 (sca)",
                "description": "A buffer over-read vulnerability exists in bl versions through 1.2.2, 2.0.0 through 2.2.0, 3.0.0, 4.0.0 through 4.0.2 which could allow an attacker to supply user input (even typed) that if it ends up in &#34;consume()&#34; argument and can become negative, the &#34;BufferList&#34; state can be corrupted, tricking it into exposing uninitialized memory via regular &#34;.slice()&#34; calls.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2021-23362 (sca)",
              "name": "Cve202123362",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Hosted-git-info versions prior to 2.8.9, and 3.0.x prior to 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.",
                "markdown": "Hosted-git-info versions prior to 2.8.9, and 3.0.x prior to 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity."
              },
              "fullDescription": {
                "text": "Hosted-git-info versions prior to 2.8.9, and 3.0.x prior to 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202123362",
                "id": "CVE-2021-23362 (sca)",
                "description": "Hosted-git-info versions prior to 2.8.9, and 3.0.x prior to 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-0436 (sca)",
              "name": "Cve20220436",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Path Traversal in GitHub repository gruntjs/grunt prior to 1.5.2.",
                "markdown": "Path Traversal in GitHub repository gruntjs/grunt prior to 1.5.2."
              },
              "fullDescription": {
                "text": "Path Traversal in GitHub repository gruntjs/grunt prior to 1.5.2."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20220436",
                "id": "CVE-2022-0436 (sca)",
                "description": "Path Traversal in GitHub repository gruntjs/grunt prior to 1.5.2.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-2097 (containers)",
              "name": "Cve20222097",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package OpenSSL 3.0.0 through 3.0.4, and 1.1.1 through 1.1.1p is vulnerable to missing encryption of sensitive data. AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimized implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn&#39;t written. In the special case of &#34;in place&#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected.",
                "markdown": "The package OpenSSL 3.0.0 through 3.0.4, and 1.1.1 through 1.1.1p is vulnerable to missing encryption of sensitive data. AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimized implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn&#39;t written. In the special case of &#34;in place&#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected."
              },
              "fullDescription": {
                "text": "The package OpenSSL 3.0.0 through 3.0.4, and 1.1.1 through 1.1.1p is vulnerable to missing encryption of sensitive data. AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimized implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn&#39;t written. In the special case of &#34;in place&#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20222097",
                "id": "CVE-2022-2097 (containers)",
                "description": "The package OpenSSL 3.0.0 through 3.0.4, and 1.1.1 through 1.1.1p is vulnerable to missing encryption of sensitive data. AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimized implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn&#39;t written. In the special case of &#34;in place&#34; encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2022-33987 (containers)",
              "name": "Cve202233987",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The got package before 11.8.5, and 12.x before 12.1.0 for Node.js allows a redirect to a UNIX socket.",
                "markdown": "The got package before 11.8.5, and 12.x before 12.1.0 for Node.js allows a redirect to a UNIX socket."
              },
              "fullDescription": {
                "text": "The got package before 11.8.5, and 12.x before 12.1.0 for Node.js allows a redirect to a UNIX socket."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202233987",
                "id": "CVE-2022-33987 (containers)",
                "description": "The got package before 11.8.5, and 12.x before 12.1.0 for Node.js allows a redirect to a UNIX socket.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2022-33987 (sca)",
              "name": "Cve202233987",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The got package before 11.8.5, and 12.x before 12.1.0 for Node.js allows a redirect to a UNIX socket.",
                "markdown": "The got package before 11.8.5, and 12.x before 12.1.0 for Node.js allows a redirect to a UNIX socket."
              },
              "fullDescription": {
                "text": "The got package before 11.8.5, and 12.x before 12.1.0 for Node.js allows a redirect to a UNIX socket."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202233987",
                "id": "CVE-2022-33987 (sca)",
                "description": "The got package before 11.8.5, and 12.x before 12.1.0 for Node.js allows a redirect to a UNIX socket.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2022-4304 (containers)",
              "name": "Cve20224304",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A timing-based side channel exists in the OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7. RSA Decryption implementation which could be sufficient to recover plaintext across a network in a Bleichenbacher-style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP, and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages, the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
                "markdown": "A timing-based side channel exists in the OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7. RSA Decryption implementation which could be sufficient to recover plaintext across a network in a Bleichenbacher-style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP, and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages, the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection."
              },
              "fullDescription": {
                "text": "A timing-based side channel exists in the OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7. RSA Decryption implementation which could be sufficient to recover plaintext across a network in a Bleichenbacher-style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP, and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages, the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20224304",
                "id": "CVE-2022-4304 (containers)",
                "description": "A timing-based side channel exists in the OpenSSL versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1s, and 3.0.0-alpha1 through 3.0.7. RSA Decryption implementation which could be sufficient to recover plaintext across a network in a Bleichenbacher-style attack. To achieve a successful decryption an attacker would have to be able to send a very large number of trial messages for decryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5, RSA-OEAP, and RSASVE. For example, in a TLS connection, RSA is commonly used by a client to send an encrypted pre-master secret to the server. An attacker that had observed a genuine connection between a client and a server could use this flaw to send trial messages to the server and record the time taken to process them. After a sufficiently large number of messages, the attacker could recover the pre-master secret used for the original connection and thus be able to decrypt the application data sent over that connection.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-0465 (containers)",
              "name": "Cve20230465",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks. Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether. Policy processing is disabled by default but can be enabled by passing the &#34;-policy&#34; argument to the command line utilities or by calling the &#34;X509_VERIFY_PARAM_set1_policies()&#34; function. This issue affects openssl versions 1.0.2x prior to 1.0.2zh, 1.1.1x prior to 1.1.1u, 3.0.0x prior to 3.0.9, and 3.1.0x prior to 3.1.1.",
                "markdown": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks. Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether. Policy processing is disabled by default but can be enabled by passing the &#34;-policy&#34; argument to the command line utilities or by calling the &#34;X509_VERIFY_PARAM_set1_policies()&#34; function. This issue affects openssl versions 1.0.2x prior to 1.0.2zh, 1.1.1x prior to 1.1.1u, 3.0.0x prior to 3.0.9, and 3.1.0x prior to 3.1.1."
              },
              "fullDescription": {
                "text": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks. Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether. Policy processing is disabled by default but can be enabled by passing the &#34;-policy&#34; argument to the command line utilities or by calling the &#34;X509_VERIFY_PARAM_set1_policies()&#34; function. This issue affects openssl versions 1.0.2x prior to 1.0.2zh, 1.1.1x prior to 1.1.1u, 3.0.0x prior to 3.0.9, and 3.1.0x prior to 3.1.1."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20230465",
                "id": "CVE-2023-0465 (containers)",
                "description": "Applications that use a non-default option when verifying certificates may be vulnerable to an attack from a malicious CA to circumvent certain checks. Invalid certificate policies in leaf certificates are silently ignored by OpenSSL and other certificate policy checks are skipped for that certificate. A malicious CA could use this to deliberately assert invalid certificate policies in order to circumvent policy checking on the certificate altogether. Policy processing is disabled by default but can be enabled by passing the &#34;-policy&#34; argument to the command line utilities or by calling the &#34;X509_VERIFY_PARAM_set1_policies()&#34; function. This issue affects openssl versions 1.0.2x prior to 1.0.2zh, 1.1.1x prior to 1.1.1u, 3.0.0x prior to 3.0.9, and 3.1.0x prior to 3.1.1.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-0842 (sca)",
              "name": "Cve20230842",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The xml2js in versions prior to 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the &#34;__proto__&#34; property to be edited.",
                "markdown": "The xml2js in versions prior to 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the &#34;__proto__&#34; property to be edited."
              },
              "fullDescription": {
                "text": "The xml2js in versions prior to 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the &#34;__proto__&#34; property to be edited."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20230842",
                "id": "CVE-2023-0842 (sca)",
                "description": "The xml2js in versions prior to 0.5.0 allows an external attacker to edit or add new properties to an object. This is possible because the application does not properly validate incoming JSON keys, thus allowing the &#34;__proto__&#34; property to be edited.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2023-2650 (containers)",
              "name": "Cve20232650",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow. Applications that use &#34;OBJ_obj2txt()&#34; directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service. An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit. &#34;OBJ_obj2txt()&#34; may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods. When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in the text may take a very long time. The time complexity is O(n^2) with &#39;n&#39; being the size of the sub-identifiers in bytes (*). With OpenSSL 3.0, support to fetch cryptographic algorithms using names/identifiers in a string form was introduced. This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms. Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data. Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL. If the use is for the mere purpose of display, the severity is considered low. In OpenSSL versions 3.0.0 through 3.0.8 and 3.1.0 through 3.1.0-beta1, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF, or TS. It also impacts anything that processes X.509 certificates, including simple things like verifying its signature. The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer&#39;s certificate chain. Additionally, this only impacts clients, or servers that have explicitly enabled client authentication. In OpenSSL versions 1.0.2 through 1.0.2u and 1.1.1 through 1.1.1t, only affects displaying diverse objects, such as X.509 certificates. This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low.",
                "markdown": "Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow. Applications that use &#34;OBJ_obj2txt()&#34; directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service. An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit. &#34;OBJ_obj2txt()&#34; may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods. When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in the text may take a very long time. The time complexity is O(n^2) with &#39;n&#39; being the size of the sub-identifiers in bytes (*). With OpenSSL 3.0, support to fetch cryptographic algorithms using names/identifiers in a string form was introduced. This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms. Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data. Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL. If the use is for the mere purpose of display, the severity is considered low. In OpenSSL versions 3.0.0 through 3.0.8 and 3.1.0 through 3.1.0-beta1, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF, or TS. It also impacts anything that processes X.509 certificates, including simple things like verifying its signature. The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer&#39;s certificate chain. Additionally, this only impacts clients, or servers that have explicitly enabled client authentication. In OpenSSL versions 1.0.2 through 1.0.2u and 1.1.1 through 1.1.1t, only affects displaying diverse objects, such as X.509 certificates. This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low."
              },
              "fullDescription": {
                "text": "Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow. Applications that use &#34;OBJ_obj2txt()&#34; directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service. An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit. &#34;OBJ_obj2txt()&#34; may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods. When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in the text may take a very long time. The time complexity is O(n^2) with &#39;n&#39; being the size of the sub-identifiers in bytes (*). With OpenSSL 3.0, support to fetch cryptographic algorithms using names/identifiers in a string form was introduced. This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms. Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data. Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL. If the use is for the mere purpose of display, the severity is considered low. In OpenSSL versions 3.0.0 through 3.0.8 and 3.1.0 through 3.1.0-beta1, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF, or TS. It also impacts anything that processes X.509 certificates, including simple things like verifying its signature. The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer&#39;s certificate chain. Additionally, this only impacts clients, or servers that have explicitly enabled client authentication. In OpenSSL versions 1.0.2 through 1.0.2u and 1.1.1 through 1.1.1t, only affects displaying diverse objects, such as X.509 certificates. This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20232650",
                "id": "CVE-2023-2650 (containers)",
                "description": "Processing some specially crafted ASN.1 object identifiers or data containing them may be very slow. Applications that use &#34;OBJ_obj2txt()&#34; directly, or use any of the OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message size limit may experience notable to very long delays when processing those messages, which may lead to a Denial of Service. An OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers - most of which have no size limit. &#34;OBJ_obj2txt()&#34; may be used to translate an ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL type ASN1_OBJECT) to its canonical numeric text form, which are the sub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by periods. When one of the sub-identifiers in the OBJECT IDENTIFIER is very large (these are sizes that are seen as absurdly large, taking up tens or hundreds of KiBs), the translation to a decimal number in the text may take a very long time. The time complexity is O(n^2) with &#39;n&#39; being the size of the sub-identifiers in bytes (*). With OpenSSL 3.0, support to fetch cryptographic algorithms using names/identifiers in a string form was introduced. This includes using OBJECT IDENTIFIERs in canonical numeric text form as identifiers for fetching algorithms. Such OBJECT IDENTIFIERs may be received through the ASN.1 structure AlgorithmIdentifier, which is commonly used in multiple protocols to specify what cryptographic algorithm should be used to sign or verify, encrypt or decrypt, or digest passed data. Applications that call OBJ_obj2txt() directly with untrusted data are affected, with any version of OpenSSL. If the use is for the mere purpose of display, the severity is considered low. In OpenSSL versions 3.0.0 through 3.0.8 and 3.1.0 through 3.1.0-beta1, this affects the subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF, or TS. It also impacts anything that processes X.509 certificates, including simple things like verifying its signature. The impact on TLS is relatively low, because all versions of OpenSSL have a 100KiB limit on the peer&#39;s certificate chain. Additionally, this only impacts clients, or servers that have explicitly enabled client authentication. In OpenSSL versions 1.0.2 through 1.0.2u and 1.1.1 through 1.1.1t, only affects displaying diverse objects, such as X.509 certificates. This is assumed to not happen in such a way that it would cause a Denial of Service, so these versions are considered not affected by this issue in such a way that it would be cause for concern, and the severity is therefore considered low.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-28155 (sca)",
              "name": "Cve202328155",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The request package through 2.88.2 for Node.js and the @cypress/request package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: The request package is no longer supported by the maintainer.",
                "markdown": "The request package through 2.88.2 for Node.js and the @cypress/request package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: The request package is no longer supported by the maintainer."
              },
              "fullDescription": {
                "text": "The request package through 2.88.2 for Node.js and the @cypress/request package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: The request package is no longer supported by the maintainer."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202328155",
                "id": "CVE-2023-28155 (sca)",
                "description": "The request package through 2.88.2 for Node.js and the @cypress/request package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: The request package is no longer supported by the maintainer.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2023-28155 (containers)",
              "name": "Cve202328155",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The request package through 2.88.2 for Node.js and the @cypress/request package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: The request package is no longer supported by the maintainer.",
                "markdown": "The request package through 2.88.2 for Node.js and the @cypress/request package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: The request package is no longer supported by the maintainer."
              },
              "fullDescription": {
                "text": "The request package through 2.88.2 for Node.js and the @cypress/request package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: The request package is no longer supported by the maintainer."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202328155",
                "id": "CVE-2023-28155 (containers)",
                "description": "The request package through 2.88.2 for Node.js and the @cypress/request package prior to 3.0.0 allow a bypass of SSRF mitigations via an attacker-controller server that does a cross-protocol redirect (HTTP to HTTPS, or HTTPS to HTTP). NOTE: The request package is no longer supported by the maintainer.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-3446 (containers)",
              "name": "Cve20233446",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Checking excessively long DH keys or parameters may be very slow. Applications that use the functions &#34;DH_check()&#34;, &#34;DH_check_ex()&#34; or &#34;EVP_PKEY_param_check()&#34; to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function &#34;DH_check()&#34; performs various checks on DH parameters. One of those checks confirms that the modulus (&#39;p&#39; parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length. However the &#34;DH_check()&#34; function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large. An application that calls &#34;DH_check()&#34; and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function &#34;DH_check()&#34; is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are &#34;DH_check_ex()&#34; and &#34;EVP_PKEY_param_check()&#34;. It is also vulnerable to the OpenSSL &#34;dhparam&#34; and &#34;pkeyparam&#34; command line applications when using the &#39;-check&#39; option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects openssl versions 1.0.2 through 1.0.2u, 1.1.1 through 1.1.1u, 3.0.0-alpha1 through 3.0.9, and 3.1.0-alpha1 through 3.1.1.",
                "markdown": "Checking excessively long DH keys or parameters may be very slow. Applications that use the functions &#34;DH_check()&#34;, &#34;DH_check_ex()&#34; or &#34;EVP_PKEY_param_check()&#34; to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function &#34;DH_check()&#34; performs various checks on DH parameters. One of those checks confirms that the modulus (&#39;p&#39; parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length. However the &#34;DH_check()&#34; function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large. An application that calls &#34;DH_check()&#34; and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function &#34;DH_check()&#34; is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are &#34;DH_check_ex()&#34; and &#34;EVP_PKEY_param_check()&#34;. It is also vulnerable to the OpenSSL &#34;dhparam&#34; and &#34;pkeyparam&#34; command line applications when using the &#39;-check&#39; option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects openssl versions 1.0.2 through 1.0.2u, 1.1.1 through 1.1.1u, 3.0.0-alpha1 through 3.0.9, and 3.1.0-alpha1 through 3.1.1."
              },
              "fullDescription": {
                "text": "Checking excessively long DH keys or parameters may be very slow. Applications that use the functions &#34;DH_check()&#34;, &#34;DH_check_ex()&#34; or &#34;EVP_PKEY_param_check()&#34; to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function &#34;DH_check()&#34; performs various checks on DH parameters. One of those checks confirms that the modulus (&#39;p&#39; parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length. However the &#34;DH_check()&#34; function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large. An application that calls &#34;DH_check()&#34; and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function &#34;DH_check()&#34; is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are &#34;DH_check_ex()&#34; and &#34;EVP_PKEY_param_check()&#34;. It is also vulnerable to the OpenSSL &#34;dhparam&#34; and &#34;pkeyparam&#34; command line applications when using the &#39;-check&#39; option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects openssl versions 1.0.2 through 1.0.2u, 1.1.1 through 1.1.1u, 3.0.0-alpha1 through 3.0.9, and 3.1.0-alpha1 through 3.1.1."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20233446",
                "id": "CVE-2023-3446 (containers)",
                "description": "Checking excessively long DH keys or parameters may be very slow. Applications that use the functions &#34;DH_check()&#34;, &#34;DH_check_ex()&#34; or &#34;EVP_PKEY_param_check()&#34; to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function &#34;DH_check()&#34; performs various checks on DH parameters. One of those checks confirms that the modulus (&#39;p&#39; parameter) is not too large. Trying to use a very large modulus is slow and OpenSSL will not normally use a modulus which is over 10,000 bits in length. However the &#34;DH_check()&#34; function checks numerous aspects of the key or parameters that have been supplied. Some of those checks use the supplied modulus value even if it has already been found to be too large. An application that calls &#34;DH_check()&#34; and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. The function &#34;DH_check()&#34; is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are &#34;DH_check_ex()&#34; and &#34;EVP_PKEY_param_check()&#34;. It is also vulnerable to the OpenSSL &#34;dhparam&#34; and &#34;pkeyparam&#34; command line applications when using the &#39;-check&#39; option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects openssl versions 1.0.2 through 1.0.2u, 1.1.1 through 1.1.1u, 3.0.0-alpha1 through 3.0.9, and 3.1.0-alpha1 through 3.1.1.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-3817 (containers)",
              "name": "Cve20233817",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Checking excessively long DH keys or parameters may be very slow. Applications that use the functions &#34;DH_check()&#34;, &#34;DH_check_ex()&#34;or &#34;EVP_PKEY_param_check()&#34; to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function &#34;DH_check()&#34; performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large &#34;q&#34; parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus &#34;p&#34; parameter, thus it is unnecessary to perform these checks if q is larger than p. An application that calls &#34;DH_check()&#34; and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.The function &#34;DH_check()&#34; is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected.\nThe other functions affected by this are &#34;DH_check_ex()&#34; and &#34;EVP_PKEY_param_check()&#34;. It is also vulnerable to the OpenSSL &#34;dhparam&#34; and &#34;pkeyparam&#34; command line applications when using the &#39;-check&#39; option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1u, 3.0.0-alpha1 through 3.0.9, and 3.1.0-alpha1 through 3.1.1.",
                "markdown": "Checking excessively long DH keys or parameters may be very slow. Applications that use the functions &#34;DH_check()&#34;, &#34;DH_check_ex()&#34;or &#34;EVP_PKEY_param_check()&#34; to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function &#34;DH_check()&#34; performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large &#34;q&#34; parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus &#34;p&#34; parameter, thus it is unnecessary to perform these checks if q is larger than p. An application that calls &#34;DH_check()&#34; and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.The function &#34;DH_check()&#34; is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected.\nThe other functions affected by this are &#34;DH_check_ex()&#34; and &#34;EVP_PKEY_param_check()&#34;. It is also vulnerable to the OpenSSL &#34;dhparam&#34; and &#34;pkeyparam&#34; command line applications when using the &#39;-check&#39; option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1u, 3.0.0-alpha1 through 3.0.9, and 3.1.0-alpha1 through 3.1.1."
              },
              "fullDescription": {
                "text": "Checking excessively long DH keys or parameters may be very slow. Applications that use the functions &#34;DH_check()&#34;, &#34;DH_check_ex()&#34;or &#34;EVP_PKEY_param_check()&#34; to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function &#34;DH_check()&#34; performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large &#34;q&#34; parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus &#34;p&#34; parameter, thus it is unnecessary to perform these checks if q is larger than p. An application that calls &#34;DH_check()&#34; and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.The function &#34;DH_check()&#34; is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected.\nThe other functions affected by this are &#34;DH_check_ex()&#34; and &#34;EVP_PKEY_param_check()&#34;. It is also vulnerable to the OpenSSL &#34;dhparam&#34; and &#34;pkeyparam&#34; command line applications when using the &#39;-check&#39; option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1u, 3.0.0-alpha1 through 3.0.9, and 3.1.0-alpha1 through 3.1.1."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20233817",
                "id": "CVE-2023-3817 (containers)",
                "description": "Checking excessively long DH keys or parameters may be very slow. Applications that use the functions &#34;DH_check()&#34;, &#34;DH_check_ex()&#34;or &#34;EVP_PKEY_param_check()&#34; to check a DH key or DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. The function &#34;DH_check()&#34; performs various checks on DH parameters. After fixing CVE-2023-3446 it was discovered that a large &#34;q&#34; parameter value can also trigger an overly long computation during some of these checks. A correct q value, if present, cannot be larger than the modulus &#34;p&#34; parameter, thus it is unnecessary to perform these checks if q is larger than p. An application that calls &#34;DH_check()&#34; and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.The function &#34;DH_check()&#34; is itself called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected.\nThe other functions affected by this are &#34;DH_check_ex()&#34; and &#34;EVP_PKEY_param_check()&#34;. It is also vulnerable to the OpenSSL &#34;dhparam&#34; and &#34;pkeyparam&#34; command line applications when using the &#39;-check&#39; option. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects openssl versions 1.0.2-beta1 through 1.0.2u, 1.1.1-pre1 through 1.1.1u, 3.0.0-alpha1 through 3.0.9, and 3.1.0-alpha1 through 3.1.1.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-4039 (containers)",
              "name": "Cve20234039",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "markdown": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself."
              },
              "fullDescription": {
                "text": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20234039",
                "id": "CVE-2023-4039 (containers)",
                "description": "**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains \nthat target AArch64 allows an attacker to exploit an existing buffer \noverflow in dynamically-sized local variables in your application \nwithout this being detected. This stack-protector failure only applies \nto C99-style dynamically-sized local variables or those created using \nalloca(). The stack-protector operates as intended for statically-sized \nlocal variables.\n\nThe default behavior when the stack-protector \ndetects an overflow is to terminate your application, resulting in \ncontrolled loss of availability. An attacker who can exploit a buffer \noverflow without triggering the stack-protector might be able to change \nprogram flow control to cause an uncontrolled loss of availability or to\n go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-48795 (containers)",
              "name": "Cve202348795",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles the use of sequence numbers. For example, there is an effective attack against SSH&#39;s use of &#34;ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC)&#34;. The bypass occurs in &#34;chacha20-poly1305@openssh.com&#34; and (if CBC is used) the &#34;-etm@openssh.com&#34; MAC algorithms. This vulnerability affects Go-github.com/golang/crypto package versions prior to 0.17.0, Python-paramiko package versions prior to 3.4.0 and Python-asyncssh package versions prior to 2.14.2, CPP-libssh2 package all verisons, CPP-libssh package versions prior to 0.9.8, and 0.10.x verison prior to 0.10.6, NPM-ssh2 package verisons 1.15.0, Maven-com.github.mwiede:jsch package verisons prior to 0.2.15, Php-phpseclib/phpseclib package version prior to 1.0.22 , 2.0.x prior to 2.0.46 , 3.0.x prior to 3.0.35.",
                "markdown": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles the use of sequence numbers. For example, there is an effective attack against SSH&#39;s use of &#34;ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC)&#34;. The bypass occurs in &#34;chacha20-poly1305@openssh.com&#34; and (if CBC is used) the &#34;-etm@openssh.com&#34; MAC algorithms. This vulnerability affects Go-github.com/golang/crypto package versions prior to 0.17.0, Python-paramiko package versions prior to 3.4.0 and Python-asyncssh package versions prior to 2.14.2, CPP-libssh2 package all verisons, CPP-libssh package versions prior to 0.9.8, and 0.10.x verison prior to 0.10.6, NPM-ssh2 package verisons 1.15.0, Maven-com.github.mwiede:jsch package verisons prior to 0.2.15, Php-phpseclib/phpseclib package version prior to 1.0.22 , 2.0.x prior to 2.0.46 , 3.0.x prior to 3.0.35."
              },
              "fullDescription": {
                "text": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles the use of sequence numbers. For example, there is an effective attack against SSH&#39;s use of &#34;ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC)&#34;. The bypass occurs in &#34;chacha20-poly1305@openssh.com&#34; and (if CBC is used) the &#34;-etm@openssh.com&#34; MAC algorithms. This vulnerability affects Go-github.com/golang/crypto package versions prior to 0.17.0, Python-paramiko package versions prior to 3.4.0 and Python-asyncssh package versions prior to 2.14.2, CPP-libssh2 package all verisons, CPP-libssh package versions prior to 0.9.8, and 0.10.x verison prior to 0.10.6, NPM-ssh2 package verisons 1.15.0, Maven-com.github.mwiede:jsch package verisons prior to 0.2.15, Php-phpseclib/phpseclib package version prior to 1.0.22 , 2.0.x prior to 2.0.46 , 3.0.x prior to 3.0.35."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202348795",
                "id": "CVE-2023-48795 (containers)",
                "description": "The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles the use of sequence numbers. For example, there is an effective attack against SSH&#39;s use of &#34;ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC)&#34;. The bypass occurs in &#34;chacha20-poly1305@openssh.com&#34; and (if CBC is used) the &#34;-etm@openssh.com&#34; MAC algorithms. This vulnerability affects Go-github.com/golang/crypto package versions prior to 0.17.0, Python-paramiko package versions prior to 3.4.0 and Python-asyncssh package versions prior to 2.14.2, CPP-libssh2 package all verisons, CPP-libssh package versions prior to 0.9.8, and 0.10.x verison prior to 0.10.6, NPM-ssh2 package verisons 1.15.0, Maven-com.github.mwiede:jsch package verisons prior to 0.2.15, Php-phpseclib/phpseclib package version prior to 1.0.22 , 2.0.x prior to 2.0.46 , 3.0.x prior to 3.0.35.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2023-5678 (containers)",
              "name": "Cve20235678",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow. Applications that use the functions &#34;DH_generate_key()&#34; to generate an X9.42 DH key may experience long delays. Likewise, applications that use &#34;DH_check_pub_key()&#34;, &#34;DH_check_pub_key_ex()&#34; or &#34;EVP_PKEY_public_check()&#34; to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. While &#34;DH_check()&#34; performs all the necessary checks (as of CVE-2023-3817), &#34;DH_check_pub_key()&#34; doesn&#39;t make any of these checks, and is therefore vulnerable for excessively large P and Q parameters. Likewise, while &#34;DH_generate_key()&#34; performs a check for an excessively large P, it doesn&#39;t check for an excessively large Q. An application that calls &#34;DH_generate_key()&#34; or &#34;DH_check_pub_key()&#34; and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. &#34;DH_generate_key()&#34; and &#34;DH_check_pub_key()&#34; are also called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are &#34;DH_check_pub_key_ex()&#34;, &#34;EVP_PKEY_public_check()&#34;, and &#34;EVP_PKEY_generate()&#34;. Also vulnerable are the OpenSSL pkey command line application when using the &#34;-pubcheck&#34; option, as well as the OpenSSL genpkey command line application. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects the openssl versions 1.0.2 through 1.0.2u, 1.1.1 through 1.1.1w, 3.0.0-alpha1 through 3.0.12, 3.1.0-alpha1 through 3.1.4, and openssl-3.2.0-alpha1 through openssl-3.2.0-beta1.",
                "markdown": "Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow. Applications that use the functions &#34;DH_generate_key()&#34; to generate an X9.42 DH key may experience long delays. Likewise, applications that use &#34;DH_check_pub_key()&#34;, &#34;DH_check_pub_key_ex()&#34; or &#34;EVP_PKEY_public_check()&#34; to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. While &#34;DH_check()&#34; performs all the necessary checks (as of CVE-2023-3817), &#34;DH_check_pub_key()&#34; doesn&#39;t make any of these checks, and is therefore vulnerable for excessively large P and Q parameters. Likewise, while &#34;DH_generate_key()&#34; performs a check for an excessively large P, it doesn&#39;t check for an excessively large Q. An application that calls &#34;DH_generate_key()&#34; or &#34;DH_check_pub_key()&#34; and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. &#34;DH_generate_key()&#34; and &#34;DH_check_pub_key()&#34; are also called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are &#34;DH_check_pub_key_ex()&#34;, &#34;EVP_PKEY_public_check()&#34;, and &#34;EVP_PKEY_generate()&#34;. Also vulnerable are the OpenSSL pkey command line application when using the &#34;-pubcheck&#34; option, as well as the OpenSSL genpkey command line application. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects the openssl versions 1.0.2 through 1.0.2u, 1.1.1 through 1.1.1w, 3.0.0-alpha1 through 3.0.12, 3.1.0-alpha1 through 3.1.4, and openssl-3.2.0-alpha1 through openssl-3.2.0-beta1."
              },
              "fullDescription": {
                "text": "Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow. Applications that use the functions &#34;DH_generate_key()&#34; to generate an X9.42 DH key may experience long delays. Likewise, applications that use &#34;DH_check_pub_key()&#34;, &#34;DH_check_pub_key_ex()&#34; or &#34;EVP_PKEY_public_check()&#34; to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. While &#34;DH_check()&#34; performs all the necessary checks (as of CVE-2023-3817), &#34;DH_check_pub_key()&#34; doesn&#39;t make any of these checks, and is therefore vulnerable for excessively large P and Q parameters. Likewise, while &#34;DH_generate_key()&#34; performs a check for an excessively large P, it doesn&#39;t check for an excessively large Q. An application that calls &#34;DH_generate_key()&#34; or &#34;DH_check_pub_key()&#34; and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. &#34;DH_generate_key()&#34; and &#34;DH_check_pub_key()&#34; are also called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are &#34;DH_check_pub_key_ex()&#34;, &#34;EVP_PKEY_public_check()&#34;, and &#34;EVP_PKEY_generate()&#34;. Also vulnerable are the OpenSSL pkey command line application when using the &#34;-pubcheck&#34; option, as well as the OpenSSL genpkey command line application. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects the openssl versions 1.0.2 through 1.0.2u, 1.1.1 through 1.1.1w, 3.0.0-alpha1 through 3.0.12, 3.1.0-alpha1 through 3.1.4, and openssl-3.2.0-alpha1 through openssl-3.2.0-beta1."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20235678",
                "id": "CVE-2023-5678 (containers)",
                "description": "Generating excessively long X9.42 DH keys or checking excessively long X9.42 DH keys or parameters may be very slow. Applications that use the functions &#34;DH_generate_key()&#34; to generate an X9.42 DH key may experience long delays. Likewise, applications that use &#34;DH_check_pub_key()&#34;, &#34;DH_check_pub_key_ex()&#34; or &#34;EVP_PKEY_public_check()&#34; to check an X9.42 DH key or X9.42 DH parameters may experience long delays. Where the key or parameters that are being checked have been obtained from an untrusted source this may lead to a Denial of Service. While &#34;DH_check()&#34; performs all the necessary checks (as of CVE-2023-3817), &#34;DH_check_pub_key()&#34; doesn&#39;t make any of these checks, and is therefore vulnerable for excessively large P and Q parameters. Likewise, while &#34;DH_generate_key()&#34; performs a check for an excessively large P, it doesn&#39;t check for an excessively large Q. An application that calls &#34;DH_generate_key()&#34; or &#34;DH_check_pub_key()&#34; and supplies a key or parameters obtained from an untrusted source could be vulnerable to a Denial of Service attack. &#34;DH_generate_key()&#34; and &#34;DH_check_pub_key()&#34; are also called by a number of other OpenSSL functions. An application calling any of those other functions may similarly be affected. The other functions affected by this are &#34;DH_check_pub_key_ex()&#34;, &#34;EVP_PKEY_public_check()&#34;, and &#34;EVP_PKEY_generate()&#34;. Also vulnerable are the OpenSSL pkey command line application when using the &#34;-pubcheck&#34; option, as well as the OpenSSL genpkey command line application. The OpenSSL SSL/TLS implementation is not affected by this issue. The OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue. This issue affects the openssl versions 1.0.2 through 1.0.2u, 1.1.1 through 1.1.1w, 3.0.0-alpha1 through 3.0.12, 3.1.0-alpha1 through 3.1.4, and openssl-3.2.0-alpha1 through openssl-3.2.0-beta1.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-12133 (containers)",
              "name": "Cve202412133",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack.",
                "markdown": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack."
              },
              "fullDescription": {
                "text": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202412133",
                "id": "CVE-2024-12133 (containers)",
                "description": "A flaw in libtasn1 causes inefficient handling of specific certificate data. When processing a large number of elements in a certificate, libtasn1 takes much longer than expected, which can slow down or even crash the system. This flaw allows an attacker to send a specially crafted certificate, causing a denial of service attack.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-12243 (containers)",
              "name": "Cve202412243",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A flaw was found in GnuTLS, which relies on libtasn1 for ASN.1 data processing. Due to an inefficient algorithm in libtasn1, decoding certain DER-encoded certificate data can take excessive time, leading to increased resource consumption. This flaw allows a remote attacker to send a specially crafted certificate, causing GnuTLS to become unresponsive or slow, resulting in a denial-of-service condition.",
                "markdown": "A flaw was found in GnuTLS, which relies on libtasn1 for ASN.1 data processing. Due to an inefficient algorithm in libtasn1, decoding certain DER-encoded certificate data can take excessive time, leading to increased resource consumption. This flaw allows a remote attacker to send a specially crafted certificate, causing GnuTLS to become unresponsive or slow, resulting in a denial-of-service condition."
              },
              "fullDescription": {
                "text": "A flaw was found in GnuTLS, which relies on libtasn1 for ASN.1 data processing. Due to an inefficient algorithm in libtasn1, decoding certain DER-encoded certificate data can take excessive time, leading to increased resource consumption. This flaw allows a remote attacker to send a specially crafted certificate, causing GnuTLS to become unresponsive or slow, resulting in a denial-of-service condition."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202412243",
                "id": "CVE-2024-12243 (containers)",
                "description": "A flaw was found in GnuTLS, which relies on libtasn1 for ASN.1 data processing. Due to an inefficient algorithm in libtasn1, decoding certain DER-encoded certificate data can take excessive time, leading to increased resource consumption. This flaw allows a remote attacker to send a specially crafted certificate, causing GnuTLS to become unresponsive or slow, resulting in a denial-of-service condition.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-13176 (containers)",
              "name": "Cve202413176",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation in OpenSSL. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around `300` nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular, the `NIST P-521` curve is affected. To be able to measure this leak, the attacker process must either be located on the same physical computer or must have a very fast network connection with low latency. For that reason, the severity of this vulnerability is low. This issue affects openssl package through 3.0.15, 3.1.0-alpha1 through 3.1.7, 3.2.0-alpha1 through 3.2.3, 3.3.0-alpha1 through 3.3.2, and 3.4.0-alpha1 through 3.4.0. Note: This vulnerability also fixed in 1.0.2zl , and 1.1.1zb only for premium support customers.",
                "markdown": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation in OpenSSL. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around `300` nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular, the `NIST P-521` curve is affected. To be able to measure this leak, the attacker process must either be located on the same physical computer or must have a very fast network connection with low latency. For that reason, the severity of this vulnerability is low. This issue affects openssl package through 3.0.15, 3.1.0-alpha1 through 3.1.7, 3.2.0-alpha1 through 3.2.3, 3.3.0-alpha1 through 3.3.2, and 3.4.0-alpha1 through 3.4.0. Note: This vulnerability also fixed in 1.0.2zl , and 1.1.1zb only for premium support customers."
              },
              "fullDescription": {
                "text": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation in OpenSSL. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around `300` nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular, the `NIST P-521` curve is affected. To be able to measure this leak, the attacker process must either be located on the same physical computer or must have a very fast network connection with low latency. For that reason, the severity of this vulnerability is low. This issue affects openssl package through 3.0.15, 3.1.0-alpha1 through 3.1.7, 3.2.0-alpha1 through 3.2.3, 3.3.0-alpha1 through 3.3.2, and 3.4.0-alpha1 through 3.4.0. Note: This vulnerability also fixed in 1.0.2zl , and 1.1.1zb only for premium support customers."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202413176",
                "id": "CVE-2024-13176 (containers)",
                "description": "Issue summary: A timing side-channel which could potentially allow recovering the private key exists in the ECDSA signature computation in OpenSSL. Impact summary: A timing side-channel in ECDSA signature computations could allow recovering the private key by an attacker. However, measuring the timing would require either local access to the signing application or a very fast network connection with low latency. There is a timing signal of around `300` nanoseconds when the top word of the inverted ECDSA nonce value is zero. This can happen with significant probability only for some of the supported elliptic curves. In particular, the `NIST P-521` curve is affected. To be able to measure this leak, the attacker process must either be located on the same physical computer or must have a very fast network connection with low latency. For that reason, the severity of this vulnerability is low. This issue affects openssl package through 3.0.15, 3.1.0-alpha1 through 3.1.7, 3.2.0-alpha1 through 3.2.3, 3.3.0-alpha1 through 3.3.2, and 3.4.0-alpha1 through 3.4.0. Note: This vulnerability also fixed in 1.0.2zl , and 1.1.1zb only for premium support customers.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-23337 (containers)",
              "name": "Cve202423337",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "jq is a command-line JSON processor. In versions up to and including 1.7.1, an integer overflow arises when assigning value using an index of 2147483647, the signed integer limit. This causes a denial of service. Commit de21386681c0df0104a99d9d09db23a9b2a78b1e contains a patch for the issue.",
                "markdown": "jq is a command-line JSON processor. In versions up to and including 1.7.1, an integer overflow arises when assigning value using an index of 2147483647, the signed integer limit. This causes a denial of service. Commit de21386681c0df0104a99d9d09db23a9b2a78b1e contains a patch for the issue."
              },
              "fullDescription": {
                "text": "jq is a command-line JSON processor. In versions up to and including 1.7.1, an integer overflow arises when assigning value using an index of 2147483647, the signed integer limit. This causes a denial of service. Commit de21386681c0df0104a99d9d09db23a9b2a78b1e contains a patch for the issue."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202423337",
                "id": "CVE-2024-23337 (containers)",
                "description": "jq is a command-line JSON processor. In versions up to and including 1.7.1, an integer overflow arises when assigning value using an index of 2147483647, the signed integer limit. This causes a denial of service. Commit de21386681c0df0104a99d9d09db23a9b2a78b1e contains a patch for the issue.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-26458 (containers)",
              "name": "Cve202426458",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Kerberos 5 (krb5) contains a Memory Leak vulnerability in the `/krb5/src/lib/rpc/pmap_rmt.c` file.",
                "markdown": "Kerberos 5 (krb5) contains a Memory Leak vulnerability in the `/krb5/src/lib/rpc/pmap_rmt.c` file."
              },
              "fullDescription": {
                "text": "Kerberos 5 (krb5) contains a Memory Leak vulnerability in the `/krb5/src/lib/rpc/pmap_rmt.c` file."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202426458",
                "id": "CVE-2024-26458 (containers)",
                "description": "Kerberos 5 (krb5) contains a Memory Leak vulnerability in the `/krb5/src/lib/rpc/pmap_rmt.c` file.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-26462 (containers)",
              "name": "Cve202426462",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Kerberos 5 (aka krb5) versions 1.20-beta1 through 1.21.2 contains a Memory Leak vulnerability in &#34;/krb5/src/kdc/ndr.c&#34;.",
                "markdown": "Kerberos 5 (aka krb5) versions 1.20-beta1 through 1.21.2 contains a Memory Leak vulnerability in &#34;/krb5/src/kdc/ndr.c&#34;."
              },
              "fullDescription": {
                "text": "Kerberos 5 (aka krb5) versions 1.20-beta1 through 1.21.2 contains a Memory Leak vulnerability in &#34;/krb5/src/kdc/ndr.c&#34;."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202426462",
                "id": "CVE-2024-26462 (containers)",
                "description": "Kerberos 5 (aka krb5) versions 1.20-beta1 through 1.21.2 contains a Memory Leak vulnerability in &#34;/krb5/src/kdc/ndr.c&#34;.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-27088 (sca)",
              "name": "Cve202427088",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The es5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into &#34;function#copy&#34; or &#34;function#toStringTokens&#34; may cause the script to stall. This issue affects es5-ext versions 0.10.0 through 0.10.62.",
                "markdown": "The es5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into &#34;function#copy&#34; or &#34;function#toStringTokens&#34; may cause the script to stall. This issue affects es5-ext versions 0.10.0 through 0.10.62."
              },
              "fullDescription": {
                "text": "The es5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into &#34;function#copy&#34; or &#34;function#toStringTokens&#34; may cause the script to stall. This issue affects es5-ext versions 0.10.0 through 0.10.62."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202427088",
                "id": "CVE-2024-27088 (sca)",
                "description": "The es5-ext contains ECMAScript 5 extensions. Passing functions with very long names or complex default argument names into &#34;function#copy&#34; or &#34;function#toStringTokens&#34; may cause the script to stall. This issue affects es5-ext versions 0.10.0 through 0.10.62.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-28863 (sca)",
              "name": "Cve202428863",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders.",
                "markdown": "node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders."
              },
              "fullDescription": {
                "text": "node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202428863",
                "id": "CVE-2024-28863 (sca)",
                "description": "node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-28863 (containers)",
              "name": "Cve202428863",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders.",
                "markdown": "node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders."
              },
              "fullDescription": {
                "text": "node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202428863",
                "id": "CVE-2024-28863 (containers)",
                "description": "node-tar is a Tar for Node.js. tar versions prior to 6.2.1 have no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within a few seconds of running it using a path with too many sub-folders inside. This issue was fixed by preventing extraction in excessively deep sub-folders.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-29041 (sca)",
              "name": "Cve202429041",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Express.js minimalist web framework for node. Express.js versions prior to 4.19.2, and 5.0.x prior to 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode using &#34;encodeurl&#34; on the contents before passing it to the &#34;location&#34; header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is &#34;res.location()&#34; but this is also called from within &#34;res.redirect()&#34;.",
                "markdown": "Express.js minimalist web framework for node. Express.js versions prior to 4.19.2, and 5.0.x prior to 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode using &#34;encodeurl&#34; on the contents before passing it to the &#34;location&#34; header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is &#34;res.location()&#34; but this is also called from within &#34;res.redirect()&#34;."
              },
              "fullDescription": {
                "text": "Express.js minimalist web framework for node. Express.js versions prior to 4.19.2, and 5.0.x prior to 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode using &#34;encodeurl&#34; on the contents before passing it to the &#34;location&#34; header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is &#34;res.location()&#34; but this is also called from within &#34;res.redirect()&#34;."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202429041",
                "id": "CVE-2024-29041 (sca)",
                "description": "Express.js minimalist web framework for node. Express.js versions prior to 4.19.2, and 5.0.x prior to 5.0.0-beta.3 are affected by an open redirect vulnerability using malformed URLs. When a user of Express performs a redirect using a user-provided URL Express performs an encode using &#34;encodeurl&#34; on the contents before passing it to the &#34;location&#34; header. This can cause malformed URLs to be evaluated in unexpected ways by common redirect allow list implementations in Express applications, leading to an Open Redirect via bypass of a properly implemented allow list. The main method impacted is &#34;res.location()&#34; but this is also called from within &#34;res.redirect()&#34;.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-33600 (containers)",
              "name": "Cve202433600",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Null pointer crashes after not found response. If the Name Service Cache Daemon&#39;s (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference. This flaw was introduced when the cache was added to nscd. This vulnerability is only present in the nscd binary. This issue affects the package glibc versions 2.15 through 2.39.9000.",
                "markdown": "Null pointer crashes after not found response. If the Name Service Cache Daemon&#39;s (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference. This flaw was introduced when the cache was added to nscd. This vulnerability is only present in the nscd binary. This issue affects the package glibc versions 2.15 through 2.39.9000."
              },
              "fullDescription": {
                "text": "Null pointer crashes after not found response. If the Name Service Cache Daemon&#39;s (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference. This flaw was introduced when the cache was added to nscd. This vulnerability is only present in the nscd binary. This issue affects the package glibc versions 2.15 through 2.39.9000."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202433600",
                "id": "CVE-2024-33600 (containers)",
                "description": "Null pointer crashes after not found response. If the Name Service Cache Daemon&#39;s (nscd) cache fails to add a not-found netgroup response to the cache, the client request can result in a null pointer dereference. This flaw was introduced when the cache was added to nscd. This vulnerability is only present in the nscd binary. This issue affects the package glibc versions 2.15 through 2.39.9000.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-4067 (sca)",
              "name": "Cve20244067",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The NPM package &#34;micromatch&#34; prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in &#34;micromatch.braces()&#34; in &#34;index.js&#34; because the pattern &#34;.*&#34; will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn&#39;t find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue still persists. This issue should be mitigated by using a safe pattern that won&#39;t start backtracking the regular expression due to its greedy matching.",
                "markdown": "The NPM package &#34;micromatch&#34; prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in &#34;micromatch.braces()&#34; in &#34;index.js&#34; because the pattern &#34;.*&#34; will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn&#39;t find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue still persists. This issue should be mitigated by using a safe pattern that won&#39;t start backtracking the regular expression due to its greedy matching."
              },
              "fullDescription": {
                "text": "The NPM package &#34;micromatch&#34; prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in &#34;micromatch.braces()&#34; in &#34;index.js&#34; because the pattern &#34;.*&#34; will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn&#39;t find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue still persists. This issue should be mitigated by using a safe pattern that won&#39;t start backtracking the regular expression due to its greedy matching."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20244067",
                "id": "CVE-2024-4067 (sca)",
                "description": "The NPM package &#34;micromatch&#34; prior to 4.0.8 is vulnerable to Regular Expression Denial of Service (ReDoS). The vulnerability occurs in &#34;micromatch.braces()&#34; in &#34;index.js&#34; because the pattern &#34;.*&#34; will greedily match anything. By passing a malicious payload, the pattern matching will keep backtracking to the input while it doesn&#39;t find the closing bracket. As the input size increases, the consumption time will also increase until it causes the application to hang or slow down. There was a merged fix but further testing shows the issue still persists. This issue should be mitigated by using a safe pattern that won&#39;t start backtracking the regular expression due to its greedy matching.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-43796 (sca)",
              "name": "Cve202443796",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Express.js minimalist web framework for node. In express versions prior to 4.20.0 and 5.0.x prior to 5.0.0, passing untrusted user input even after sanitizing it to &#34;response.redirect()&#34; may execute untrusted code.",
                "markdown": "Express.js minimalist web framework for node. In express versions prior to 4.20.0 and 5.0.x prior to 5.0.0, passing untrusted user input even after sanitizing it to &#34;response.redirect()&#34; may execute untrusted code."
              },
              "fullDescription": {
                "text": "Express.js minimalist web framework for node. In express versions prior to 4.20.0 and 5.0.x prior to 5.0.0, passing untrusted user input even after sanitizing it to &#34;response.redirect()&#34; may execute untrusted code."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202443796",
                "id": "CVE-2024-43796 (sca)",
                "description": "Express.js minimalist web framework for node. In express versions prior to 4.20.0 and 5.0.x prior to 5.0.0, passing untrusted user input even after sanitizing it to &#34;response.redirect()&#34; may execute untrusted code.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-43799 (sca)",
              "name": "Cve202443799",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Send is a library for streaming files from the file system as an HTTP response. Send passes untrusted user input to &#34;SendStream.redirect()&#34; which executes untrusted code. This vulnerability affects send versions through 0.18.0, and 1.0.0-beta.1 through 1.0.0.",
                "markdown": "Send is a library for streaming files from the file system as an HTTP response. Send passes untrusted user input to &#34;SendStream.redirect()&#34; which executes untrusted code. This vulnerability affects send versions through 0.18.0, and 1.0.0-beta.1 through 1.0.0."
              },
              "fullDescription": {
                "text": "Send is a library for streaming files from the file system as an HTTP response. Send passes untrusted user input to &#34;SendStream.redirect()&#34; which executes untrusted code. This vulnerability affects send versions through 0.18.0, and 1.0.0-beta.1 through 1.0.0."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202443799",
                "id": "CVE-2024-43799 (sca)",
                "description": "Send is a library for streaming files from the file system as an HTTP response. Send passes untrusted user input to &#34;SendStream.redirect()&#34; which executes untrusted code. This vulnerability affects send versions through 0.18.0, and 1.0.0-beta.1 through 1.0.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-43800 (sca)",
              "name": "Cve202443800",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "serve-static serves static files. serve-static passes untrusted user input even after sanitizing it to &#34;redirect()&#34; and may execute untrusted code. This issue affects serve-static versions prior to 1.16.0 and 2.0.x prior to 2.1.0.",
                "markdown": "serve-static serves static files. serve-static passes untrusted user input even after sanitizing it to &#34;redirect()&#34; and may execute untrusted code. This issue affects serve-static versions prior to 1.16.0 and 2.0.x prior to 2.1.0."
              },
              "fullDescription": {
                "text": "serve-static serves static files. serve-static passes untrusted user input even after sanitizing it to &#34;redirect()&#34; and may execute untrusted code. This issue affects serve-static versions prior to 1.16.0 and 2.0.x prior to 2.1.0."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202443800",
                "id": "CVE-2024-43800 (sca)",
                "description": "serve-static serves static files. serve-static passes untrusted user input even after sanitizing it to &#34;redirect()&#34; and may execute untrusted code. This issue affects serve-static versions prior to 1.16.0 and 2.0.x prior to 2.1.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-4603 (containers)",
              "name": "Cve20244603",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In openssl Applications that use the functions &#34;EVP_PKEY_param_check()&#34;\nor &#34;EVP_PKEY_public_check()&#34; to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions &#34;EVP_PKEY_param_check()&#34; or &#34;EVP_PKEY_public_check()&#34; perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (&#34;p&#34; parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls &#34;EVP_PKEY_param_check()&#34; or &#34;EVP_PKEY_public_check()&#34;\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL &#34;pkey&#34; and &#34;pkeyparam&#34; command line applications\nwhen using the &#34;-check&#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThis affects versions openssl-3.0.0-alpha1 through openssl-3.0.13 , openssl-3.1.0-alpha1 through openssl-3.1.5, openssl-3.2.0-alpha1 through openssl-3.2.1 and openssl-3.3.0-alpha1 through openssl-3.3.0.",
                "markdown": "In openssl Applications that use the functions &#34;EVP_PKEY_param_check()&#34;\nor &#34;EVP_PKEY_public_check()&#34; to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions &#34;EVP_PKEY_param_check()&#34; or &#34;EVP_PKEY_public_check()&#34; perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (&#34;p&#34; parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls &#34;EVP_PKEY_param_check()&#34; or &#34;EVP_PKEY_public_check()&#34;\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL &#34;pkey&#34; and &#34;pkeyparam&#34; command line applications\nwhen using the &#34;-check&#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThis affects versions openssl-3.0.0-alpha1 through openssl-3.0.13 , openssl-3.1.0-alpha1 through openssl-3.1.5, openssl-3.2.0-alpha1 through openssl-3.2.1 and openssl-3.3.0-alpha1 through openssl-3.3.0."
              },
              "fullDescription": {
                "text": "In openssl Applications that use the functions &#34;EVP_PKEY_param_check()&#34;\nor &#34;EVP_PKEY_public_check()&#34; to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions &#34;EVP_PKEY_param_check()&#34; or &#34;EVP_PKEY_public_check()&#34; perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (&#34;p&#34; parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls &#34;EVP_PKEY_param_check()&#34; or &#34;EVP_PKEY_public_check()&#34;\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL &#34;pkey&#34; and &#34;pkeyparam&#34; command line applications\nwhen using the &#34;-check&#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThis affects versions openssl-3.0.0-alpha1 through openssl-3.0.13 , openssl-3.1.0-alpha1 through openssl-3.1.5, openssl-3.2.0-alpha1 through openssl-3.2.1 and openssl-3.3.0-alpha1 through openssl-3.3.0."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20244603",
                "id": "CVE-2024-4603 (containers)",
                "description": "In openssl Applications that use the functions &#34;EVP_PKEY_param_check()&#34;\nor &#34;EVP_PKEY_public_check()&#34; to check a DSA public key or DSA parameters may\nexperience long delays. Where the key or parameters that are being checked\nhave been obtained from an untrusted source this may lead to a Denial of\nService.\n\nThe functions &#34;EVP_PKEY_param_check()&#34; or &#34;EVP_PKEY_public_check()&#34; perform\nvarious checks on DSA parameters. Some of those computations take a long time\nif the modulus (&#34;p&#34; parameter) is too large.\n\nTrying to use a very large modulus is slow and OpenSSL will not allow using\npublic keys with a modulus which is over 10,000 bits in length for signature\nverification. However the key and parameter check functions do not limit\nthe modulus size when performing the checks.\n\nAn application that calls &#34;EVP_PKEY_param_check()&#34; or &#34;EVP_PKEY_public_check()&#34;\nand supplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nThese functions are not called by OpenSSL itself on untrusted DSA keys so\nonly applications that directly call these functions may be vulnerable.\n\nAlso vulnerable are the OpenSSL &#34;pkey&#34; and &#34;pkeyparam&#34; command line applications\nwhen using the &#34;-check&#34; option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThis affects versions openssl-3.0.0-alpha1 through openssl-3.0.13 , openssl-3.1.0-alpha1 through openssl-3.1.5, openssl-3.2.0-alpha1 through openssl-3.2.1 and openssl-3.3.0-alpha1 through openssl-3.3.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-47764 (sca)",
              "name": "Cve202447764",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The NPM package cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for &#34;path&#34; and &#34;domain&#34;, which could be abused to alter other fields of the cookie. This vulnerability affects cookie package versions prior to 0.7.0. Users are advised to upgrade to a fixed version, which updates the validation for &#34;name&#34;, &#34;path&#34;, and &#34;domain&#34;.",
                "markdown": "The NPM package cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for &#34;path&#34; and &#34;domain&#34;, which could be abused to alter other fields of the cookie. This vulnerability affects cookie package versions prior to 0.7.0. Users are advised to upgrade to a fixed version, which updates the validation for &#34;name&#34;, &#34;path&#34;, and &#34;domain&#34;."
              },
              "fullDescription": {
                "text": "The NPM package cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for &#34;path&#34; and &#34;domain&#34;, which could be abused to alter other fields of the cookie. This vulnerability affects cookie package versions prior to 0.7.0. Users are advised to upgrade to a fixed version, which updates the validation for &#34;name&#34;, &#34;path&#34;, and &#34;domain&#34;."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202447764",
                "id": "CVE-2024-47764 (sca)",
                "description": "The NPM package cookie is a basic HTTP cookie parser and serializer for HTTP servers. The cookie name could be used to set other fields of the cookie, resulting in an unexpected cookie value. A similar escape can be used for &#34;path&#34; and &#34;domain&#34;, which could be abused to alter other fields of the cookie. This vulnerability affects cookie package versions prior to 0.7.0. Users are advised to upgrade to a fixed version, which updates the validation for &#34;name&#34;, &#34;path&#34;, and &#34;domain&#34;.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-7264 (containers)",
              "name": "Cve20247264",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "libcurl&#39;s ASN1 parser code has the `GTime2str()` function, used for parsing an ASN.1 Generalized Time field. If given a syntactically incorrect field, the parser might end up using -1 for the length of the time fraction, leading to a `strlen()` getting performed on a pointer to a heap buffer area that is not (purposely) null-terminated.\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used. This issue affects curl versions 7.32.0 through 8.9.0.",
                "markdown": "libcurl&#39;s ASN1 parser code has the `GTime2str()` function, used for parsing an ASN.1 Generalized Time field. If given a syntactically incorrect field, the parser might end up using -1 for the length of the time fraction, leading to a `strlen()` getting performed on a pointer to a heap buffer area that is not (purposely) null-terminated.\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used. This issue affects curl versions 7.32.0 through 8.9.0."
              },
              "fullDescription": {
                "text": "libcurl&#39;s ASN1 parser code has the `GTime2str()` function, used for parsing an ASN.1 Generalized Time field. If given a syntactically incorrect field, the parser might end up using -1 for the length of the time fraction, leading to a `strlen()` getting performed on a pointer to a heap buffer area that is not (purposely) null-terminated.\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used. This issue affects curl versions 7.32.0 through 8.9.0."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20247264",
                "id": "CVE-2024-7264 (containers)",
                "description": "libcurl&#39;s ASN1 parser code has the `GTime2str()` function, used for parsing an ASN.1 Generalized Time field. If given a syntactically incorrect field, the parser might end up using -1 for the length of the time fraction, leading to a `strlen()` getting performed on a pointer to a heap buffer area that is not (purposely) null-terminated.\nThis flaw most likely leads to a crash, but can also lead to heap contents\ngetting returned to the application when\n[CURLINFO_CERTINFO](https://curl.se/libcurl/c/CURLINFO_CERTINFO.html) is used. This issue affects curl versions 7.32.0 through 8.9.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-8096 (containers)",
              "name": "Cve20248096",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine. If the returned status reports another error than &#39;revoked&#39; (like for example &#39;unauthorized&#39;) it is not treated as a bad certificate. This vulnerability affects curl versions 7.41.0 through 8.9.1.",
                "markdown": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine. If the returned status reports another error than &#39;revoked&#39; (like for example &#39;unauthorized&#39;) it is not treated as a bad certificate. This vulnerability affects curl versions 7.41.0 through 8.9.1."
              },
              "fullDescription": {
                "text": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine. If the returned status reports another error than &#39;revoked&#39; (like for example &#39;unauthorized&#39;) it is not treated as a bad certificate. This vulnerability affects curl versions 7.41.0 through 8.9.1."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20248096",
                "id": "CVE-2024-8096 (containers)",
                "description": "When curl is told to use the Certificate Status Request TLS extension, often referred to as OCSP stapling, to verify that the server certificate is valid, it might fail to detect some OCSP problems and instead wrongly consider the response as fine. If the returned status reports another error than &#39;revoked&#39; (like for example &#39;unauthorized&#39;) it is not treated as a bad certificate. This vulnerability affects curl versions 7.41.0 through 8.9.1.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-9143 (containers)",
              "name": "Cve20249143",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The vulnerability involves the use of low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial, which can result in out-of-bounds memory reads or writes. The affected APIs include &#34;EC_GROUP_new_curve_GF2m()&#34;, &#34;EC_GROUP_new_from_params()&#34;, and various &#34;BN_GF2m_*()&#34; functions.\n\nWhile out-of-bounds memory writes could lead to application crashes or even potential remote code execution, the likelihood of a vulnerable application is considered low. This is because protocols that employ Elliptic Curve Cryptography generally use &#34;named curves,&#34; or if explicit curve parameters are supported, they rely on X9.62 encoding, which does not permit problematic input values. X9.62 encoding is also used for ECC keys in X.509 certificates, making the occurrence of problematic inputs in that context unlikely. Applications utilizing &#34;exotic&#34; explicit binary (GF(2^m)) curve parameters that allow the representation of invalid field polynomials with a zero constant term may encounter abrupt termination due to array bounds violations. While remote code execution cannot be easily ruled out, it remains a less likely scenario.\n\nThe vulnerability affects openssl versions 1.0.2-x prior to 1.0.2zl, 1.1.x prior to 1.1.1zb, 3.0.x prior to 3.0.16, 3.1.x prior to 3.1.8, 3.2.x prior to 3.2.4, 3.3.x prior to 3.3.3, and 3.4.x prior to 3.4.0.",
                "markdown": "The vulnerability involves the use of low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial, which can result in out-of-bounds memory reads or writes. The affected APIs include &#34;EC_GROUP_new_curve_GF2m()&#34;, &#34;EC_GROUP_new_from_params()&#34;, and various &#34;BN_GF2m_*()&#34; functions.\n\nWhile out-of-bounds memory writes could lead to application crashes or even potential remote code execution, the likelihood of a vulnerable application is considered low. This is because protocols that employ Elliptic Curve Cryptography generally use &#34;named curves,&#34; or if explicit curve parameters are supported, they rely on X9.62 encoding, which does not permit problematic input values. X9.62 encoding is also used for ECC keys in X.509 certificates, making the occurrence of problematic inputs in that context unlikely. Applications utilizing &#34;exotic&#34; explicit binary (GF(2^m)) curve parameters that allow the representation of invalid field polynomials with a zero constant term may encounter abrupt termination due to array bounds violations. While remote code execution cannot be easily ruled out, it remains a less likely scenario.\n\nThe vulnerability affects openssl versions 1.0.2-x prior to 1.0.2zl, 1.1.x prior to 1.1.1zb, 3.0.x prior to 3.0.16, 3.1.x prior to 3.1.8, 3.2.x prior to 3.2.4, 3.3.x prior to 3.3.3, and 3.4.x prior to 3.4.0."
              },
              "fullDescription": {
                "text": "The vulnerability involves the use of low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial, which can result in out-of-bounds memory reads or writes. The affected APIs include &#34;EC_GROUP_new_curve_GF2m()&#34;, &#34;EC_GROUP_new_from_params()&#34;, and various &#34;BN_GF2m_*()&#34; functions.\n\nWhile out-of-bounds memory writes could lead to application crashes or even potential remote code execution, the likelihood of a vulnerable application is considered low. This is because protocols that employ Elliptic Curve Cryptography generally use &#34;named curves,&#34; or if explicit curve parameters are supported, they rely on X9.62 encoding, which does not permit problematic input values. X9.62 encoding is also used for ECC keys in X.509 certificates, making the occurrence of problematic inputs in that context unlikely. Applications utilizing &#34;exotic&#34; explicit binary (GF(2^m)) curve parameters that allow the representation of invalid field polynomials with a zero constant term may encounter abrupt termination due to array bounds violations. While remote code execution cannot be easily ruled out, it remains a less likely scenario.\n\nThe vulnerability affects openssl versions 1.0.2-x prior to 1.0.2zl, 1.1.x prior to 1.1.1zb, 3.0.x prior to 3.0.16, 3.1.x prior to 3.1.8, 3.2.x prior to 3.2.4, 3.3.x prior to 3.3.3, and 3.4.x prior to 3.4.0."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20249143",
                "id": "CVE-2024-9143 (containers)",
                "description": "The vulnerability involves the use of low-level GF(2^m) elliptic curve APIs with untrusted explicit values for the field polynomial, which can result in out-of-bounds memory reads or writes. The affected APIs include &#34;EC_GROUP_new_curve_GF2m()&#34;, &#34;EC_GROUP_new_from_params()&#34;, and various &#34;BN_GF2m_*()&#34; functions.\n\nWhile out-of-bounds memory writes could lead to application crashes or even potential remote code execution, the likelihood of a vulnerable application is considered low. This is because protocols that employ Elliptic Curve Cryptography generally use &#34;named curves,&#34; or if explicit curve parameters are supported, they rely on X9.62 encoding, which does not permit problematic input values. X9.62 encoding is also used for ECC keys in X.509 certificates, making the occurrence of problematic inputs in that context unlikely. Applications utilizing &#34;exotic&#34; explicit binary (GF(2^m)) curve parameters that allow the representation of invalid field polynomials with a zero constant term may encounter abrupt termination due to array bounds violations. While remote code execution cannot be easily ruled out, it remains a less likely scenario.\n\nThe vulnerability affects openssl versions 1.0.2-x prior to 1.0.2zl, 1.1.x prior to 1.1.1zb, 3.0.x prior to 3.0.16, 3.1.x prior to 3.1.8, 3.2.x prior to 3.2.4, 3.3.x prior to 3.3.3, and 3.4.x prior to 3.4.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-29088 (containers)",
              "name": "Cve202529088",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In SQLite version through  3.44.3 and in version 3.45.0  through 3.49.0, certain argument values to &#34;sqlite3_db_config&#34; (in the C-language API) can cause a Denial Of Service (application crash). An &#34;sz*nBig&#34; multiplication is not cast to a 64-bit integer, and consequently some memory allocations may be incorrect.",
                "markdown": "In SQLite version through  3.44.3 and in version 3.45.0  through 3.49.0, certain argument values to &#34;sqlite3_db_config&#34; (in the C-language API) can cause a Denial Of Service (application crash). An &#34;sz*nBig&#34; multiplication is not cast to a 64-bit integer, and consequently some memory allocations may be incorrect."
              },
              "fullDescription": {
                "text": "In SQLite version through  3.44.3 and in version 3.45.0  through 3.49.0, certain argument values to &#34;sqlite3_db_config&#34; (in the C-language API) can cause a Denial Of Service (application crash). An &#34;sz*nBig&#34; multiplication is not cast to a 64-bit integer, and consequently some memory allocations may be incorrect."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve202529088",
                "id": "CVE-2025-29088 (containers)",
                "description": "In SQLite version through  3.44.3 and in version 3.45.0  through 3.49.0, certain argument values to &#34;sqlite3_db_config&#34; (in the C-language API) can cause a Denial Of Service (application crash). An &#34;sz*nBig&#34; multiplication is not cast to a 64-bit integer, and consequently some memory allocations may be incorrect.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-3277 (containers)",
              "name": "Cve20253277",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "An integer overflow can be triggered in SQLite&#39;s `concat_ws()` function in versions prior to 3.44.4 and 3.45.0 through 3.49.0. The resulting, truncated integer is then used to allocate a buffer. When SQLite then writes the resulting string to the buffer, it uses the original, untruncated size and thus a wild Heap Buffer overflow of size ~4GB can be triggered. This can result in arbitrary code execution.",
                "markdown": "An integer overflow can be triggered in SQLite&#39;s `concat_ws()` function in versions prior to 3.44.4 and 3.45.0 through 3.49.0. The resulting, truncated integer is then used to allocate a buffer. When SQLite then writes the resulting string to the buffer, it uses the original, untruncated size and thus a wild Heap Buffer overflow of size ~4GB can be triggered. This can result in arbitrary code execution."
              },
              "fullDescription": {
                "text": "An integer overflow can be triggered in SQLite&#39;s `concat_ws()` function in versions prior to 3.44.4 and 3.45.0 through 3.49.0. The resulting, truncated integer is then used to allocate a buffer. When SQLite then writes the resulting string to the buffer, it uses the original, untruncated size and thus a wild Heap Buffer overflow of size ~4GB can be triggered. This can result in arbitrary code execution."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20253277",
                "id": "CVE-2025-3277 (containers)",
                "description": "An integer overflow can be triggered in SQLite&#39;s `concat_ws()` function in versions prior to 3.44.4 and 3.45.0 through 3.49.0. The resulting, truncated integer is then used to allocate a buffer. When SQLite then writes the resulting string to the buffer, it uses the original, untruncated size and thus a wild Heap Buffer overflow of size ~4GB can be triggered. This can result in arbitrary code execution.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-3576 (containers)",
              "name": "Cve20253576",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
                "markdown": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering."
              },
              "fullDescription": {
                "text": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20253576",
                "id": "CVE-2025-3576 (containers)",
                "description": "A vulnerability in the MIT Kerberos implementation allows GSSAPI-protected messages using RC4-HMAC-MD5 to be spoofed due to weaknesses in the MD5 checksum design. If RC4 is preferred over stronger encryption types, an attacker could exploit MD5 collisions to forge message integrity codes. This may lead to unauthorized message tampering.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-4598 (containers)",
              "name": "Cve20254598",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original&#39;s privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner&#39;s permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the &#34;/proc/pid/auxv&#34; file. If the attacker wins the race condition, they gain access to the original&#39;s SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality. This issue affects systemd versions prior to prior to v256.14, v257-x prior to v257.6 and systemd-stable versions prior to v252.37, v253.x prior to 253.32, v254.x prior to v254.25, v255.x prior to v255.19 and v256.x and later.",
                "markdown": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original&#39;s privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner&#39;s permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the &#34;/proc/pid/auxv&#34; file. If the attacker wins the race condition, they gain access to the original&#39;s SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality. This issue affects systemd versions prior to prior to v256.14, v257-x prior to v257.6 and systemd-stable versions prior to v252.37, v253.x prior to 253.32, v254.x prior to v254.25, v255.x prior to v255.19 and v256.x and later."
              },
              "fullDescription": {
                "text": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original&#39;s privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner&#39;s permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the &#34;/proc/pid/auxv&#34; file. If the attacker wins the race condition, they gain access to the original&#39;s SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality. This issue affects systemd versions prior to prior to v256.14, v257-x prior to v257.6 and systemd-stable versions prior to v252.37, v253.x prior to 253.32, v254.x prior to v254.25, v255.x prior to v255.19 and v256.x and later."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20254598",
                "id": "CVE-2025-4598 (containers)",
                "description": "A vulnerability was found in systemd-coredump. This flaw allows an attacker to force a SUID process to crash and replace it with a non-SUID binary to access the original&#39;s privileged process coredump, allowing the attacker to read sensitive data, such as /etc/shadow content, loaded by the original process.\n\nA SUID binary or process has a special type of permission, which allows the process to run with the file owner&#39;s permissions, regardless of the user executing the binary. This allows the process to access more restricted data than unprivileged users or processes would be able to. An attacker can leverage this flaw by forcing a SUID process to crash and force the Linux kernel to recycle the process PID before systemd-coredump can analyze the &#34;/proc/pid/auxv&#34; file. If the attacker wins the race condition, they gain access to the original&#39;s SUID process coredump file. They can read sensitive content loaded into memory by the original binary, affecting data confidentiality. This issue affects systemd versions prior to prior to v256.14, v257-x prior to v257.6 and systemd-stable versions prior to v252.37, v253.x prior to 253.32, v254.x prior to v254.25, v255.x prior to v255.19 and v256.x and later.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-4877 (containers)",
              "name": "Cve20254877",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "There is a vulnerability in the libssh package that occurs when a libssh consumer passes an unexpectedly large input buffer to the &#34;ssh_get_fingerprint_hash()&#34; function. In such cases, the &#34;bin_to_base64()&#34; function can experience an Integer Overflow, leading to memory under-allocation. When that happens, the program may perform an Out-of-bounds Write, resulting in heap corruption.\n\nThis issue affects only 32-bit builds of libssh and has been patched in version 0.11.2.",
                "markdown": "There is a vulnerability in the libssh package that occurs when a libssh consumer passes an unexpectedly large input buffer to the &#34;ssh_get_fingerprint_hash()&#34; function. In such cases, the &#34;bin_to_base64()&#34; function can experience an Integer Overflow, leading to memory under-allocation. When that happens, the program may perform an Out-of-bounds Write, resulting in heap corruption.\n\nThis issue affects only 32-bit builds of libssh and has been patched in version 0.11.2."
              },
              "fullDescription": {
                "text": "There is a vulnerability in the libssh package that occurs when a libssh consumer passes an unexpectedly large input buffer to the &#34;ssh_get_fingerprint_hash()&#34; function. In such cases, the &#34;bin_to_base64()&#34; function can experience an Integer Overflow, leading to memory under-allocation. When that happens, the program may perform an Out-of-bounds Write, resulting in heap corruption.\n\nThis issue affects only 32-bit builds of libssh and has been patched in version 0.11.2."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20254877",
                "id": "CVE-2025-4877 (containers)",
                "description": "There is a vulnerability in the libssh package that occurs when a libssh consumer passes an unexpectedly large input buffer to the &#34;ssh_get_fingerprint_hash()&#34; function. In such cases, the &#34;bin_to_base64()&#34; function can experience an Integer Overflow, leading to memory under-allocation. When that happens, the program may perform an Out-of-bounds Write, resulting in heap corruption.\n\nThis issue affects only 32-bit builds of libssh and has been patched in version 0.11.2.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-5318 (containers)",
              "name": "Cve20255318",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A flaw was found in the libssh library. An out-of-bounds read can be triggered in the sftp_handle function due to an incorrect comparison check that permits the function to access memory beyond the valid handle list and to return an invalid pointer, which is used in further processing. This vulnerability allows an authenticated remote attacker to potentially read unintended memory regions, exposing sensitive information or affect service behavior.",
                "markdown": "A flaw was found in the libssh library. An out-of-bounds read can be triggered in the sftp_handle function due to an incorrect comparison check that permits the function to access memory beyond the valid handle list and to return an invalid pointer, which is used in further processing. This vulnerability allows an authenticated remote attacker to potentially read unintended memory regions, exposing sensitive information or affect service behavior."
              },
              "fullDescription": {
                "text": "A flaw was found in the libssh library. An out-of-bounds read can be triggered in the sftp_handle function due to an incorrect comparison check that permits the function to access memory beyond the valid handle list and to return an invalid pointer, which is used in further processing. This vulnerability allows an authenticated remote attacker to potentially read unintended memory regions, exposing sensitive information or affect service behavior."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20255318",
                "id": "CVE-2025-5318 (containers)",
                "description": "A flaw was found in the libssh library. An out-of-bounds read can be triggered in the sftp_handle function due to an incorrect comparison check that permits the function to access memory beyond the valid handle list and to return an invalid pointer, which is used in further processing. This vulnerability allows an authenticated remote attacker to potentially read unintended memory regions, exposing sensitive information or affect service behavior.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-8262 (containers)",
              "name": "Cve20258262",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in yarnpkg Yarn versions 1.8.0 and after. It has been classified as problematic. Affected is the function &#34;explodeHostedGitFragment&#34; of the file &#34;src/resolvers/exotics/hosted-git-resolver.js&#34;. The manipulation leads to Inefficient Regular Rxpression complexity. It is possible to launch the attack remotely.",
                "markdown": "A vulnerability was found in yarnpkg Yarn versions 1.8.0 and after. It has been classified as problematic. Affected is the function &#34;explodeHostedGitFragment&#34; of the file &#34;src/resolvers/exotics/hosted-git-resolver.js&#34;. The manipulation leads to Inefficient Regular Rxpression complexity. It is possible to launch the attack remotely."
              },
              "fullDescription": {
                "text": "A vulnerability was found in yarnpkg Yarn versions 1.8.0 and after. It has been classified as problematic. Affected is the function &#34;explodeHostedGitFragment&#34; of the file &#34;src/resolvers/exotics/hosted-git-resolver.js&#34;. The manipulation leads to Inefficient Regular Rxpression complexity. It is possible to launch the attack remotely."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20258262",
                "id": "CVE-2025-8262 (containers)",
                "description": "A vulnerability was found in yarnpkg Yarn versions 1.8.0 and after. It has been classified as problematic. Affected is the function &#34;explodeHostedGitFragment&#34; of the file &#34;src/resolvers/exotics/hosted-git-resolver.js&#34;. The manipulation leads to Inefficient Regular Rxpression complexity. It is possible to launch the attack remotely.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-9308 (containers)",
              "name": "Cve20259308",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability has been found in yarnpkg Yarn. This impacts the function &#34;setOptions&#34; of the file &#34;src/util/request-manager.js&#34;. Such manipulation leads to inefficient regular expression complexity. Local access is required to approach this attack. This vulnerability only affects products that are no longer supported by the maintainer.",
                "markdown": "A vulnerability has been found in yarnpkg Yarn. This impacts the function &#34;setOptions&#34; of the file &#34;src/util/request-manager.js&#34;. Such manipulation leads to inefficient regular expression complexity. Local access is required to approach this attack. This vulnerability only affects products that are no longer supported by the maintainer."
              },
              "fullDescription": {
                "text": "A vulnerability has been found in yarnpkg Yarn. This impacts the function &#34;setOptions&#34; of the file &#34;src/util/request-manager.js&#34;. Such manipulation leads to inefficient regular expression complexity. Local access is required to approach this attack. This vulnerability only affects products that are no longer supported by the maintainer."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cve20259308",
                "id": "CVE-2025-9308 (containers)",
                "description": "A vulnerability has been found in yarnpkg Yarn. This impacts the function &#34;setOptions&#34; of the file &#34;src/util/request-manager.js&#34;. Such manipulation leads to inefficient regular expression complexity. Local access is required to approach this attack. This vulnerability only affects products that are no longer supported by the maintainer.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "Cx3bab5572-419d (sca)",
              "name": "Cx3bab5572419d",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A Regular expression Denial of Service (ReDoS) vulnerability in the file marked.js of the marked npm package prior to 0.4.0, allows a remote attacker to overload and crash a server by passing a maliciously crafted string.",
                "markdown": "A Regular expression Denial of Service (ReDoS) vulnerability in the file marked.js of the marked npm package prior to 0.4.0, allows a remote attacker to overload and crash a server by passing a maliciously crafted string."
              },
              "fullDescription": {
                "text": "A Regular expression Denial of Service (ReDoS) vulnerability in the file marked.js of the marked npm package prior to 0.4.0, allows a remote attacker to overload and crash a server by passing a maliciously crafted string."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cx3bab5572419d",
                "id": "Cx3bab5572-419d (sca)",
                "description": "A Regular expression Denial of Service (ReDoS) vulnerability in the file marked.js of the marked npm package prior to 0.4.0, allows a remote attacker to overload and crash a server by passing a maliciously crafted string.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx41fbf2f3-5595 (sca)",
              "name": "Cx41fbf2f35595",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Improper Privilege Management in shelljs before 0.8.5",
                "markdown": "Improper Privilege Management in shelljs before 0.8.5"
              },
              "fullDescription": {
                "text": "Improper Privilege Management in shelljs before 0.8.5"
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cx41fbf2f35595",
                "id": "Cx41fbf2f3-5595 (sca)",
                "description": "Improper Privilege Management in shelljs before 0.8.5",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx435a6fda-ca38 (sca)",
              "name": "Cx435a6fdaca38",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A local code/OS command execution vulnerability was discovered in Commander.js, in the &#34;parse()&#34; method.  Given a permission to write and set permissions on a file in the same working directory as the application, and given the ability to pass the value &#34;__proto__&#34; to the &#34;parse()&#34; method, an attacker can bypass checks against values set in _execs[] to execute an external file which was not intended.",
                "markdown": "A local code/OS command execution vulnerability was discovered in Commander.js, in the &#34;parse()&#34; method.  Given a permission to write and set permissions on a file in the same working directory as the application, and given the ability to pass the value &#34;__proto__&#34; to the &#34;parse()&#34; method, an attacker can bypass checks against values set in _execs[] to execute an external file which was not intended."
              },
              "fullDescription": {
                "text": "A local code/OS command execution vulnerability was discovered in Commander.js, in the &#34;parse()&#34; method.  Given a permission to write and set permissions on a file in the same working directory as the application, and given the ability to pass the value &#34;__proto__&#34; to the &#34;parse()&#34; method, an attacker can bypass checks against values set in _execs[] to execute an external file which was not intended."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cx435a6fdaca38",
                "id": "Cx435a6fda-ca38 (sca)",
                "description": "A local code/OS command execution vulnerability was discovered in Commander.js, in the &#34;parse()&#34; method.  Given a permission to write and set permissions on a file in the same working directory as the application, and given the ability to pass the value &#34;__proto__&#34; to the &#34;parse()&#34; method, an attacker can bypass checks against values set in _execs[] to execute an external file which was not intended.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx6b14edb9-2afd (sca)",
              "name": "Cx6b14edb92afd",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Versions of helmet-csp before 2.9.2 are vulnerable to a Configuration Override affecting the application&#39;s Content Security Policy (CSP). The package&#39;s browser sniffing for Firefox deletes the default-src CSP policy, which is the fallback policy. This allows an attacker to remove an application&#39;s default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.",
                "markdown": "Versions of helmet-csp before 2.9.2 are vulnerable to a Configuration Override affecting the application&#39;s Content Security Policy (CSP). The package&#39;s browser sniffing for Firefox deletes the default-src CSP policy, which is the fallback policy. This allows an attacker to remove an application&#39;s default CSP, possibly rendering the application vulnerable to Cross-Site Scripting."
              },
              "fullDescription": {
                "text": "Versions of helmet-csp before 2.9.2 are vulnerable to a Configuration Override affecting the application&#39;s Content Security Policy (CSP). The package&#39;s browser sniffing for Firefox deletes the default-src CSP policy, which is the fallback policy. This allows an attacker to remove an application&#39;s default CSP, possibly rendering the application vulnerable to Cross-Site Scripting."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cx6b14edb92afd",
                "id": "Cx6b14edb9-2afd (sca)",
                "description": "Versions of helmet-csp before 2.9.2 are vulnerable to a Configuration Override affecting the application&#39;s Content Security Policy (CSP). The package&#39;s browser sniffing for Firefox deletes the default-src CSP policy, which is the fallback policy. This allows an attacker to remove an application&#39;s default CSP, possibly rendering the application vulnerable to Cross-Site Scripting.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx77c0fe72-ea38 (sca)",
              "name": "Cx77c0fe72ea38",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package `yauzl` before version 2.9.2 uses the deprecated `new Buffer()` constructor, which can allocate uninitialized memory. This uninitialized memory may contain potentially sensitive data from previous processes that can end up being leaked if not handled properly. This issue is only relevant when using Node.js versions prior to 5.10.0, as safer alternatives like `Buffer.alloc()` and `Buffer.from()` were introduced starting from that version.",
                "markdown": "The package `yauzl` before version 2.9.2 uses the deprecated `new Buffer()` constructor, which can allocate uninitialized memory. This uninitialized memory may contain potentially sensitive data from previous processes that can end up being leaked if not handled properly. This issue is only relevant when using Node.js versions prior to 5.10.0, as safer alternatives like `Buffer.alloc()` and `Buffer.from()` were introduced starting from that version."
              },
              "fullDescription": {
                "text": "The package `yauzl` before version 2.9.2 uses the deprecated `new Buffer()` constructor, which can allocate uninitialized memory. This uninitialized memory may contain potentially sensitive data from previous processes that can end up being leaked if not handled properly. This issue is only relevant when using Node.js versions prior to 5.10.0, as safer alternatives like `Buffer.alloc()` and `Buffer.from()` were introduced starting from that version."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cx77c0fe72ea38",
                "id": "Cx77c0fe72-ea38 (sca)",
                "description": "The package `yauzl` before version 2.9.2 uses the deprecated `new Buffer()` constructor, which can allocate uninitialized memory. This uninitialized memory may contain potentially sensitive data from previous processes that can end up being leaked if not handled properly. This issue is only relevant when using Node.js versions prior to 5.10.0, as safer alternatives like `Buffer.alloc()` and `Buffer.from()` were introduced starting from that version.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx816df59e-1cc9 (sca)",
              "name": "Cx816df59e1cc9",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Marked prior to 1.1.1 has a regex that accepts &#34;any character&#34; unrestrictedly in `rules.js` and this could lead to a Regular Expression Denial of Service (REDoS) attack.",
                "markdown": "Marked prior to 1.1.1 has a regex that accepts &#34;any character&#34; unrestrictedly in `rules.js` and this could lead to a Regular Expression Denial of Service (REDoS) attack."
              },
              "fullDescription": {
                "text": "Marked prior to 1.1.1 has a regex that accepts &#34;any character&#34; unrestrictedly in `rules.js` and this could lead to a Regular Expression Denial of Service (REDoS) attack."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cx816df59e1cc9",
                "id": "Cx816df59e-1cc9 (sca)",
                "description": "Marked prior to 1.1.1 has a regex that accepts &#34;any character&#34; unrestrictedly in `rules.js` and this could lead to a Regular Expression Denial of Service (REDoS) attack.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx9b9f022f-6dff (sca)",
              "name": "Cx9b9f022f6dff",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Marked prior to 0.3.9 is vulnerable to Cross-Site Scripting. When mangling is disabled via option &#34;mangle&#34;, marked don&#39;t escape target href. This allows attacker to inject arbitrary html-event into resulting a tag.",
                "markdown": "Marked prior to 0.3.9 is vulnerable to Cross-Site Scripting. When mangling is disabled via option &#34;mangle&#34;, marked don&#39;t escape target href. This allows attacker to inject arbitrary html-event into resulting a tag."
              },
              "fullDescription": {
                "text": "Marked prior to 0.3.9 is vulnerable to Cross-Site Scripting. When mangling is disabled via option &#34;mangle&#34;, marked don&#39;t escape target href. This allows attacker to inject arbitrary html-event into resulting a tag."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cx9b9f022f6dff",
                "id": "Cx9b9f022f-6dff (sca)",
                "description": "Marked prior to 0.3.9 is vulnerable to Cross-Site Scripting. When mangling is disabled via option &#34;mangle&#34;, marked don&#39;t escape target href. This allows attacker to inject arbitrary html-event into resulting a tag.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxbd6f2b91-dd38 (sca)",
              "name": "Cxbd6f2b91dd38",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue. This vulnerability is a reintroduction of CVE-2017-16137 in version 3.2.0.",
                "markdown": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue. This vulnerability is a reintroduction of CVE-2017-16137 in version 3.2.0."
              },
              "fullDescription": {
                "text": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue. This vulnerability is a reintroduction of CVE-2017-16137 in version 3.2.0."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cxbd6f2b91dd38",
                "id": "Cxbd6f2b91-dd38 (sca)",
                "description": "The debug module is vulnerable to regular expression denial of service when untrusted user input is passed into the o formatter. It takes around 50k characters to block for 2 seconds making this a low severity issue. This vulnerability is a reintroduction of CVE-2017-16137 in version 3.2.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxec49316b-56df (sca)",
              "name": "Cxec49316b56df",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package `js-yaml` before 3.13.0 is vulnerable to Denial of service as the function `storeMappingPair()` in file `lib/js-yaml/loader.js`, doesn&#39;t limit the user-supplied yaml, causing the map key to grow exponentially and give out a huge amount of output data, leading to a Denial-of-Service due to excessive memory usage.",
                "markdown": "The package `js-yaml` before 3.13.0 is vulnerable to Denial of service as the function `storeMappingPair()` in file `lib/js-yaml/loader.js`, doesn&#39;t limit the user-supplied yaml, causing the map key to grow exponentially and give out a huge amount of output data, leading to a Denial-of-Service due to excessive memory usage."
              },
              "fullDescription": {
                "text": "The package `js-yaml` before 3.13.0 is vulnerable to Denial of service as the function `storeMappingPair()` in file `lib/js-yaml/loader.js`, doesn&#39;t limit the user-supplied yaml, causing the map key to grow exponentially and give out a huge amount of output data, leading to a Denial-of-Service due to excessive memory usage."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cxec49316b56df",
                "id": "Cxec49316b-56df (sca)",
                "description": "The package `js-yaml` before 3.13.0 is vulnerable to Denial of service as the function `storeMappingPair()` in file `lib/js-yaml/loader.js`, doesn&#39;t limit the user-supplied yaml, causing the map key to grow exponentially and give out a huge amount of output data, leading to a Denial-of-Service due to excessive memory usage.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxef2b7924-22da (sca)",
              "name": "Cxef2b792422da",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Marked before 0.3.9 doesn&#39;t unescape lower case &#39;x&#39; characters in the hexadecimal form of HTML character entities, leading to potential XSS.",
                "markdown": "Marked before 0.3.9 doesn&#39;t unescape lower case &#39;x&#39; characters in the hexadecimal form of HTML character entities, leading to potential XSS."
              },
              "fullDescription": {
                "text": "Marked before 0.3.9 doesn&#39;t unescape lower case &#39;x&#39; characters in the hexadecimal form of HTML character entities, leading to potential XSS."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Cxef2b792422da",
                "id": "Cxef2b7924-22da (sca)",
                "description": "Marked before 0.3.9 doesn&#39;t unescape lower case &#39;x&#39; characters in the hexadecimal form of HTML character entities, leading to potential XSS.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Missing HSTS Header - 7630264517191277634 (sast)",
              "name": "Missing HSTS Header",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n",
                "markdown": "The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n"
              },
              "fullDescription": {
                "text": "The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n"
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Missing HSTS Header",
                "id": "Missing HSTS Header - 7630264517191277634 (sast)",
                "description": "The web-application does not define an HSTS header, leaving it vulnerable to attack.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "Container Traffic Not Bound To Host Interface - 451d79dc-0588-476a-ad03-3c7f0320abb3 [Taken from query_id] (kics)",
              "name": "Container Traffic Not Bound To Host Interface",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Incoming container traffic should be bound to a specific host interface Value: Docker compose file doesn't have 'ports' attribute bound to a specific host interface Excepted value: Docker compose file to have 'ports' attribute bound to a specific host interface.",
                "markdown": "Incoming container traffic should be bound to a specific host interface <br><br><strong>Value:</strong> Docker compose file doesn't have 'ports' attribute bound to a specific host interface <br><strong>Excepted value:</strong> Docker compose file to have 'ports' attribute bound to a specific host interface."
              },
              "fullDescription": {
                "text": "Incoming container traffic should be bound to a specific host interface Value: Docker compose file doesn't have 'ports' attribute bound to a specific host interface Excepted value: Docker compose file to have 'ports' attribute bound to a specific host interface."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Container Traffic Not Bound To Host Interface",
                "id": "Container Traffic Not Bound To Host Interface - 451d79dc-0588-476a-ad03-3c7f0320abb3 [Taken from query_id] (kics)",
                "description": "Incoming container traffic should be bound to a specific host interface Value: Docker compose file doesn't have 'ports' attribute bound to a specific host interface Excepted value: Docker compose file to have 'ports' attribute bound to a specific host interface.",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            },
            {
              "id": "Security-Policy - SecurityPolicyID (sscs-scorecard)",
              "name": "Security-Policy",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#security-policy",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the project has published a security policy."
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Security-Policy",
                "id": "Security-Policy - SecurityPolicyID (sscs-scorecard)",
                "description": "Determines if the project has published a security policy.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "Container Capabilities Unrestricted - ce76b7d0-9e77-464d-b86f-c5c48e03e22d [Taken from query_id] (kics)",
              "name": "Container Capabilities Unrestricted",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Some capabilities are not needed in certain (or any) containers. Make sure that you only add capabilities that your container needs. Drop unnecessary capabilities as well. Value: Docker compose file doesn't have 'cap_drop' attribute. Make sure your container only has necessary capabilities. Excepted value: Docker compose file to have 'cap_drop' attribute",
                "markdown": "Some capabilities are not needed in certain (or any) containers. Make sure that you only add capabilities that your container needs. Drop unnecessary capabilities as well. <br><br><strong>Value:</strong> Docker compose file doesn't have 'cap_drop' attribute. Make sure your container only has necessary capabilities. <br><strong>Excepted value:</strong> Docker compose file to have 'cap_drop' attribute"
              },
              "fullDescription": {
                "text": "Some capabilities are not needed in certain (or any) containers. Make sure that you only add capabilities that your container needs. Drop unnecessary capabilities as well. Value: Docker compose file doesn't have 'cap_drop' attribute. Make sure your container only has necessary capabilities. Excepted value: Docker compose file to have 'cap_drop' attribute"
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Container Capabilities Unrestricted",
                "id": "Container Capabilities Unrestricted - ce76b7d0-9e77-464d-b86f-c5c48e03e22d [Taken from query_id] (kics)",
                "description": "Some capabilities are not needed in certain (or any) containers. Make sure that you only add capabilities that your container needs. Drop unnecessary capabilities as well. Value: Docker compose file doesn't have 'cap_drop' attribute. Make sure your container only has necessary capabilities. Excepted value: Docker compose file to have 'cap_drop' attribute",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            },
            {
              "id": "Memory Not Limited - bb9ac4f7-e13b-423d-a010-c74a1bfbe492 [Taken from query_id] (kics)",
              "name": "Memory Not Limited",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory Value: 'deploy' is not defined Excepted value: 'deploy.resources.limits.memory' should be defined",
                "markdown": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory <br><br><strong>Value:</strong> 'deploy' is not defined <br><strong>Excepted value:</strong> 'deploy.resources.limits.memory' should be defined"
              },
              "fullDescription": {
                "text": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory Value: 'deploy' is not defined Excepted value: 'deploy.resources.limits.memory' should be defined"
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Memory Not Limited",
                "id": "Memory Not Limited - bb9ac4f7-e13b-423d-a010-c74a1bfbe492 [Taken from query_id] (kics)",
                "description": "Memory limits should be defined for each container. This prevents potential resource exhaustion by ensuring that containers consume not more than the designated amount of memory Value: 'deploy' is not defined Excepted value: 'deploy.resources.limits.memory' should be defined",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            },
            {
              "id": "Open Redirect - 1110909642375850288 (sast)",
              "name": "Open Redirect",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The potentially tainted value provided by\u00a0url in\u00a0/app/routes/index.js at line 72 is used as a destination URL by redirect in /app/routes/index.js at line 72, potentially allowing attackers to perform an open redirection.\n\n",
                "markdown": "The potentially tainted value provided by\u00a0url in\u00a0/app/routes/index.js at line 72 is used as a destination URL by redirect in /app/routes/index.js at line 72, potentially allowing attackers to perform an open redirection.\n\n"
              },
              "fullDescription": {
                "text": "The potentially tainted value provided by\u00a0url in\u00a0/app/routes/index.js at line 72 is used as a destination URL by redirect in /app/routes/index.js at line 72, potentially allowing attackers to perform an open redirection.\n\n"
              },
              "properties": {
                "security-severity": "4.0",
                "name": "Open Redirect",
                "id": "Open Redirect - 1110909642375850288 (sast)",
                "description": "The potentially tainted value provided by\u00a0url in\u00a0/app/routes/index.js at line 72 is used as a destination URL by redirect in /app/routes/index.js at line 72, potentially allowing attackers to perform an open redirection.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "Healthcheck Instruction Missing - b03a748a-542d-44f4-bb86-9199ab4fd2d5 [Taken from query_id] (kics)",
              "name": "Healthcheck Instruction Missing",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working Value: Dockerfile doesn't contain instruction 'HEALTHCHECK' Excepted value: Dockerfile should contain instruction 'HEALTHCHECK'",
                "markdown": "Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working <br><br><strong>Value:</strong> Dockerfile doesn't contain instruction 'HEALTHCHECK' <br><strong>Excepted value:</strong> Dockerfile should contain instruction 'HEALTHCHECK'"
              },
              "fullDescription": {
                "text": "Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working Value: Dockerfile doesn't contain instruction 'HEALTHCHECK' Excepted value: Dockerfile should contain instruction 'HEALTHCHECK'"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Healthcheck Instruction Missing",
                "id": "Healthcheck Instruction Missing - b03a748a-542d-44f4-bb86-9199ab4fd2d5 [Taken from query_id] (kics)",
                "description": "Ensure that HEALTHCHECK is being used. The HEALTHCHECK instruction tells Docker how to test a container to check that it is still working Value: Dockerfile doesn't contain instruction 'HEALTHCHECK' Excepted value: Dockerfile should contain instruction 'HEALTHCHECK'",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            },
            {
              "id": "Using Unnamed Build Stages - 68a51e22-ae5a-4d48-8e87-b01a323605c9 [Taken from query_id] (kics)",
              "name": "Using Unnamed Build Stages",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": " This query is used to ensure that build stages are named. This way even if the Dockerfile is re-ordered, the COPY instruction doesn&#39;t break. Value: COPY '--from' does not reference a previously defined FROM alias Excepted value: COPY '--from' should reference a previously defined FROM alias",
                "markdown": " This query is used to ensure that build stages are named. This way even if the Dockerfile is re-ordered, the COPY instruction doesn&#39;t break. <br><br><strong>Value:</strong> COPY '--from' does not reference a previously defined FROM alias <br><strong>Excepted value:</strong> COPY '--from' should reference a previously defined FROM alias"
              },
              "fullDescription": {
                "text": " This query is used to ensure that build stages are named. This way even if the Dockerfile is re-ordered, the COPY instruction doesn&#39;t break. Value: COPY '--from' does not reference a previously defined FROM alias Excepted value: COPY '--from' should reference a previously defined FROM alias"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Using Unnamed Build Stages",
                "id": "Using Unnamed Build Stages - 68a51e22-ae5a-4d48-8e87-b01a323605c9 [Taken from query_id] (kics)",
                "description": " This query is used to ensure that build stages are named. This way even if the Dockerfile is re-ordered, the COPY instruction doesn&#39;t break. Value: COPY '--from' does not reference a previously defined FROM alias Excepted value: COPY '--from' should reference a previously defined FROM alias",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            },
            {
              "id": "Unsafe Use Of Target blank - 17155209939029667221 (sast)",
              "name": "Unsafe Use Of Target blank",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Using &lt;a href=&#34;/tutorial&#34; target=&#34;_blank&#34;&gt; at line 79 of /app/views/login.html, without correctly setting the &#34;rel&#34; attribute, or disassociating the new window from its parent, is an unsafe way of opening a new window.",
                "markdown": "Using &lt;a href=&#34;/tutorial&#34; target=&#34;_blank&#34;&gt; at line 79 of /app/views/login.html, without correctly setting the &#34;rel&#34; attribute, or disassociating the new window from its parent, is an unsafe way of opening a new window."
              },
              "fullDescription": {
                "text": "Using &lt;a href=&#34;/tutorial&#34; target=&#34;_blank&#34;&gt; at line 79 of /app/views/login.html, without correctly setting the &#34;rel&#34; attribute, or disassociating the new window from its parent, is an unsafe way of opening a new window."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Unsafe Use Of Target blank",
                "id": "Unsafe Use Of Target blank - 17155209939029667221 (sast)",
                "description": "Using &lt;a href=&#34;/tutorial&#34; target=&#34;_blank&#34;&gt; at line 79 of /app/views/login.html, without correctly setting the &#34;rel&#34; attribute, or disassociating the new window from its parent, is an unsafe way of opening a new window.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "Log Forging - 18393124805143970484 (sast)",
              "name": "Log Forging",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Method  at line 57 of /app/routes/session.js gets user input from element body. This element\u2019s value flows through the code without being properly sanitized or validated, and is eventually used in writing an audit log in  at line 64 of /app/routes/session.js.\n\nThis may enable Log Forging.\n\n",
                "markdown": "Method  at line 57 of /app/routes/session.js gets user input from element body. This element\u2019s value flows through the code without being properly sanitized or validated, and is eventually used in writing an audit log in  at line 64 of /app/routes/session.js.\n\nThis may enable Log Forging.\n\n"
              },
              "fullDescription": {
                "text": "Method  at line 57 of /app/routes/session.js gets user input from element body. This element\u2019s value flows through the code without being properly sanitized or validated, and is eventually used in writing an audit log in  at line 64 of /app/routes/session.js.\n\nThis may enable Log Forging.\n\n"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Log Forging",
                "id": "Log Forging - 18393124805143970484 (sast)",
                "description": "Method  at line 57 of /app/routes/session.js gets user input from element body. This element\u2019s value flows through the code without being properly sanitized or validated, and is eventually used in writing an audit log in  at line 64 of /app/routes/session.js.\n\nThis may enable Log Forging.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "CVE-2017-18869 (sca)",
              "name": "Cve201718869",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks.",
                "markdown": "A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks."
              },
              "fullDescription": {
                "text": "A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve201718869",
                "id": "CVE-2017-18869 (sca)",
                "description": "A TOCTOU issue in the chownr package before 1.1.0 for Node.js 10.10 could allow a local attacker to trick it into descending into unintended directories via symlink attacks.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2024-11053 (containers)",
              "name": "Cve202411053",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "When asked to both use a &#34;.netrc&#34; file for credentials and to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances. This flaw only manifests itself if the &#34;netrc&#34; file has an entry that matches the redirect target hostname but the entry either omits just the password or omits both login and password. This issue affects curl 6.5 through 8.11.0.",
                "markdown": "When asked to both use a &#34;.netrc&#34; file for credentials and to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances. This flaw only manifests itself if the &#34;netrc&#34; file has an entry that matches the redirect target hostname but the entry either omits just the password or omits both login and password. This issue affects curl 6.5 through 8.11.0."
              },
              "fullDescription": {
                "text": "When asked to both use a &#34;.netrc&#34; file for credentials and to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances. This flaw only manifests itself if the &#34;netrc&#34; file has an entry that matches the redirect target hostname but the entry either omits just the password or omits both login and password. This issue affects curl 6.5 through 8.11.0."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve202411053",
                "id": "CVE-2024-11053 (containers)",
                "description": "When asked to both use a &#34;.netrc&#34; file for credentials and to follow HTTP redirects, curl could leak the password used for the first host to the followed-to host under certain circumstances. This flaw only manifests itself if the &#34;netrc&#34; file has an entry that matches the redirect target hostname but the entry either omits just the password or omits both login and password. This issue affects curl 6.5 through 8.11.0.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2024-2511 (containers)",
              "name": "Cve20242511",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default &#34;SSL_OP_NO_TICKET&#34; option is being used (but not if &#34;early_data&#34; support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. This issue affects openssl versions 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.13, 3.1.0-alpha1 through 3.1.5, and 3.2.0-alpha1 through 3.2.1.",
                "markdown": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default &#34;SSL_OP_NO_TICKET&#34; option is being used (but not if &#34;early_data&#34; support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. This issue affects openssl versions 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.13, 3.1.0-alpha1 through 3.1.5, and 3.2.0-alpha1 through 3.2.1."
              },
              "fullDescription": {
                "text": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default &#34;SSL_OP_NO_TICKET&#34; option is being used (but not if &#34;early_data&#34; support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. This issue affects openssl versions 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.13, 3.1.0-alpha1 through 3.1.5, and 3.2.0-alpha1 through 3.2.1."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve20242511",
                "id": "CVE-2024-2511 (containers)",
                "description": "Issue summary: Some non-default TLS server configurations can cause unbounded memory growth when processing TLSv1.3 sessions Impact summary: An attacker may exploit certain server configurations to trigger unbounded memory growth that would lead to a Denial of Service This problem can occur in TLSv1.3 if the non-default &#34;SSL_OP_NO_TICKET&#34; option is being used (but not if &#34;early_data&#34; support is also configured and the default anti-replay protection is in use). In this case, under certain conditions, the session cache can get into an incorrect state and it will fail to flush properly as it fills. The session cache will continue to grow in an unbounded manner. A malicious client could deliberately create the scenario for this failure to force a Denial of Service. It may also happen by accident in normal operation. This issue only affects TLS servers supporting TLSv1.3. It does not affect TLS clients. The FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. This issue affects openssl versions 1.1.1-pre1 through 1.1.1w, 3.0.0-alpha1 through 3.0.13, 3.1.0-alpha1 through 3.1.5, and 3.2.0-alpha1 through 3.2.1.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-30258 (containers)",
              "name": "Cve202530258",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a &#34;verification DoS.&#34;",
                "markdown": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a &#34;verification DoS.&#34;"
              },
              "fullDescription": {
                "text": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a &#34;verification DoS.&#34;"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve202530258",
                "id": "CVE-2025-30258 (containers)",
                "description": "In GnuPG before 2.5.5, if a user chooses to import a certificate with certain crafted subkey data that lacks a valid backsig or that has incorrect usage flags, the user loses the ability to verify signatures made from certain other signing keys, aka a &#34;verification DoS.&#34;",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-4878 (containers)",
              "name": "Cve20254878",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in libssh, where an uninitialized variable exists under certain conditions in the &#34;privatekey_from_file()&#34; function. This flaw can be triggered if the file specified by the filename doesn&#39;t exist and may lead to possible signing failures or heap corruption. The issue has been patched in the version 0.11.2.",
                "markdown": "A vulnerability was found in libssh, where an uninitialized variable exists under certain conditions in the &#34;privatekey_from_file()&#34; function. This flaw can be triggered if the file specified by the filename doesn&#39;t exist and may lead to possible signing failures or heap corruption. The issue has been patched in the version 0.11.2."
              },
              "fullDescription": {
                "text": "A vulnerability was found in libssh, where an uninitialized variable exists under certain conditions in the &#34;privatekey_from_file()&#34; function. This flaw can be triggered if the file specified by the filename doesn&#39;t exist and may lead to possible signing failures or heap corruption. The issue has been patched in the version 0.11.2."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve20254878",
                "id": "CVE-2025-4878 (containers)",
                "description": "A vulnerability was found in libssh, where an uninitialized variable exists under certain conditions in the &#34;privatekey_from_file()&#34; function. This flaw can be triggered if the file specified by the filename doesn&#39;t exist and may lead to possible signing failures or heap corruption. The issue has been patched in the version 0.11.2.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-54798 (sca)",
              "name": "Cve202554798",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "tmp is a temporary file and directory creator for node.js. In versions prior to 0.2.4, tmp is vulnerable to an arbitrary temporary file &#34;/&#34; directory write via symbolic link &#34;dir&#34; parameter.\n\n",
                "markdown": "tmp is a temporary file and directory creator for node.js. In versions prior to 0.2.4, tmp is vulnerable to an arbitrary temporary file &#34;/&#34; directory write via symbolic link &#34;dir&#34; parameter.\n\n"
              },
              "fullDescription": {
                "text": "tmp is a temporary file and directory creator for node.js. In versions prior to 0.2.4, tmp is vulnerable to an arbitrary temporary file &#34;/&#34; directory write via symbolic link &#34;dir&#34; parameter.\n\n"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve202554798",
                "id": "CVE-2025-54798 (sca)",
                "description": "tmp is a temporary file and directory creator for node.js. In versions prior to 0.2.4, tmp is vulnerable to an arbitrary temporary file &#34;/&#34; directory write via symbolic link &#34;dir&#34; parameter.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2025-5889 (sca)",
              "name": "Cve20255889",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function &#34;expand&#34; of the file &#34;index.js&#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue.",
                "markdown": "A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function &#34;expand&#34; of the file &#34;index.js&#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue."
              },
              "fullDescription": {
                "text": "A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function &#34;expand&#34; of the file &#34;index.js&#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve20255889",
                "id": "CVE-2025-5889 (sca)",
                "description": "A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function &#34;expand&#34; of the file &#34;index.js&#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "CVE-2025-5889 (containers)",
              "name": "Cve20255889",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function &#34;expand&#34; of the file &#34;index.js&#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue.",
                "markdown": "A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function &#34;expand&#34; of the file &#34;index.js&#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue."
              },
              "fullDescription": {
                "text": "A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function &#34;expand&#34; of the file &#34;index.js&#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve20255889",
                "id": "CVE-2025-5889 (containers)",
                "description": "A vulnerability was found in juliangruber brace-expansion. It has been rated as problematic. Affected by this issue is the function &#34;expand&#34; of the file &#34;index.js&#34;. The manipulation leads to Inefficient Regular Expression complexity. The attack may be launched remotely. The complexity of an attack is rather high. The exploitation is known to be difficult. The exploit has been disclosed to the public and may be used. This issue affects brace-expansion package versions 1.0.0 through 1.1.11, 2.0.0 through 2.0.1, 3.0.0, 4.0.0. It is recommended to apply a patch to fix this issue.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "CVE-2025-7339 (sca)",
              "name": "Cve20257339",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The on-headers is a node.js middleware for listening to when a response writes headers. A bug in on-headers versions prior to 1.1.0 may result in response headers being inadvertently modified when an array is passed to `response.writeHead()`. Users are strongly encouraged to upgrade to a fixed version, but this issue can be worked around by passing an object to `response.writeHead()` rather than an array.",
                "markdown": "The on-headers is a node.js middleware for listening to when a response writes headers. A bug in on-headers versions prior to 1.1.0 may result in response headers being inadvertently modified when an array is passed to `response.writeHead()`. Users are strongly encouraged to upgrade to a fixed version, but this issue can be worked around by passing an object to `response.writeHead()` rather than an array."
              },
              "fullDescription": {
                "text": "The on-headers is a node.js middleware for listening to when a response writes headers. A bug in on-headers versions prior to 1.1.0 may result in response headers being inadvertently modified when an array is passed to `response.writeHead()`. Users are strongly encouraged to upgrade to a fixed version, but this issue can be worked around by passing an object to `response.writeHead()` rather than an array."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cve20257339",
                "id": "CVE-2025-7339 (sca)",
                "description": "The on-headers is a node.js middleware for listening to when a response writes headers. A bug in on-headers versions prior to 1.1.0 may result in response headers being inadvertently modified when an array is passed to `response.writeHead()`. Users are strongly encouraged to upgrade to a fixed version, but this issue can be worked around by passing an object to `response.writeHead()` rather than an array.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx61ff18e9-706e (sca)",
              "name": "Cx61ff18e9706e",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Utile is vulnerable to uninitialized buffer allocation, which allows to extract sensitive data from uninitialized memory or to cause a Denial of Service by passing in a large number, in setups where typed user input can be passed (e.g. from JSON). This module is not maintained. This issue affects Utile versions 0.0.8 and after. ",
                "markdown": "Utile is vulnerable to uninitialized buffer allocation, which allows to extract sensitive data from uninitialized memory or to cause a Denial of Service by passing in a large number, in setups where typed user input can be passed (e.g. from JSON). This module is not maintained. This issue affects Utile versions 0.0.8 and after. "
              },
              "fullDescription": {
                "text": "Utile is vulnerable to uninitialized buffer allocation, which allows to extract sensitive data from uninitialized memory or to cause a Denial of Service by passing in a large number, in setups where typed user input can be passed (e.g. from JSON). This module is not maintained. This issue affects Utile versions 0.0.8 and after. "
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cx61ff18e9706e",
                "id": "Cx61ff18e9-706e (sca)",
                "description": "Utile is vulnerable to uninitialized buffer allocation, which allows to extract sensitive data from uninitialized memory or to cause a Denial of Service by passing in a large number, in setups where typed user input can be passed (e.g. from JSON). This module is not maintained. This issue affects Utile versions 0.0.8 and after. ",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx8bc4df28-fcf5 (sca)",
              "name": "Cx8bc4df28fcf5",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In NPM &#34;debug&#34; versions prior to 4.4.0, the &#34;enable&#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user&#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137.",
                "markdown": "In NPM &#34;debug&#34; versions prior to 4.4.0, the &#34;enable&#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user&#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137."
              },
              "fullDescription": {
                "text": "In NPM &#34;debug&#34; versions prior to 4.4.0, the &#34;enable&#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user&#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cx8bc4df28fcf5",
                "id": "Cx8bc4df28-fcf5 (sca)",
                "description": "In NPM &#34;debug&#34; versions prior to 4.4.0, the &#34;enable&#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user&#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cx8bc4df28-fcf5 (containers)",
              "name": "Cx8bc4df28fcf5",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "In NPM &#34;debug&#34; versions prior to 4.4.0, the &#34;enable&#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user&#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137.",
                "markdown": "In NPM &#34;debug&#34; versions prior to 4.4.0, the &#34;enable&#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user&#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137."
              },
              "fullDescription": {
                "text": "In NPM &#34;debug&#34; versions prior to 4.4.0, the &#34;enable&#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user&#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cx8bc4df28fcf5",
                "id": "Cx8bc4df28-fcf5 (containers)",
                "description": "In NPM &#34;debug&#34; versions prior to 4.4.0, the &#34;enable&#34; function accepts a regular expression from user input without escaping it. Arbitrary regular expressions could be injected to cause a Denial of Service attack on the user&#39;s browser, otherwise known as a ReDoS (Regular Expression Denial of Service). This is a different issue than CVE-2017-16137.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "Cxa6b1c6b3-0f59 (sca)",
              "name": "Cxa6b1c6b30f59",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "Http-signature prior to 1.0.0 is vulnerable to Timing Attacks against the signature verification. The library performs strict equality comparison (`===`) to validate the signatures. This built-in JavaScript comparison works by comparing the values character by character, meaning the comparison returns in different amounts of time depending on how many characters match. This can be used to guess the valid signature one character at a time. The issue was mitigated by double-hashing before comparing values. \n\n",
                "markdown": "Http-signature prior to 1.0.0 is vulnerable to Timing Attacks against the signature verification. The library performs strict equality comparison (`===`) to validate the signatures. This built-in JavaScript comparison works by comparing the values character by character, meaning the comparison returns in different amounts of time depending on how many characters match. This can be used to guess the valid signature one character at a time. The issue was mitigated by double-hashing before comparing values. \n\n"
              },
              "fullDescription": {
                "text": "Http-signature prior to 1.0.0 is vulnerable to Timing Attacks against the signature verification. The library performs strict equality comparison (`===`) to validate the signatures. This built-in JavaScript comparison works by comparing the values character by character, meaning the comparison returns in different amounts of time depending on how many characters match. This can be used to guess the valid signature one character at a time. The issue was mitigated by double-hashing before comparing values. \n\n"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cxa6b1c6b30f59",
                "id": "Cxa6b1c6b3-0f59 (sca)",
                "description": "Http-signature prior to 1.0.0 is vulnerable to Timing Attacks against the signature verification. The library performs strict equality comparison (`===`) to validate the signatures. This built-in JavaScript comparison works by comparing the values character by character, meaning the comparison returns in different amounts of time depending on how many characters match. This can be used to guess the valid signature one character at a time. The issue was mitigated by double-hashing before comparing values. \n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxda14f253-4e52 (sca)",
              "name": "Cxda14f2534e52",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package `bluebird` is vulnerable to memory leak, when running the function longStackTraces() with the flag `--expose_gc`. This causes a significant increase in the memory usage, affecting the server&#39;s availability.",
                "markdown": "The package `bluebird` is vulnerable to memory leak, when running the function longStackTraces() with the flag `--expose_gc`. This causes a significant increase in the memory usage, affecting the server&#39;s availability."
              },
              "fullDescription": {
                "text": "The package `bluebird` is vulnerable to memory leak, when running the function longStackTraces() with the flag `--expose_gc`. This causes a significant increase in the memory usage, affecting the server&#39;s availability."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cxda14f2534e52",
                "id": "Cxda14f253-4e52 (sca)",
                "description": "The package `bluebird` is vulnerable to memory leak, when running the function longStackTraces() with the flag `--expose_gc`. This causes a significant increase in the memory usage, affecting the server&#39;s availability.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sca"
                ]
              }
            },
            {
              "id": "Cxda14f253-4e52 (containers)",
              "name": "Cxda14f2534e52",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "The package `bluebird` is vulnerable to memory leak, when running the function longStackTraces() with the flag `--expose_gc`. This causes a significant increase in the memory usage, affecting the server&#39;s availability.",
                "markdown": "The package `bluebird` is vulnerable to memory leak, when running the function longStackTraces() with the flag `--expose_gc`. This causes a significant increase in the memory usage, affecting the server&#39;s availability."
              },
              "fullDescription": {
                "text": "The package `bluebird` is vulnerable to memory leak, when running the function longStackTraces() with the flag `--expose_gc`. This causes a significant increase in the memory usage, affecting the server&#39;s availability."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cxda14f2534e52",
                "id": "Cxda14f253-4e52 (containers)",
                "description": "The package `bluebird` is vulnerable to memory leak, when running the function longStackTraces() with the flag `--expose_gc`. This causes a significant increase in the memory usage, affecting the server&#39;s availability.",
                "tags": [
                  "security",
                  "checkmarx",
                  "containers"
                ]
              }
            },
            {
              "id": "Missing CSP Header - 729519850006803664 (sast)",
              "name": "Missing CSP Header",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "A Content Security Policy is not explicitly defined within the web-application.\n\n",
                "markdown": "A Content Security Policy is not explicitly defined within the web-application.\n\n"
              },
              "fullDescription": {
                "text": "A Content Security Policy is not explicitly defined within the web-application.\n\n"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Missing CSP Header",
                "id": "Missing CSP Header - 729519850006803664 (sast)",
                "description": "A Content Security Policy is not explicitly defined within the web-application.\n\n",
                "tags": [
                  "security",
                  "checkmarx",
                  "sast"
                ]
              }
            },
            {
              "id": "Cpus Not Limited - 6b610c50-99fb-4ef0-a5f3-e312fd945bc3 [Taken from query_id] (kics)",
              "name": "Cpus Not Limited",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests Value: 'deploy' is not defined Excepted value: 'deploy.resources.limits.cpus' should be defined",
                "markdown": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests <br><br><strong>Value:</strong> 'deploy' is not defined <br><strong>Excepted value:</strong> 'deploy.resources.limits.cpus' should be defined"
              },
              "fullDescription": {
                "text": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests Value: 'deploy' is not defined Excepted value: 'deploy.resources.limits.cpus' should be defined"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Cpus Not Limited",
                "id": "Cpus Not Limited - 6b610c50-99fb-4ef0-a5f3-e312fd945bc3 [Taken from query_id] (kics)",
                "description": "CPU limits should be set because if the system has CPU time free, a container is guaranteed to be allocated as much CPU as it requests Value: 'deploy' is not defined Excepted value: 'deploy.resources.limits.cpus' should be defined",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            },
            {
              "id": "CII-Best-Practices - CIIBestPracticesID (sscs-scorecard)",
              "name": "CII-Best-Practices",
              "helpUri": "https://github.com/ossf/scorecard/blob/main/docs/checks.md#cii-best-practices",
              "help": {
                "text": "Implement the remediation recommendations provided in the URL",
                "markdown": "Implement the remediation recommendations provided in the URL"
              },
              "fullDescription": {
                "text": "Determines if the project has an OpenSSF (formerly CII) Best Practices Badge."
              },
              "properties": {
                "security-severity": "2.0",
                "name": "CII-Best-Practices",
                "id": "CII-Best-Practices - CIIBestPracticesID (sscs-scorecard)",
                "description": "Determines if the project has an OpenSSF (formerly CII) Best Practices Badge.",
                "tags": [
                  "security",
                  "checkmarx",
                  "sscs-scorecard"
                ]
              }
            },
            {
              "id": "Chown Flag Exists - aa93e17f-b6db-4162-9334-c70334e7ac28 [Taken from query_id] (kics)",
              "name": "Chown Flag Exists",
              "helpUri": "https://checkmarx.com/resource/documents/en/34965-67042-checkmarx-one.html",
              "help": {
                "text": "It is considered a best practice for every executable in a container to be owned by the root user even if it is executed by a non-root user, only execution permissions are required on the file, not ownership Value: The 'Dockerfile' contains the 'chown' flag Excepted value: The 'Dockerfile' shouldn\u00b4t contain the 'chown' flag",
                "markdown": "It is considered a best practice for every executable in a container to be owned by the root user even if it is executed by a non-root user, only execution permissions are required on the file, not ownership <br><br><strong>Value:</strong> The 'Dockerfile' contains the 'chown' flag <br><strong>Excepted value:</strong> The 'Dockerfile' shouldn\u00b4t contain the 'chown' flag"
              },
              "fullDescription": {
                "text": "It is considered a best practice for every executable in a container to be owned by the root user even if it is executed by a non-root user, only execution permissions are required on the file, not ownership Value: The 'Dockerfile' contains the 'chown' flag Excepted value: The 'Dockerfile' shouldn\u00b4t contain the 'chown' flag"
              },
              "properties": {
                "security-severity": "2.0",
                "name": "Chown Flag Exists",
                "id": "Chown Flag Exists - aa93e17f-b6db-4162-9334-c70334e7ac28 [Taken from query_id] (kics)",
                "description": "It is considered a best practice for every executable in a container to be owned by the root user even if it is executed by a non-root user, only execution permissions are required on the file, not ownership Value: The 'Dockerfile' contains the 'chown' flag Excepted value: The 'Dockerfile' shouldn\u00b4t contain the 'chown' flag",
                "tags": [
                  "security",
                  "checkmarx",
                  "kics"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "CVE-2017-16042 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-growl-1.9.2 (CVE-2017-16042)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16492 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-extend-3.0.0 (CVE-2018-16492)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10744 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.17.11 (CVE-2019-10744)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10744 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.13.1 (CVE-2019-10744)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10744 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-2.4.2 (CVE-2019-10744)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10746 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-mixin-deep-1.3.1 (CVE-2019-10746)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10747 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-set-value-0.4.3 (CVE-2019-10747)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10747 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-set-value-2.0.0 (CVE-2019-10747)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-19919 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (CVE-2019-19919)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28282 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-getobject-0.1.0 (CVE-2020-28282)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7610 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-bson-1.0.9 (CVE-2020-7610)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7774 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-y18n-3.2.1 (CVE-2020-7774)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7788 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-ini-1.3.4 (CVE-2020-7788)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7788 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-ini-1.3.5 (CVE-2020-7788)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23369 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (CVE-2021-23369)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23383 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (CVE-2021-23383)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23440 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-set-value-2.0.0 (CVE-2021-23440)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23440 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-set-value-0.4.3 (CVE-2021-23440)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23807 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-jsonpointer-4.0.0 (CVE-2021-23807)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23807 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-jsonpointer-4.0.1 (CVE-2021-23807)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3918 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-json-schema-0.2.3 (CVE-2021-3918)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimist-0.0.10 (CVE-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimist-1.2.5 (CVE-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimist-0.0.8 (CVE-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-44906 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimist-1.2.0 (CVE-2021-44906)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-37434 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2022-37434)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25344 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-swig-1.4.2 (CVE-2023-25344)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tough-cookie-2.2.2 (CVE-2023-26136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tough-cookie-2.3.1 (CVE-2023-26136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tough-cookie-2.4.3 (CVE-2023-26136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tough-cookie-2.3.4 (CVE-2023-26136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-26136 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2023-26136)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-42282 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2023-42282)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45311 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-fsevents-1.2.9 (CVE-2023-45311)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3596 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-3596)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3596 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-3596)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3596 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-3596)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3596 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-3596)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-3596 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-3596)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37371 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37371)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37371 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37371)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37371 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37371)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37371 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37371)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37371 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37371)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-40643 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-htmlparser2-3.8.3 (CVE-2024-40643)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-45337 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-45337)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-7783 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-form-data-2.1.4 (CVE-2025-7783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-7783 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-form-data-0.1.4 (CVE-2025-7783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-7783 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-form-data-1.0.1 (CVE-2025-7783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-7783 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-form-data-2.0.0 (CVE-2025-7783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-7783 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-form-data-2.3.3 (CVE-2025-7783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-7783 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-7783)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx2937c64c-029b (sca)",
          "level": "error",
          "message": {
            "text": "Npm-coveralls-2.13.3 (Cx2937c64c-029b)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx91bd0ed8-3d13 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (Cx91bd0ed8-3d13)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx9fce0189-774f (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (Cx9fce0189-774f)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxb2bfdbf4-dc11 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (Cxb2bfdbf4-dc11)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Code Injection - 18264905025034185052 (sast)",
          "level": "error",
          "message": {
            "text": "Code Injection"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 40,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "Code Injection - 18264905025034185052 (sast)",
          "level": "error",
          "message": {
            "text": "Code Injection"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 36,
                  "endColumn": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "Code Injection - 18264905025034185052 (sast)",
          "level": "error",
          "message": {
            "text": "Code Injection"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 38,
                  "endColumn": 44
                }
              }
            }
          ]
        },
        {
          "ruleId": "Token-Permissions - TokenPermissionsID (sscs-scorecard)",
          "level": "error",
          "message": {
            "text": "score is 0: no topLevel permission defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/lint.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH"
          }
        },
        {
          "ruleId": "Hashicorp-Tf-Password - hashicorp-tf-password (sscs-secret-detection)",
          "level": "error",
          "message": {
            "text": "No description provided"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/db-reset.js"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "\"Use***"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH",
            "validity": "Unknown"
          }
        },
        {
          "ruleId": "SSRF - 9890841350290224058 (sast)",
          "level": "error",
          "message": {
            "text": "SSRF"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/research.js"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 51,
                  "endColumn": 57
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/research.js"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 19,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/research.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "Generic-Api-Key - generic-api-key (sscs-secret-detection)",
          "level": "error",
          "message": {
            "text": "No description provided"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "config/env/test.js"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "v9dn***"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH",
            "validity": "Unknown"
          }
        },
        {
          "ruleId": "Generic-Api-Key - generic-api-key (sscs-secret-detection)",
          "level": "error",
          "message": {
            "text": "No description provided"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "config/env/development.js"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "v9dn***"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH",
            "validity": "Unknown"
          }
        },
        {
          "ruleId": "Dependency-Update-Tool - DependencyUpdateToolID (sscs-scorecard)",
          "level": "error",
          "message": {
            "text": "score is 0: no update tool detected:\nWarn: tool &#39;RenovateBot&#39; is not used\nWarn: tool &#39;Dependabot&#39; is not used\nWarn: tool &#39;PyUp&#39; is not used"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "UNKNOWN_FILE"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH"
          }
        },
        {
          "ruleId": "CVE-2014-10064 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-0.6.6 (CVE-2014-10064)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2015-8858 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-uglify-js-2.4.24 (CVE-2015-8858)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10540 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimatch-0.3.0 (CVE-2016-10540)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-2515 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-hawk-1.0.0 (CVE-2016-2515)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000048 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-6.2.1 (CVE-2017-1000048)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000048 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-5.2.1 (CVE-2017-1000048)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000048 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-0.6.6 (CVE-2017-1000048)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15010 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tough-cookie-2.2.2 (CVE-2017-15010)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-15010 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tough-cookie-2.3.1 (CVE-2017-15010)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16032 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-brace-expansion-1.1.6 (CVE-2017-16032)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16114 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-marked-0.3.5 (CVE-2017-16114)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16138 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-mime-1.2.11 (CVE-2017-16138)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18077 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-brace-expansion-1.1.6 (CVE-2017-18077)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-20834 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-2.2.1 (CVE-2018-20834)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-3728 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-hoek-0.9.1 (CVE-2018-3728)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-3728 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-hoek-2.16.3 (CVE-2018-3728)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-3737 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-sshpk-1.10.1 (CVE-2018-3737)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-13173 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-fstream-1.0.10 (CVE-2019-13173)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16776 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-npm-3.10.10 (CVE-2019-16776)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20149 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-kind-of-6.0.2 (CVE-2019-20149)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20920 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (CVE-2019-20920)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-20922 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (CVE-2019-20922)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28469 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-glob-parent-2.0.0 (CVE-2020-28469)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28469 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-glob-parent-3.1.0 (CVE-2020-28469)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7662 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-websocket-extensions-0.1.3 (CVE-2020-7662)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7729 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-grunt-1.0.3 (CVE-2020-7729)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7754 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-npm-user-validate-0.1.5 (CVE-2020-7754)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8116 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-dot-prop-4.2.0 (CVE-2020-8116)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8203 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-2.4.2 (CVE-2020-8203)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8203 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.17.11 (CVE-2020-8203)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8203 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.13.1 (CVE-2020-8203)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23337 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.17.20 (CVE-2021-23337)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23337 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.17.11 (CVE-2021-23337)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23337 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.13.1 (CVE-2021-23337)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23337 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-2.4.2 (CVE-2021-23337)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23343 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-path-parse-1.0.5 (CVE-2021-23343)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23358 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-underscore-1.9.1 (CVE-2021-23358)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23358 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-underscore-1.8.3 (CVE-2021-23358)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32803 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-2.2.1 (CVE-2021-32803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32803 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-4.4.8 (CVE-2021-32803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-4.4.8 (CVE-2021-32804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-32804 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-2.2.1 (CVE-2021-32804)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-33623 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-trim-newlines-1.0.0 (CVE-2021-33623)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-4.4.8 (CVE-2021-37701)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37701 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-2.2.1 (CVE-2021-37701)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-4.4.8 (CVE-2021-37712)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37712 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-2.2.1 (CVE-2021-37712)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-2.2.1 (CVE-2021-37713)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-37713 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tar-4.4.8 (CVE-2021-37713)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2021-3807)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-ansi-regex-3.0.0 (CVE-2021-3807)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2021-3807)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-ansi-regex-2.1.1 (CVE-2021-3807)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-ansi-regex-2.0.0 (CVE-2021-3807)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3807 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2021-3807)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-3820 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-i-0.3.6 (CVE-2021-3820)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-43138 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-async-2.6.1 (CVE-2021-43138)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0144 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-shelljs-0.3.0 (CVE-2022-0144)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-1537 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-grunt-1.0.3 (CVE-2022-1537)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21680 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-marked-0.3.5 (CVE-2022-21680)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21681 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-marked-0.3.5 (CVE-2022-21681)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21803 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-nconf-0.6.9 (CVE-2022-21803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-21803 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-nconf-0.10.0 (CVE-2022-21803)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24785 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-moment-2.24.0 (CVE-2022-24785)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-5.2.1 (CVE-2022-24999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-6.5.2 (CVE-2022-24999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-6.3.2 (CVE-2022-24999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-6.2.1 (CVE-2022-24999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2022-24999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-24999 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-0.6.6 (CVE-2022-24999)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25881 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2022-25881)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-semver-5.3.0 (CVE-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-semver-5.6.0 (CVE-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-25883 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-semver-5.7.0 (CVE-2022-25883)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29167 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-hawk-3.1.3 (CVE-2022-29167)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-29167 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-hawk-1.0.0 (CVE-2022-29167)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-31129 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-moment-2.24.0 (CVE-2022-31129)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimatch-3.0.4 (CVE-2022-3517)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimatch-3.0.2 (CVE-2022-3517)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimatch-0.3.0 (CVE-2022-3517)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-minimatch-3.0.3 (CVE-2022-3517)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-3517 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2022-3517)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2022-38900)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-38900 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-decode-uri-component-0.2.0 (CVE-2022-38900)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4450 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2022-4450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4450 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2022-4450)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0215 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2023-0215)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0215 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2023-0215)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0286 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2023-0286)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0286 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2023-0286)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2023-0464)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0464 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2023-0464)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-25345 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-swig-1.4.2 (CVE-2023-25345)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-45133 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-babel-traverse-6.11.4 (CVE-2023-45133)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21538 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-cross-spawn-4.0.2 (CVE-2024-21538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21538 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-cross-spawn-4.0.0 (CVE-2024-21538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21538 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-21538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21538 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-cross-spawn-5.1.0 (CVE-2024-21538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21538 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-cross-spawn-6.0.5 (CVE-2024-21538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-21538 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-cross-spawn-7.0.3 (CVE-2024-21538)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-26461)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-26461)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-26461)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-26461)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26461 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-26461)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29415 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-29415)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-33599)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33599 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-33599)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-33601)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33601 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-33601)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-33602)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33602 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-33602)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37370 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37370)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37370 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37370)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37370 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37370)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37370 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37370)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-37370 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-37370)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-braces-2.3.2 (CVE-2024-4068)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4068 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-braces-1.8.5 (CVE-2024-4068)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-45296 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-path-to-regexp-0.1.7 (CVE-2024-45296)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-45590 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-body-parser-1.18.3 (CVE-2024-45590)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-4741)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4741 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-4741)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-52798 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-path-to-regexp-0.1.7 (CVE-2024-52798)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-5535 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-5535)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-5535 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2024-5535)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-0395 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-0395)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-0395 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-0395)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-22869 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-22869)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-29087 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-29087)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-29087 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-29087)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-4802 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-4802)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-4802 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-4802)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-48060 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-48060)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-48060 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-48060)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-6965 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-6965)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-6965 (containers)",
          "level": "error",
          "message": {
            "text": " (CVE-2025-6965)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx0b414307-5d4b (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-2.4.2 (Cx0b414307-5d4b)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx0b414307-5d4b (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.17.11 (Cx0b414307-5d4b)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx0b414307-5d4b (sca)",
          "level": "error",
          "message": {
            "text": "Npm-lodash-4.13.1 (Cx0b414307-5d4b)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx10578cb2-c0fc (sca)",
          "level": "error",
          "message": {
            "text": "Npm-cypress-3.3.1 (Cx10578cb2-c0fc)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx28d8d81d-c124 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-stringstream-0.0.5 (Cx28d8d81d-c124)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx2d55b83a-7aa0 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-braces-1.8.5 (Cx2d55b83a-7aa0)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx3f1b0502-ac0d (sca)",
          "level": "error",
          "message": {
            "text": "Npm-console-browserify-1.1.0 (Cx3f1b0502-ac0d)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx47c60579-4830 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (Cx47c60579-4830)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx62f5bb1b-fa5e (sca)",
          "level": "error",
          "message": {
            "text": "Npm-moment-2.24.0 (Cx62f5bb1b-fa5e)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxa8a11659-1098 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-tunnel-agent-0.4.3 (Cxa8a11659-1098)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxaa758609-b986 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (Cxaa758609-b986)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxb1cb3481-32bd (sca)",
          "level": "error",
          "message": {
            "text": "Npm-qs-0.6.6 (Cxb1cb3481-32bd)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxb244cccc-f1c7 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-ws-1.1.5 (Cxb244cccc-f1c7)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxb3ca64d2-9cd1 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-mocha-2.5.3 (Cxb3ca64d2-9cd1)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxb5ff3426-7838 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-handlebars-4.0.5 (Cxb5ff3426-7838)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxc6f5432f-0440 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-is-my-json-valid-2.15.0 (Cxc6f5432f-0440)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxcc09496a-59c8 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-js-yaml-3.5.5 (Cxcc09496a-59c8)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxcc09496a-59c8 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-js-yaml-3.6.1 (Cxcc09496a-59c8)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxd6c215a2-86bd (sca)",
          "level": "error",
          "message": {
            "text": "Npm-mongodb-2.2.36 (Cxd6c215a2-86bd)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxdca8e59f-8bfe (sca)",
          "level": "error",
          "message": {
            "text": "Npm-inflight-1.0.6 (Cxdca8e59f-8bfe)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxdca8e59f-8bfe (sca)",
          "level": "error",
          "message": {
            "text": "Npm-inflight-1.0.5 (Cxdca8e59f-8bfe)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxdca8e59f-8bfe (containers)",
          "level": "error",
          "message": {
            "text": " (Cxdca8e59f-8bfe)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxe299c2b0-ccc8 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-domutils-1.5.1 (Cxe299c2b0-ccc8)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxf3872f17-a858 (sca)",
          "level": "error",
          "message": {
            "text": "Npm-ws-1.1.5 (Cxf3872f17-a858)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Reflected XSS - 16772998409937314312 (sast)",
          "level": "error",
          "message": {
            "text": "Reflected XSS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 17,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "Hashicorp-Tf-Password - hashicorp-tf-password (sscs-secret-detection)",
          "level": "error",
          "message": {
            "text": "No description provided"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/security/profile-test.js"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "\"Use***"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH",
            "validity": "Unknown"
          }
        },
        {
          "ruleId": "Reflected XSS - 16772998409937314312 (sast)",
          "level": "error",
          "message": {
            "text": "Reflected XSS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 35,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 25,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 32,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "Reflected XSS - 16772998409937314312 (sast)",
          "level": "error",
          "message": {
            "text": "Reflected XSS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "Private-Key - private-key (sscs-secret-detection)",
          "level": "error",
          "message": {
            "text": "No description provided"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/cert/server.key"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "MIIC***"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH",
            "validity": "Unknown"
          }
        },
        {
          "ruleId": "Token-Permissions - TokenPermissionsID (sscs-scorecard)",
          "level": "error",
          "message": {
            "text": "score is 0: no topLevel permission defined"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/e2e-test.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH"
          }
        },
        {
          "ruleId": "Code-Review - CodeReviewID (sscs-scorecard)",
          "level": "error",
          "message": {
            "text": "score is 0: found 30 unreviewed changesets out of 30 -- score normalized to 0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "UNKNOWN_FILE"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH"
          }
        },
        {
          "ruleId": "SSRF - 9890841350290224058 (sast)",
          "level": "error",
          "message": {
            "text": "SSRF"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/research.js"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 35,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/research.js"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 19,
                  "endColumn": 22
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/research.js"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 31,
                  "endColumn": 34
                }
              }
            }
          ]
        },
        {
          "ruleId": "Reflected XSS - 16772998409937314312 (sast)",
          "level": "error",
          "message": {
            "text": "Reflected XSS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 17,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/contributions.js"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "Reflected XSS - 16772998409937314312 (sast)",
          "level": "error",
          "message": {
            "text": "Reflected XSS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/memos.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/memos.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/memos.js"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/memos.js"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/memos.js"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/memos.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 25,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/memos.js"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 17,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/memos.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "Reflected XSS - 16772998409937314312 (sast)",
          "level": "error",
          "message": {
            "text": "Reflected XSS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 35,
                  "endColumn": 43
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 25,
                  "endColumn": 33
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 32,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "Branch-Protection - BranchProtectionID (sscs-scorecard)",
          "level": "error",
          "message": {
            "text": "score is 0: branch protection not enabled on development/release branches:\nWarn: branch protection not enabled for branch &#39;master&#39;"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "UNKNOWN_FILE"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH"
          }
        },
        {
          "ruleId": "Maintained - MaintainedID (sscs-scorecard)",
          "level": "error",
          "message": {
            "text": "score is 0: project was created in last 90 days. please review its contents carefully:\nWarn: Did not find contribution within the threshold.\nWarn: Did not find issues within the threshold.\nWarn: Repository was created in last 90 days."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "UNKNOWN_FILE"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH"
          }
        },
        {
          "ruleId": "Hashicorp-Tf-Password - hashicorp-tf-password (sscs-secret-detection)",
          "level": "error",
          "message": {
            "text": "No description provided"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/db-reset.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "\"Use***"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "HIGH",
            "validity": "Unknown"
          }
        },
        {
          "ruleId": "Reflected XSS - 16772998409937314312 (sast)",
          "level": "error",
          "message": {
            "text": "Reflected XSS"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/profile.js"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 17,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/profile.js"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/profile.js"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/profile.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/profile.js"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/profile.js"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 17,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/profile.js"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 17,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/profile.js"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "Security Opt Not Set - 610e266e-6c12-4bca-9925-1ed0cd29742b [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Security Opt Not Set"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Healthcheck Not Set - 698ed579-b239-4f8f-a388-baa4bcb13ef8 [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Healthcheck Not Set"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Use Of Hardcoded Password - 2783517675732844652 (sast)",
          "level": "warning",
          "message": {
            "text": "Use Of Hardcoded Password"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/db-reset.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 21,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/db-reset.js"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 10,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "Fuzzing - FuzzingID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 0: project is not fuzzed:\nWarn: no OSSFuzz integration found\nWarn: no GoBuiltInFuzzer integration found\nWarn: no PythonAtherisFuzzer integration found\nWarn: no CLibFuzzer integration found\nWarn: no CppLibFuzzer integration found\nWarn: no SwiftLibFuzzer integration found\nWarn: no RustCargoFuzzer integration found\nWarn: no JavaJazzerFuzzer integration found\nWarn: no ClusterFuzzLite integration found\nWarn: no HaskellPropertyBasedTesting integration found\nWarn: no TypeScriptPropertyBasedTesting integration found\nWarn: no JavaScriptPropertyBasedTesting integration found"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "UNKNOWN_FILE"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: containerImage not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "FROM node:12-alpine"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "CVE-2014-7191 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-qs-0.6.6 (CVE-2014-7191)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-1000232 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-tough-cookie-2.2.2 (CVE-2016-1000232)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2016-10531 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-marked-0.3.5 (CVE-2016-10531)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-1000427 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-marked-0.3.5 (CVE-2017-1000427)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16026 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-request-2.67.0 (CVE-2017-16026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16026 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-request-2.36.0 (CVE-2017-16026)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16028 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-randomatic-1.1.5 (CVE-2017-16028)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-16137 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-debug-2.2.0 (CVE-2017-16137)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-20162 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-ms-0.7.1 (CVE-2017-20162)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1002204 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-adm-zip-0.4.4 (CVE-2018-1002204)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1107 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-is-my-json-valid-2.15.0 (CVE-2018-1107)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-1109 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-braces-1.8.5 (CVE-2018-1109)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16487 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-2.4.2 (CVE-2018-16487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-16487 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-4.13.1 (CVE-2018-16487)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-21270 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-stringstream-0.0.5 (CVE-2018-21270)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-25110 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-marked-0.3.5 (CVE-2018-25110)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-3721 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-4.13.1 (CVE-2018-3721)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2018-3721 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-2.4.2 (CVE-2018-3721)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010266 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-2.4.2 (CVE-2019-1010266)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-1010266 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-4.13.1 (CVE-2019-1010266)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-10795 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-undefsafe-2.0.2 (CVE-2019-10795)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16775 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-npm-3.10.10 (CVE-2019-16775)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-16777 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-npm-3.10.10 (CVE-2019-16777)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2019-2391 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-bson-1.0.9 (CVE-2019-2391)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15095 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-npm-3.10.10 (CVE-2020-15095)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-15366 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-ajv-6.10.0 (CVE-2020-15366)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28500 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-4.13.1 (CVE-2020-28500)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28500 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-4.17.11 (CVE-2020-28500)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28500 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-4.17.20 (CVE-2020-28500)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-28500 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-lodash-2.4.2 (CVE-2020-28500)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-minimist-1.2.0 (CVE-2020-7598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-minimist-0.0.10 (CVE-2020-7598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7598 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-minimist-0.0.8 (CVE-2020-7598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-7608 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-yargs-parser-2.4.1 (CVE-2020-7608)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8244 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-bl-1.1.2 (CVE-2020-8244)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2020-8244 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-bl-1.0.3 (CVE-2020-8244)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23362 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-hosted-git-info-2.1.5 (CVE-2021-23362)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2021-23362 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-hosted-git-info-2.7.1 (CVE-2021-23362)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-0436 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-grunt-1.0.3 (CVE-2022-0436)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2022-2097)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-2097 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2022-2097)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2022-33987)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-33987 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-got-6.7.1 (CVE-2022-33987)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4304 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2022-4304)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2022-4304 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2022-4304)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-0465)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0465 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-0465)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-0842 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-xml2js-0.4.4 (CVE-2023-0842)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-2650)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-2650 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-2650)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-request-2.88.0 (CVE-2023-28155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-request-2.36.0 (CVE-2023-28155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-request-2.67.0 (CVE-2023-28155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-request-2.75.0 (CVE-2023-28155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-request-2.79.0 (CVE-2023-28155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-28155 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-28155)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-3446)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3446 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-3446)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-3817)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-3817 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-3817)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-4039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-4039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-4039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-4039 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-4039)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-48795 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-48795)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-5678)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2023-5678 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2023-5678)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-12133 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-12133)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-12243 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-12243)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-13176 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-13176)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-13176 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-13176)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-23337 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-23337)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-23337 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-23337)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26458)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26458)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26458)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26458)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26458 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26458)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26462)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26462)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26462)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26462)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-26462 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-26462)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-27088 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-es5-ext-0.10.12 (CVE-2024-27088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-tar-4.4.8 (CVE-2024-28863)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-28863)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-28863 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-tar-2.2.1 (CVE-2024-28863)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-29041 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-express-4.16.4 (CVE-2024-29041)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-33600)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-33600 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-33600)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4067 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-micromatch-2.3.11 (CVE-2024-4067)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4067 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-micromatch-3.1.10 (CVE-2024-4067)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43796 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-express-4.16.4 (CVE-2024-43796)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43799 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-send-0.16.2 (CVE-2024-43799)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-43800 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-serve-static-1.13.2 (CVE-2024-43800)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-4603)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-4603 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-4603)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-47764 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-cookie-0.3.1 (CVE-2024-47764)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-7264 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-7264)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-7264 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-7264)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-8096 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-8096)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-8096 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-8096)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-9143 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-9143)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-9143 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2024-9143)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-29088 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-29088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-29088 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-29088)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-3277 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-3277)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-3277 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-3277)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-3576 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-3576)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-3576 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-3576)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-3576 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-3576)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-3576 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-3576)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-3576 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-3576)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-4598 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-4598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-4598 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-4598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-4598 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-4598)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-4877 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-4877)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-5318 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-5318)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-8262 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-8262)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-9308 (containers)",
          "level": "warning",
          "message": {
            "text": " (CVE-2025-9308)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx3bab5572-419d (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-marked-0.3.5 (Cx3bab5572-419d)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx41fbf2f3-5595 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-shelljs-0.3.0 (Cx41fbf2f3-5595)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx435a6fda-ca38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-commander-2.15.1 (Cx435a6fda-ca38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx435a6fda-ca38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-commander-0.6.1 (Cx435a6fda-ca38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx435a6fda-ca38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-commander-2.5.1 (Cx435a6fda-ca38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx435a6fda-ca38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-commander-2.9.0 (Cx435a6fda-ca38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx435a6fda-ca38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-commander-2.19.0 (Cx435a6fda-ca38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx435a6fda-ca38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-commander-2.3.0 (Cx435a6fda-ca38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx6b14edb9-2afd (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-helmet-csp-1.2.2 (Cx6b14edb9-2afd)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx77c0fe72-ea38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-yauzl-2.4.1 (Cx77c0fe72-ea38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx816df59e-1cc9 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-marked-0.3.5 (Cx816df59e-1cc9)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx9b9f022f-6dff (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-marked-0.3.5 (Cx9b9f022f-6dff)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxbd6f2b91-dd38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-debug-3.2.6 (Cxbd6f2b91-dd38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxbd6f2b91-dd38 (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-debug-4.1.1 (Cxbd6f2b91-dd38)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxec49316b-56df (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-js-yaml-3.5.5 (Cxec49316b-56df)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxec49316b-56df (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-js-yaml-3.6.1 (Cxec49316b-56df)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxef2b7924-22da (sca)",
          "level": "warning",
          "message": {
            "text": "Npm-marked-0.3.5 (Cxef2b7924-22da)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Missing HSTS Header - 7630264517191277634 (sast)",
          "level": "warning",
          "message": {
            "text": "Missing HSTS Header"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "Container Traffic Not Bound To Host Interface - 451d79dc-0588-476a-ad03-3c7f0320abb3 [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Container Traffic Not Bound To Host Interface"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: GitHub-owned GitHubAction not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/lint.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "actions/checkout@v2"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Security-Policy - SecurityPolicyID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 0: security policy file not detected:\nWarn: no security policy file detected\nWarn: no security file to analyze\nWarn: no security file to analyze\nWarn: no security file to analyze"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "UNKNOWN_FILE"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Container Capabilities Unrestricted - ce76b7d0-9e77-464d-b86f-c5c48e03e22d [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Container Capabilities Unrestricted"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Security Opt Not Set - 610e266e-6c12-4bca-9925-1ed0cd29742b [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Security Opt Not Set"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Memory Not Limited - bb9ac4f7-e13b-423d-a010-c74a1bfbe492 [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Memory Not Limited"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Container Capabilities Unrestricted - ce76b7d0-9e77-464d-b86f-c5c48e03e22d [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Container Capabilities Unrestricted"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: GitHub-owned GitHubAction not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/e2e-test.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "actions/setup-node@v1"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: GitHub-owned GitHubAction not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/lint.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "actions/setup-node@v1"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Healthcheck Not Set - 698ed579-b239-4f8f-a388-baa4bcb13ef8 [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Healthcheck Not Set"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: GitHub-owned GitHubAction not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/e2e-test.yml"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "actions/upload-artifact@v2"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: containerImage not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "FROM node:12-alpine"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Open Redirect - 1110909642375850288 (sast)",
          "level": "warning",
          "message": {
            "text": "Open Redirect"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/index.js"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 39,
                  "endColumn": 42
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/index.js"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 20,
                  "endColumn": 28
                }
              }
            }
          ]
        },
        {
          "ruleId": "Memory Not Limited - bb9ac4f7-e13b-423d-a010-c74a1bfbe492 [Taken from query_id] (kics)",
          "level": "warning",
          "message": {
            "text": "Memory Not Limited"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: npmCommand not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "npm install --production --no-cache"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Use Of Hardcoded Password - 2783517675732844652 (sast)",
          "level": "warning",
          "message": {
            "text": "Use Of Hardcoded Password"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/db-reset.js"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/db-reset.js"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 10,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: GitHub-owned GitHubAction not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/e2e-test.yml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "actions/cache@v2"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Pinned-Dependencies - PinnedDependenciesID (sscs-scorecard)",
          "level": "warning",
          "message": {
            "text": "score is 1: GitHub-owned GitHubAction not pinned by hash"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": ".github/workflows/e2e-test.yml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endColumn": 2,
                  "snippet": {
                    "text": "actions/checkout@v2"
                  }
                }
              }
            }
          ],
          "properties": {
            "severity": "MEDIUM"
          }
        },
        {
          "ruleId": "Use Of Hardcoded Password - 2783517675732844652 (sast)",
          "level": "warning",
          "message": {
            "text": "Use Of Hardcoded Password"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/db-reset.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 21,
                  "endColumn": 32
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "artifacts/db-reset.js"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 10,
                  "endColumn": 18
                }
              }
            }
          ]
        },
        {
          "ruleId": "Healthcheck Instruction Missing - b03a748a-542d-44f4-bb86-9199ab4fd2d5 [Taken from query_id] (kics)",
          "level": "note",
          "message": {
            "text": "Healthcheck Instruction Missing"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Using Unnamed Build Stages - 68a51e22-ae5a-4d48-8e87-b01a323605c9 [Taken from query_id] (kics)",
          "level": "note",
          "message": {
            "text": "Using Unnamed Build Stages"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Unsafe Use Of Target blank - 17155209939029667221 (sast)",
          "level": "note",
          "message": {
            "text": "Unsafe Use Of Target blank"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/views/login.html"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 29,
                  "endColumn": 65
                }
              }
            }
          ]
        },
        {
          "ruleId": "Log Forging - 18393124805143970484 (sast)",
          "level": "note",
          "message": {
            "text": "Log Forging"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 11,
                  "endColumn": 25
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 80,
                  "endColumn": 88
                }
              }
            },
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/session.js"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 29,
                  "endColumn": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2017-18869 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-chownr-1.0.1 (CVE-2017-18869)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-11053 (containers)",
          "level": "note",
          "message": {
            "text": " (CVE-2024-11053)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-11053 (containers)",
          "level": "note",
          "message": {
            "text": " (CVE-2024-11053)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511 (containers)",
          "level": "note",
          "message": {
            "text": " (CVE-2024-2511)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2024-2511 (containers)",
          "level": "note",
          "message": {
            "text": " (CVE-2024-2511)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-30258 (containers)",
          "level": "note",
          "message": {
            "text": " (CVE-2025-30258)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-30258 (containers)",
          "level": "note",
          "message": {
            "text": " (CVE-2025-30258)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-4878 (containers)",
          "level": "note",
          "message": {
            "text": " (CVE-2025-4878)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-54798 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-tmp-0.0.24 (CVE-2025-54798)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-54798 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-tmp-0.1.0 (CVE-2025-54798)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-5889 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-brace-expansion-1.1.6 (CVE-2025-5889)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-5889 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-brace-expansion-1.1.11 (CVE-2025-5889)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-5889 (containers)",
          "level": "note",
          "message": {
            "text": " (CVE-2025-5889)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CVE-2025-7339 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-on-headers-1.0.1 (CVE-2025-7339)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx61ff18e9-706e (sca)",
          "level": "note",
          "message": {
            "text": "Npm-utile-0.3.0 (Cx61ff18e9-706e)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx61ff18e9-706e (sca)",
          "level": "note",
          "message": {
            "text": "Npm-utile-0.2.1 (Cx61ff18e9-706e)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx8bc4df28-fcf5 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-debug-4.1.1 (Cx8bc4df28-fcf5)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx8bc4df28-fcf5 (containers)",
          "level": "note",
          "message": {
            "text": " (Cx8bc4df28-fcf5)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx8bc4df28-fcf5 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-debug-3.2.6 (Cx8bc4df28-fcf5)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx8bc4df28-fcf5 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-debug-2.2.0 (Cx8bc4df28-fcf5)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cx8bc4df28-fcf5 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-debug-2.6.9 (Cx8bc4df28-fcf5)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxa6b1c6b3-0f59 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-http-signature-0.10.1 (Cxa6b1c6b3-0f59)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxda14f253-4e52 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-bluebird-3.5.0 (Cxda14f253-4e52)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxda14f253-4e52 (containers)",
          "level": "note",
          "message": {
            "text": " (Cxda14f253-4e52)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cxda14f253-4e52 (sca)",
          "level": "note",
          "message": {
            "text": "Npm-bluebird-3.5.3 (Cxda14f253-4e52)"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "package.json"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Missing CSP Header - 729519850006803664 (sast)",
          "level": "note",
          "message": {
            "text": "Missing CSP Header"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/routes/allocations.js"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 24,
                  "endColumn": 30
                }
              }
            }
          ]
        },
        {
          "ruleId": "Unsafe Use Of Target blank - 17155209939029667221 (sast)",
          "level": "note",
          "message": {
            "text": "Unsafe Use Of Target blank"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/views/layout.html"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 25,
                  "endColumn": 207
                }
              }
            }
          ]
        },
        {
          "ruleId": "Unsafe Use Of Target blank - 17155209939029667221 (sast)",
          "level": "note",
          "message": {
            "text": "Unsafe Use Of Target blank"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app/views/tutorial/a7.html"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 359,
                  "endColumn": 419
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cpus Not Limited - 6b610c50-99fb-4ef0-a5f3-e312fd945bc3 [Taken from query_id] (kics)",
          "level": "note",
          "message": {
            "text": "Cpus Not Limited"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "Cpus Not Limited - 6b610c50-99fb-4ef0-a5f3-e312fd945bc3 [Taken from query_id] (kics)",
          "level": "note",
          "message": {
            "text": "Cpus Not Limited"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "docker-compose.yml"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        },
        {
          "ruleId": "CII-Best-Practices - CIIBestPracticesID (sscs-scorecard)",
          "level": "note",
          "message": {
            "text": "score is 0: no effort to earn an OpenSSF best practices badge detected"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "UNKNOWN_FILE"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ],
          "properties": {
            "severity": "LOW"
          }
        },
        {
          "ruleId": "Chown Flag Exists - aa93e17f-b6db-4162-9334-c70334e7ac28 [Taken from query_id] (kics)",
          "level": "note",
          "message": {
            "text": "Chown Flag Exists"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Dockerfile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "endColumn": 2
                }
              }
            }
          ]
        }
      ]
    }
  ]
}